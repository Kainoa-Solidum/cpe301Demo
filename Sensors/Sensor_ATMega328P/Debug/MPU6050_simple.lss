
MPU6050_simple.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  0000117e  00001212  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000117e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080010c  0080010c  0000121e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000121e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000127c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000012bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dce  00000000  00000000  00001384  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000092a  00000000  00000000  00002152  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000077a  00000000  00000000  00002a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000017c  00000000  00000000  000031f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000544  00000000  00000000  00003374  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003d1  00000000  00000000  000038b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003c89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
       4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__stack+0xc3>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__fp_splitA+0x32>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <main+0x5a>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <i2c_start+0x22>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d8 e0       	ldi	r29, 0x08	; 8
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	ee e7       	ldi	r30, 0x7E	; 126
     176:	f1 e1       	ldi	r31, 0x11	; 17
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	ac 30       	cpi	r26, 0x0C	; 12
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	ac e0       	ldi	r26, 0x0C	; 12
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
     18e:	a1 31       	cpi	r26, 0x11	; 17
     190:	b2 07       	cpc	r27, r18
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
     194:	0e 94 c3 01 	call	0x386	; 0x386 <main>
     198:	0c 94 bd 08 	jmp	0x117a	; 0x117a <_exit>

0000019c <__bad_interrupt>:
     19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <i2c_init>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     1a0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     1a4:	8c e0       	ldi	r24, 0x0C	; 12
     1a6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     1aa:	08 95       	ret

000001ac <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     1ac:	94 ea       	ldi	r25, 0xA4	; 164
     1ae:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     1b2:	ec eb       	ldi	r30, 0xBC	; 188
     1b4:	f0 e0       	ldi	r31, 0x00	; 0
     1b6:	90 81       	ld	r25, Z
     1b8:	99 23       	and	r25, r25
     1ba:	ec f7       	brge	.-6      	; 0x1b6 <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     1bc:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     1c0:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     1c2:	98 30       	cpi	r25, 0x08	; 8
     1c4:	11 f0       	breq	.+4      	; 0x1ca <i2c_start+0x1e>
     1c6:	90 31       	cpi	r25, 0x10	; 16
     1c8:	a1 f4       	brne	.+40     	; 0x1f2 <i2c_start+0x46>

	// send device address
	TWDR = address;
     1ca:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     1ce:	84 e8       	ldi	r24, 0x84	; 132
     1d0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     1d4:	ec eb       	ldi	r30, 0xBC	; 188
     1d6:	f0 e0       	ldi	r31, 0x00	; 0
     1d8:	80 81       	ld	r24, Z
     1da:	88 23       	and	r24, r24
     1dc:	ec f7       	brge	.-6      	; 0x1d8 <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     1de:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     1e2:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     1e4:	98 31       	cpi	r25, 0x18	; 24
     1e6:	39 f0       	breq	.+14     	; 0x1f6 <i2c_start+0x4a>
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     1e8:	81 e0       	ldi	r24, 0x01	; 1
     1ea:	90 34       	cpi	r25, 0x40	; 64
     1ec:	29 f4       	brne	.+10     	; 0x1f8 <i2c_start+0x4c>
     1ee:	80 e0       	ldi	r24, 0x00	; 0
     1f0:	08 95       	ret
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     1f6:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     1f8:	08 95       	ret

000001fa <i2c_start_wait>:
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
{
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     1fe:	ec eb       	ldi	r30, 0xBC	; 188
     200:	f0 e0       	ldi	r31, 0x00	; 0
     202:	24 ea       	ldi	r18, 0xA4	; 164
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     204:	a9 eb       	ldi	r26, 0xB9	; 185
     206:	b0 e0       	ldi	r27, 0x00	; 0
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
     208:	cb eb       	ldi	r28, 0xBB	; 187
     20a:	d0 e0       	ldi	r29, 0x00	; 0
    	TWCR = (1<<TWINT) | (1<<TWEN);
     20c:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     20e:	44 e9       	ldi	r20, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     210:	20 83       	st	Z, r18
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     212:	90 81       	ld	r25, Z
     214:	99 23       	and	r25, r25
     216:	ec f7       	brge	.-6      	; 0x212 <i2c_start_wait+0x18>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     218:	9c 91       	ld	r25, X
     21a:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     21c:	98 30       	cpi	r25, 0x08	; 8
     21e:	11 f0       	breq	.+4      	; 0x224 <i2c_start_wait+0x2a>
     220:	90 31       	cpi	r25, 0x10	; 16
     222:	b1 f7       	brne	.-20     	; 0x210 <i2c_start_wait+0x16>
    
    	// send device address
    	TWDR = address;
     224:	88 83       	st	Y, r24
    	TWCR = (1<<TWINT) | (1<<TWEN);
     226:	30 83       	st	Z, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     228:	90 81       	ld	r25, Z
     22a:	99 23       	and	r25, r25
     22c:	ec f7       	brge	.-6      	; 0x228 <i2c_start_wait+0x2e>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     22e:	9c 91       	ld	r25, X
     230:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     232:	90 32       	cpi	r25, 0x20	; 32
     234:	11 f0       	breq	.+4      	; 0x23a <i2c_start_wait+0x40>
     236:	98 35       	cpi	r25, 0x58	; 88
     238:	29 f4       	brne	.+10     	; 0x244 <i2c_start_wait+0x4a>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     23a:	40 83       	st	Z, r20
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     23c:	90 81       	ld	r25, Z
     23e:	94 fd       	sbrc	r25, 4
     240:	fd cf       	rjmp	.-6      	; 0x23c <i2c_start_wait+0x42>
     242:	e6 cf       	rjmp	.-52     	; 0x210 <i2c_start_wait+0x16>
    	}
    	//if( twst != TW_MT_SLA_ACK) return 1;
    	break;
     }

}/* i2c_start_wait */
     244:	df 91       	pop	r29
     246:	cf 91       	pop	r28
     248:	08 95       	ret

0000024a <i2c_rep_start>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
     24a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_start>

}/* i2c_rep_start */
     24e:	08 95       	ret

00000250 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     250:	84 e9       	ldi	r24, 0x94	; 148
     252:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     256:	ec eb       	ldi	r30, 0xBC	; 188
     258:	f0 e0       	ldi	r31, 0x00	; 0
     25a:	80 81       	ld	r24, Z
     25c:	84 fd       	sbrc	r24, 4
     25e:	fd cf       	rjmp	.-6      	; 0x25a <i2c_stop+0xa>

}/* i2c_stop */
     260:	08 95       	ret

00000262 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     262:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     266:	84 e8       	ldi	r24, 0x84	; 132
     268:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     26c:	ec eb       	ldi	r30, 0xBC	; 188
     26e:	f0 e0       	ldi	r31, 0x00	; 0
     270:	80 81       	ld	r24, Z
     272:	88 23       	and	r24, r24
     274:	ec f7       	brge	.-6      	; 0x270 <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     276:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     27a:	98 7f       	andi	r25, 0xF8	; 248
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	98 32       	cpi	r25, 0x28	; 40
     280:	09 f4       	brne	.+2      	; 0x284 <i2c_write+0x22>
     282:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     284:	08 95       	ret

00000286 <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     286:	84 ec       	ldi	r24, 0xC4	; 196
     288:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));    
     28c:	ec eb       	ldi	r30, 0xBC	; 188
     28e:	f0 e0       	ldi	r31, 0x00	; 0
     290:	80 81       	ld	r24, Z
     292:	88 23       	and	r24, r24
     294:	ec f7       	brge	.-6      	; 0x290 <i2c_readAck+0xa>

    return TWDR;
     296:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2c_readAck */
     29a:	08 95       	ret

0000029c <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     29c:	84 e8       	ldi	r24, 0x84	; 132
     29e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));
     2a2:	ec eb       	ldi	r30, 0xBC	; 188
     2a4:	f0 e0       	ldi	r31, 0x00	; 0
     2a6:	80 81       	ld	r24, Z
     2a8:	88 23       	and	r24, r24
     2aa:	ec f7       	brge	.-6      	; 0x2a6 <i2c_readNak+0xa>
	
    return TWDR;
     2ac:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2c_readNak */
     2b0:	08 95       	ret

000002b2 <MPU6050_writereg>:
uint16_t raw;             // raw sensor value
uint16_t acrawx;          // x axis acceleration raw value


void MPU6050_writereg(uint8_t reg, uint8_t val)
{
     2b2:	cf 93       	push	r28
     2b4:	df 93       	push	r29
     2b6:	d8 2f       	mov	r29, r24
     2b8:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050+I2C_WRITE);
     2ba:	80 ed       	ldi	r24, 0xD0	; 208
     2bc:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_start>
	i2c_write(reg);  // go to register e.g. 106 user control
     2c0:	8d 2f       	mov	r24, r29
     2c2:	0e 94 31 01 	call	0x262	; 0x262 <i2c_write>
	i2c_write(val);  // set value e.g. to 0100 0000 FIFO enable
     2c6:	8c 2f       	mov	r24, r28
     2c8:	0e 94 31 01 	call	0x262	; 0x262 <i2c_write>
	i2c_stop();      // set stop condition = release bus
     2cc:	0e 94 28 01 	call	0x250	; 0x250 <i2c_stop>
}
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	08 95       	ret

000002d6 <MPU6050_readreg>:


uint16_t MPU6050_readreg(uint8_t reg)
{
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	c8 2f       	mov	r28, r24
	i2c_start_wait(MPU6050+I2C_WRITE);  // set device address and write mode
     2dc:	80 ed       	ldi	r24, 0xD0	; 208
     2de:	0e 94 fd 00 	call	0x1fa	; 0x1fa <i2c_start_wait>
	i2c_write(reg);                     // ACCEL_XOUT
     2e2:	8c 2f       	mov	r24, r28
     2e4:	0e 94 31 01 	call	0x262	; 0x262 <i2c_write>
	i2c_rep_start(MPU6050+I2C_READ);    // set device address and read mode
     2e8:	81 ed       	ldi	r24, 0xD1	; 209
     2ea:	0e 94 25 01 	call	0x24a	; 0x24a <i2c_rep_start>
	raw = i2c_readAck();                // read one intermediate byte
     2ee:	0e 94 43 01 	call	0x286	; 0x286 <i2c_readAck>
     2f2:	c8 2f       	mov	r28, r24
     2f4:	d0 e0       	ldi	r29, 0x00	; 0
     2f6:	d0 93 0d 01 	sts	0x010D, r29	; 0x80010d <__data_end+0x1>
     2fa:	c0 93 0c 01 	sts	0x010C, r28	; 0x80010c <__data_end>
	raw = (raw<<8) | i2c_readNak();     // read last byte
     2fe:	0e 94 4e 01 	call	0x29c	; 0x29c <i2c_readNak>
     302:	dc 2f       	mov	r29, r28
     304:	cc 27       	eor	r28, r28
     306:	c8 2b       	or	r28, r24
     308:	d0 93 0d 01 	sts	0x010D, r29	; 0x80010d <__data_end+0x1>
     30c:	c0 93 0c 01 	sts	0x010C, r28	; 0x80010c <__data_end>
	i2c_stop();
     310:	0e 94 28 01 	call	0x250	; 0x250 <i2c_stop>
	
	return raw;
}
     314:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
     318:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
     31c:	df 91       	pop	r29
     31e:	cf 91       	pop	r28
     320:	08 95       	ret

00000322 <Init_MPU6050>:


void Init_MPU6050()
{
	i2c_init();     // init I2C interface
     322:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <i2c_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     326:	2f ef       	ldi	r18, 0xFF	; 255
     328:	83 ec       	ldi	r24, 0xC3	; 195
     32a:	99 e0       	ldi	r25, 0x09	; 9
     32c:	21 50       	subi	r18, 0x01	; 1
     32e:	80 40       	sbci	r24, 0x00	; 0
     330:	90 40       	sbci	r25, 0x00	; 0
     332:	e1 f7       	brne	.-8      	; 0x32c <Init_MPU6050+0xa>
     334:	00 c0       	rjmp	.+0      	; 0x336 <Init_MPU6050+0x14>
     336:	00 00       	nop
	_delay_ms(200);  // Wait for 200 ms.

	ret = i2c_start(MPU6050+I2C_WRITE);       // set device address and write mode
     338:	80 ed       	ldi	r24, 0xD0	; 208
     33a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_start>
     33e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <ret>
	if ( ret )
     342:	88 23       	and	r24, r24
     344:	19 f0       	breq	.+6      	; 0x34c <Init_MPU6050+0x2a>
	{
		/* failed to issue start condition, possibly no device found */
		i2c_stop();
     346:	0e 94 28 01 	call	0x250	; 0x250 <i2c_stop>
     34a:	ff cf       	rjmp	.-2      	; 0x34a <Init_MPU6050+0x28>
		while(1) {;;}  // lock program here as sensor init failed
	}
	else
	{
		/* issuing start condition ok, device accessible */
		MPU6050_writereg(0x6B, 0x00); // go to register 107 set value to 0000 0000 and wake up sensor
     34c:	60 e0       	ldi	r22, 0x00	; 0
     34e:	8b e6       	ldi	r24, 0x6B	; 107
     350:	0e 94 59 01 	call	0x2b2	; 0x2b2 <MPU6050_writereg>
		MPU6050_writereg(0x19, 0x08); // go to register 25 sample rate divider set value to 0000 1000 for 1000 Hz
     354:	68 e0       	ldi	r22, 0x08	; 8
     356:	89 e1       	ldi	r24, 0x19	; 25
     358:	0e 94 59 01 	call	0x2b2	; 0x2b2 <MPU6050_writereg>
		MPU6050_writereg(0x1C, 0x08); // go to register 28 acceleration configuration set value to 0000 1000 for 4g
     35c:	68 e0       	ldi	r22, 0x08	; 8
     35e:	8c e1       	ldi	r24, 0x1C	; 28
     360:	0e 94 59 01 	call	0x2b2	; 0x2b2 <MPU6050_writereg>
		MPU6050_writereg(0x23, 0xF8); // go to register 35 FIFO enable set value to 1111 1000 for all sensors not slave
     364:	68 ef       	ldi	r22, 0xF8	; 248
     366:	83 e2       	ldi	r24, 0x23	; 35
     368:	0e 94 59 01 	call	0x2b2	; 0x2b2 <MPU6050_writereg>
		MPU6050_writereg(0x37, 0x10); // go to register 55 interrupt configuration set value to 0001 0000 for logic level high and read clear
     36c:	60 e1       	ldi	r22, 0x10	; 16
     36e:	87 e3       	ldi	r24, 0x37	; 55
     370:	0e 94 59 01 	call	0x2b2	; 0x2b2 <MPU6050_writereg>
		MPU6050_writereg(0x38, 0x01); // go to register 56 interrupt enable set value to 0000 0001 data ready creates interrupt
     374:	61 e0       	ldi	r22, 0x01	; 1
     376:	88 e3       	ldi	r24, 0x38	; 56
     378:	0e 94 59 01 	call	0x2b2	; 0x2b2 <MPU6050_writereg>
		MPU6050_writereg(0x6A, 0x40); // go to register 106 user control set value to 0100 0000 FIFO enable
     37c:	60 e4       	ldi	r22, 0x40	; 64
     37e:	8a e6       	ldi	r24, 0x6A	; 106
     380:	0e 94 59 01 	call	0x2b2	; 0x2b2 <MPU6050_writereg>
     384:	08 95       	ret

00000386 <main>:
	}
}

int main(void)
{
     386:	cf 93       	push	r28
     388:	df 93       	push	r29
     38a:	cd b7       	in	r28, 0x3d	; 61
     38c:	de b7       	in	r29, 0x3e	; 62
     38e:	6e 97       	sbiw	r28, 0x1e	; 30
     390:	0f b6       	in	r0, 0x3f	; 63
     392:	f8 94       	cli
     394:	de bf       	out	0x3e, r29	; 62
     396:	0f be       	out	0x3f, r0	; 63
     398:	cd bf       	out	0x3d, r28	; 61
	float Xa;
	char buffer[20], float_[10];
	USART_Init(9600);									/* Initialize USART with 9600 baud rate */
     39a:	60 e8       	ldi	r22, 0x80	; 128
     39c:	75 e2       	ldi	r23, 0x25	; 37
     39e:	80 e0       	ldi	r24, 0x00	; 0
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	0e 94 19 02 	call	0x432	; 0x432 <USART_Init>
	acrawx = 0;        // initial value, without read led will not blink
     3a6:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <acrawx+0x1>
     3aa:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <acrawx>

	sei();             // Enable global interrupts
     3ae:	78 94       	sei

	Init_MPU6050();    // Sensor init
     3b0:	0e 94 91 01 	call	0x322	; 0x322 <Init_MPU6050>
     3b4:	2f ef       	ldi	r18, 0xFF	; 255
     3b6:	83 ec       	ldi	r24, 0xC3	; 195
     3b8:	99 e0       	ldi	r25, 0x09	; 9
     3ba:	21 50       	subi	r18, 0x01	; 1
     3bc:	80 40       	sbci	r24, 0x00	; 0
     3be:	90 40       	sbci	r25, 0x00	; 0
     3c0:	e1 f7       	brne	.-8      	; 0x3ba <main+0x34>
     3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <main+0x3e>
     3c4:	00 00       	nop

	while (1)
	{
	acrawx = MPU6050_readreg(0x3B);   // read raw X acceleration from fifo
	Xa = acrawx/8192.0;
	dtostrf( Xa, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     3c6:	7e 01       	movw	r14, r28
     3c8:	25 e1       	ldi	r18, 0x15	; 21
     3ca:	e2 0e       	add	r14, r18
     3cc:	f1 1c       	adc	r15, r1
	sprintf(buffer," Ax = %s g\n",float_);
     3ce:	0f 2e       	mov	r0, r31
     3d0:	f0 e0       	ldi	r31, 0x00	; 0
     3d2:	af 2e       	mov	r10, r31
     3d4:	f1 e0       	ldi	r31, 0x01	; 1
     3d6:	bf 2e       	mov	r11, r31
     3d8:	f0 2d       	mov	r31, r0
     3da:	ce 01       	movw	r24, r28
     3dc:	01 96       	adiw	r24, 0x01	; 1
     3de:	6c 01       	movw	r12, r24
	Init_MPU6050();    // Sensor init
	_delay_ms(200);     // Wait for 200 ms.

	while (1)
	{
	acrawx = MPU6050_readreg(0x3B);   // read raw X acceleration from fifo
     3e0:	8b e3       	ldi	r24, 0x3B	; 59
     3e2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <MPU6050_readreg>
     3e6:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <acrawx+0x1>
     3ea:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <acrawx>
	Xa = acrawx/8192.0;
	dtostrf( Xa, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     3ee:	bc 01       	movw	r22, r24
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__floatunsisf>
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	40 e0       	ldi	r20, 0x00	; 0
     3fe:	59 e3       	ldi	r21, 0x39	; 57
     400:	0e 94 a1 02 	call	0x542	; 0x542 <__mulsf3>
     404:	87 01       	movw	r16, r14
     406:	22 e0       	ldi	r18, 0x02	; 2
     408:	43 e0       	ldi	r20, 0x03	; 3
     40a:	0e 94 81 03 	call	0x702	; 0x702 <dtostrf>
	sprintf(buffer," Ax = %s g\n",float_);
     40e:	ff 92       	push	r15
     410:	ef 92       	push	r14
     412:	bf 92       	push	r11
     414:	af 92       	push	r10
     416:	df 92       	push	r13
     418:	cf 92       	push	r12
     41a:	0e 94 a1 03 	call	0x742	; 0x742 <sprintf>
	USART_SendString(buffer);
     41e:	c6 01       	movw	r24, r12
     420:	0e 94 55 02 	call	0x4aa	; 0x4aa <USART_SendString>
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0
     428:	0f 90       	pop	r0
     42a:	0f 90       	pop	r0
     42c:	0f 90       	pop	r0
     42e:	0f 90       	pop	r0
     430:	d7 cf       	rjmp	.-82     	; 0x3e0 <main+0x5a>

00000432 <USART_Init>:

char USART_RxChar()									/* Data receiving function */
{
	while (!(UCSR0A & (1 << RXC0)));					/* Wait until new data receive */
	return(UDR0);									/* Get and return received data */ 
}
     432:	e1 ec       	ldi	r30, 0xC1	; 193
     434:	f0 e0       	ldi	r31, 0x00	; 0
     436:	20 81       	ld	r18, Z
     438:	28 61       	ori	r18, 0x18	; 24
     43a:	20 83       	st	Z, r18
     43c:	e2 ec       	ldi	r30, 0xC2	; 194
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	20 81       	ld	r18, Z
     442:	26 60       	ori	r18, 0x06	; 6
     444:	20 83       	st	Z, r18
     446:	dc 01       	movw	r26, r24
     448:	cb 01       	movw	r24, r22
     44a:	88 0f       	add	r24, r24
     44c:	99 1f       	adc	r25, r25
     44e:	aa 1f       	adc	r26, r26
     450:	bb 1f       	adc	r27, r27
     452:	88 0f       	add	r24, r24
     454:	99 1f       	adc	r25, r25
     456:	aa 1f       	adc	r26, r26
     458:	bb 1f       	adc	r27, r27
     45a:	9c 01       	movw	r18, r24
     45c:	ad 01       	movw	r20, r26
     45e:	22 0f       	add	r18, r18
     460:	33 1f       	adc	r19, r19
     462:	44 1f       	adc	r20, r20
     464:	55 1f       	adc	r21, r21
     466:	22 0f       	add	r18, r18
     468:	33 1f       	adc	r19, r19
     46a:	44 1f       	adc	r20, r20
     46c:	55 1f       	adc	r21, r21
     46e:	60 e0       	ldi	r22, 0x00	; 0
     470:	74 e2       	ldi	r23, 0x24	; 36
     472:	84 ef       	ldi	r24, 0xF4	; 244
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	0e 94 5f 03 	call	0x6be	; 0x6be <__udivmodsi4>
     47a:	8f ef       	ldi	r24, 0xFF	; 255
     47c:	82 0f       	add	r24, r18
     47e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     482:	da 01       	movw	r26, r20
     484:	c9 01       	movw	r24, r18
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	a1 09       	sbc	r26, r1
     48a:	b1 09       	sbc	r27, r1
     48c:	89 2f       	mov	r24, r25
     48e:	9a 2f       	mov	r25, r26
     490:	ab 2f       	mov	r26, r27
     492:	bb 27       	eor	r27, r27
     494:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     498:	08 95       	ret

0000049a <USART_TxChar>:

void USART_TxChar(char data)						/* Data transmitting function */
{
	UDR0 = data;										/* Write data to be transmitting in UDR */
     49a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while (!(UCSR0A & (1<<UDRE0)));					/* Wait until data transmit and buffer get empty */
     49e:	e0 ec       	ldi	r30, 0xC0	; 192
     4a0:	f0 e0       	ldi	r31, 0x00	; 0
     4a2:	80 81       	ld	r24, Z
     4a4:	85 ff       	sbrs	r24, 5
     4a6:	fd cf       	rjmp	.-6      	; 0x4a2 <USART_TxChar+0x8>
}
     4a8:	08 95       	ret

000004aa <USART_SendString>:

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	ec 01       	movw	r28, r24
	int i=0;																	
	while (str[i]!=0)
     4b0:	88 81       	ld	r24, Y
     4b2:	88 23       	and	r24, r24
     4b4:	31 f0       	breq	.+12     	; 0x4c2 <USART_SendString+0x18>
     4b6:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
     4b8:	0e 94 4d 02 	call	0x49a	; 0x49a <USART_TxChar>
}

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
	int i=0;																	
	while (str[i]!=0)
     4bc:	89 91       	ld	r24, Y+
     4be:	81 11       	cpse	r24, r1
     4c0:	fb cf       	rjmp	.-10     	; 0x4b8 <USART_SendString+0xe>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
		i++;
	}
     4c2:	df 91       	pop	r29
     4c4:	cf 91       	pop	r28
     4c6:	08 95       	ret

000004c8 <__floatunsisf>:
     4c8:	e8 94       	clt
     4ca:	09 c0       	rjmp	.+18     	; 0x4de <__floatsisf+0x12>

000004cc <__floatsisf>:
     4cc:	97 fb       	bst	r25, 7
     4ce:	3e f4       	brtc	.+14     	; 0x4de <__floatsisf+0x12>
     4d0:	90 95       	com	r25
     4d2:	80 95       	com	r24
     4d4:	70 95       	com	r23
     4d6:	61 95       	neg	r22
     4d8:	7f 4f       	sbci	r23, 0xFF	; 255
     4da:	8f 4f       	sbci	r24, 0xFF	; 255
     4dc:	9f 4f       	sbci	r25, 0xFF	; 255
     4de:	99 23       	and	r25, r25
     4e0:	a9 f0       	breq	.+42     	; 0x50c <__floatsisf+0x40>
     4e2:	f9 2f       	mov	r31, r25
     4e4:	96 e9       	ldi	r25, 0x96	; 150
     4e6:	bb 27       	eor	r27, r27
     4e8:	93 95       	inc	r25
     4ea:	f6 95       	lsr	r31
     4ec:	87 95       	ror	r24
     4ee:	77 95       	ror	r23
     4f0:	67 95       	ror	r22
     4f2:	b7 95       	ror	r27
     4f4:	f1 11       	cpse	r31, r1
     4f6:	f8 cf       	rjmp	.-16     	; 0x4e8 <__floatsisf+0x1c>
     4f8:	fa f4       	brpl	.+62     	; 0x538 <__floatsisf+0x6c>
     4fa:	bb 0f       	add	r27, r27
     4fc:	11 f4       	brne	.+4      	; 0x502 <__floatsisf+0x36>
     4fe:	60 ff       	sbrs	r22, 0
     500:	1b c0       	rjmp	.+54     	; 0x538 <__floatsisf+0x6c>
     502:	6f 5f       	subi	r22, 0xFF	; 255
     504:	7f 4f       	sbci	r23, 0xFF	; 255
     506:	8f 4f       	sbci	r24, 0xFF	; 255
     508:	9f 4f       	sbci	r25, 0xFF	; 255
     50a:	16 c0       	rjmp	.+44     	; 0x538 <__floatsisf+0x6c>
     50c:	88 23       	and	r24, r24
     50e:	11 f0       	breq	.+4      	; 0x514 <__floatsisf+0x48>
     510:	96 e9       	ldi	r25, 0x96	; 150
     512:	11 c0       	rjmp	.+34     	; 0x536 <__floatsisf+0x6a>
     514:	77 23       	and	r23, r23
     516:	21 f0       	breq	.+8      	; 0x520 <__floatsisf+0x54>
     518:	9e e8       	ldi	r25, 0x8E	; 142
     51a:	87 2f       	mov	r24, r23
     51c:	76 2f       	mov	r23, r22
     51e:	05 c0       	rjmp	.+10     	; 0x52a <__floatsisf+0x5e>
     520:	66 23       	and	r22, r22
     522:	71 f0       	breq	.+28     	; 0x540 <__floatsisf+0x74>
     524:	96 e8       	ldi	r25, 0x86	; 134
     526:	86 2f       	mov	r24, r22
     528:	70 e0       	ldi	r23, 0x00	; 0
     52a:	60 e0       	ldi	r22, 0x00	; 0
     52c:	2a f0       	brmi	.+10     	; 0x538 <__floatsisf+0x6c>
     52e:	9a 95       	dec	r25
     530:	66 0f       	add	r22, r22
     532:	77 1f       	adc	r23, r23
     534:	88 1f       	adc	r24, r24
     536:	da f7       	brpl	.-10     	; 0x52e <__floatsisf+0x62>
     538:	88 0f       	add	r24, r24
     53a:	96 95       	lsr	r25
     53c:	87 95       	ror	r24
     53e:	97 f9       	bld	r25, 7
     540:	08 95       	ret

00000542 <__mulsf3>:
     542:	0e 94 b4 02 	call	0x568	; 0x568 <__mulsf3x>
     546:	0c 94 25 03 	jmp	0x64a	; 0x64a <__fp_round>
     54a:	0e 94 17 03 	call	0x62e	; 0x62e <__fp_pscA>
     54e:	38 f0       	brcs	.+14     	; 0x55e <__mulsf3+0x1c>
     550:	0e 94 1e 03 	call	0x63c	; 0x63c <__fp_pscB>
     554:	20 f0       	brcs	.+8      	; 0x55e <__mulsf3+0x1c>
     556:	95 23       	and	r25, r21
     558:	11 f0       	breq	.+4      	; 0x55e <__mulsf3+0x1c>
     55a:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_inf>
     55e:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_nan>
     562:	11 24       	eor	r1, r1
     564:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__fp_szero>

00000568 <__mulsf3x>:
     568:	0e 94 36 03 	call	0x66c	; 0x66c <__fp_split3>
     56c:	70 f3       	brcs	.-36     	; 0x54a <__mulsf3+0x8>

0000056e <__mulsf3_pse>:
     56e:	95 9f       	mul	r25, r21
     570:	c1 f3       	breq	.-16     	; 0x562 <__mulsf3+0x20>
     572:	95 0f       	add	r25, r21
     574:	50 e0       	ldi	r21, 0x00	; 0
     576:	55 1f       	adc	r21, r21
     578:	62 9f       	mul	r22, r18
     57a:	f0 01       	movw	r30, r0
     57c:	72 9f       	mul	r23, r18
     57e:	bb 27       	eor	r27, r27
     580:	f0 0d       	add	r31, r0
     582:	b1 1d       	adc	r27, r1
     584:	63 9f       	mul	r22, r19
     586:	aa 27       	eor	r26, r26
     588:	f0 0d       	add	r31, r0
     58a:	b1 1d       	adc	r27, r1
     58c:	aa 1f       	adc	r26, r26
     58e:	64 9f       	mul	r22, r20
     590:	66 27       	eor	r22, r22
     592:	b0 0d       	add	r27, r0
     594:	a1 1d       	adc	r26, r1
     596:	66 1f       	adc	r22, r22
     598:	82 9f       	mul	r24, r18
     59a:	22 27       	eor	r18, r18
     59c:	b0 0d       	add	r27, r0
     59e:	a1 1d       	adc	r26, r1
     5a0:	62 1f       	adc	r22, r18
     5a2:	73 9f       	mul	r23, r19
     5a4:	b0 0d       	add	r27, r0
     5a6:	a1 1d       	adc	r26, r1
     5a8:	62 1f       	adc	r22, r18
     5aa:	83 9f       	mul	r24, r19
     5ac:	a0 0d       	add	r26, r0
     5ae:	61 1d       	adc	r22, r1
     5b0:	22 1f       	adc	r18, r18
     5b2:	74 9f       	mul	r23, r20
     5b4:	33 27       	eor	r19, r19
     5b6:	a0 0d       	add	r26, r0
     5b8:	61 1d       	adc	r22, r1
     5ba:	23 1f       	adc	r18, r19
     5bc:	84 9f       	mul	r24, r20
     5be:	60 0d       	add	r22, r0
     5c0:	21 1d       	adc	r18, r1
     5c2:	82 2f       	mov	r24, r18
     5c4:	76 2f       	mov	r23, r22
     5c6:	6a 2f       	mov	r22, r26
     5c8:	11 24       	eor	r1, r1
     5ca:	9f 57       	subi	r25, 0x7F	; 127
     5cc:	50 40       	sbci	r21, 0x00	; 0
     5ce:	9a f0       	brmi	.+38     	; 0x5f6 <__mulsf3_pse+0x88>
     5d0:	f1 f0       	breq	.+60     	; 0x60e <__mulsf3_pse+0xa0>
     5d2:	88 23       	and	r24, r24
     5d4:	4a f0       	brmi	.+18     	; 0x5e8 <__mulsf3_pse+0x7a>
     5d6:	ee 0f       	add	r30, r30
     5d8:	ff 1f       	adc	r31, r31
     5da:	bb 1f       	adc	r27, r27
     5dc:	66 1f       	adc	r22, r22
     5de:	77 1f       	adc	r23, r23
     5e0:	88 1f       	adc	r24, r24
     5e2:	91 50       	subi	r25, 0x01	; 1
     5e4:	50 40       	sbci	r21, 0x00	; 0
     5e6:	a9 f7       	brne	.-22     	; 0x5d2 <__mulsf3_pse+0x64>
     5e8:	9e 3f       	cpi	r25, 0xFE	; 254
     5ea:	51 05       	cpc	r21, r1
     5ec:	80 f0       	brcs	.+32     	; 0x60e <__mulsf3_pse+0xa0>
     5ee:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_inf>
     5f2:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__fp_szero>
     5f6:	5f 3f       	cpi	r21, 0xFF	; 255
     5f8:	e4 f3       	brlt	.-8      	; 0x5f2 <__mulsf3_pse+0x84>
     5fa:	98 3e       	cpi	r25, 0xE8	; 232
     5fc:	d4 f3       	brlt	.-12     	; 0x5f2 <__mulsf3_pse+0x84>
     5fe:	86 95       	lsr	r24
     600:	77 95       	ror	r23
     602:	67 95       	ror	r22
     604:	b7 95       	ror	r27
     606:	f7 95       	ror	r31
     608:	e7 95       	ror	r30
     60a:	9f 5f       	subi	r25, 0xFF	; 255
     60c:	c1 f7       	brne	.-16     	; 0x5fe <__mulsf3_pse+0x90>
     60e:	fe 2b       	or	r31, r30
     610:	88 0f       	add	r24, r24
     612:	91 1d       	adc	r25, r1
     614:	96 95       	lsr	r25
     616:	87 95       	ror	r24
     618:	97 f9       	bld	r25, 7
     61a:	08 95       	ret

0000061c <__fp_inf>:
     61c:	97 f9       	bld	r25, 7
     61e:	9f 67       	ori	r25, 0x7F	; 127
     620:	80 e8       	ldi	r24, 0x80	; 128
     622:	70 e0       	ldi	r23, 0x00	; 0
     624:	60 e0       	ldi	r22, 0x00	; 0
     626:	08 95       	ret

00000628 <__fp_nan>:
     628:	9f ef       	ldi	r25, 0xFF	; 255
     62a:	80 ec       	ldi	r24, 0xC0	; 192
     62c:	08 95       	ret

0000062e <__fp_pscA>:
     62e:	00 24       	eor	r0, r0
     630:	0a 94       	dec	r0
     632:	16 16       	cp	r1, r22
     634:	17 06       	cpc	r1, r23
     636:	18 06       	cpc	r1, r24
     638:	09 06       	cpc	r0, r25
     63a:	08 95       	ret

0000063c <__fp_pscB>:
     63c:	00 24       	eor	r0, r0
     63e:	0a 94       	dec	r0
     640:	12 16       	cp	r1, r18
     642:	13 06       	cpc	r1, r19
     644:	14 06       	cpc	r1, r20
     646:	05 06       	cpc	r0, r21
     648:	08 95       	ret

0000064a <__fp_round>:
     64a:	09 2e       	mov	r0, r25
     64c:	03 94       	inc	r0
     64e:	00 0c       	add	r0, r0
     650:	11 f4       	brne	.+4      	; 0x656 <__fp_round+0xc>
     652:	88 23       	and	r24, r24
     654:	52 f0       	brmi	.+20     	; 0x66a <__fp_round+0x20>
     656:	bb 0f       	add	r27, r27
     658:	40 f4       	brcc	.+16     	; 0x66a <__fp_round+0x20>
     65a:	bf 2b       	or	r27, r31
     65c:	11 f4       	brne	.+4      	; 0x662 <__fp_round+0x18>
     65e:	60 ff       	sbrs	r22, 0
     660:	04 c0       	rjmp	.+8      	; 0x66a <__fp_round+0x20>
     662:	6f 5f       	subi	r22, 0xFF	; 255
     664:	7f 4f       	sbci	r23, 0xFF	; 255
     666:	8f 4f       	sbci	r24, 0xFF	; 255
     668:	9f 4f       	sbci	r25, 0xFF	; 255
     66a:	08 95       	ret

0000066c <__fp_split3>:
     66c:	57 fd       	sbrc	r21, 7
     66e:	90 58       	subi	r25, 0x80	; 128
     670:	44 0f       	add	r20, r20
     672:	55 1f       	adc	r21, r21
     674:	59 f0       	breq	.+22     	; 0x68c <__fp_splitA+0x10>
     676:	5f 3f       	cpi	r21, 0xFF	; 255
     678:	71 f0       	breq	.+28     	; 0x696 <__fp_splitA+0x1a>
     67a:	47 95       	ror	r20

0000067c <__fp_splitA>:
     67c:	88 0f       	add	r24, r24
     67e:	97 fb       	bst	r25, 7
     680:	99 1f       	adc	r25, r25
     682:	61 f0       	breq	.+24     	; 0x69c <__fp_splitA+0x20>
     684:	9f 3f       	cpi	r25, 0xFF	; 255
     686:	79 f0       	breq	.+30     	; 0x6a6 <__fp_splitA+0x2a>
     688:	87 95       	ror	r24
     68a:	08 95       	ret
     68c:	12 16       	cp	r1, r18
     68e:	13 06       	cpc	r1, r19
     690:	14 06       	cpc	r1, r20
     692:	55 1f       	adc	r21, r21
     694:	f2 cf       	rjmp	.-28     	; 0x67a <__fp_split3+0xe>
     696:	46 95       	lsr	r20
     698:	f1 df       	rcall	.-30     	; 0x67c <__fp_splitA>
     69a:	08 c0       	rjmp	.+16     	; 0x6ac <__fp_splitA+0x30>
     69c:	16 16       	cp	r1, r22
     69e:	17 06       	cpc	r1, r23
     6a0:	18 06       	cpc	r1, r24
     6a2:	99 1f       	adc	r25, r25
     6a4:	f1 cf       	rjmp	.-30     	; 0x688 <__fp_splitA+0xc>
     6a6:	86 95       	lsr	r24
     6a8:	71 05       	cpc	r23, r1
     6aa:	61 05       	cpc	r22, r1
     6ac:	08 94       	sec
     6ae:	08 95       	ret

000006b0 <__fp_zero>:
     6b0:	e8 94       	clt

000006b2 <__fp_szero>:
     6b2:	bb 27       	eor	r27, r27
     6b4:	66 27       	eor	r22, r22
     6b6:	77 27       	eor	r23, r23
     6b8:	cb 01       	movw	r24, r22
     6ba:	97 f9       	bld	r25, 7
     6bc:	08 95       	ret

000006be <__udivmodsi4>:
     6be:	a1 e2       	ldi	r26, 0x21	; 33
     6c0:	1a 2e       	mov	r1, r26
     6c2:	aa 1b       	sub	r26, r26
     6c4:	bb 1b       	sub	r27, r27
     6c6:	fd 01       	movw	r30, r26
     6c8:	0d c0       	rjmp	.+26     	; 0x6e4 <__udivmodsi4_ep>

000006ca <__udivmodsi4_loop>:
     6ca:	aa 1f       	adc	r26, r26
     6cc:	bb 1f       	adc	r27, r27
     6ce:	ee 1f       	adc	r30, r30
     6d0:	ff 1f       	adc	r31, r31
     6d2:	a2 17       	cp	r26, r18
     6d4:	b3 07       	cpc	r27, r19
     6d6:	e4 07       	cpc	r30, r20
     6d8:	f5 07       	cpc	r31, r21
     6da:	20 f0       	brcs	.+8      	; 0x6e4 <__udivmodsi4_ep>
     6dc:	a2 1b       	sub	r26, r18
     6de:	b3 0b       	sbc	r27, r19
     6e0:	e4 0b       	sbc	r30, r20
     6e2:	f5 0b       	sbc	r31, r21

000006e4 <__udivmodsi4_ep>:
     6e4:	66 1f       	adc	r22, r22
     6e6:	77 1f       	adc	r23, r23
     6e8:	88 1f       	adc	r24, r24
     6ea:	99 1f       	adc	r25, r25
     6ec:	1a 94       	dec	r1
     6ee:	69 f7       	brne	.-38     	; 0x6ca <__udivmodsi4_loop>
     6f0:	60 95       	com	r22
     6f2:	70 95       	com	r23
     6f4:	80 95       	com	r24
     6f6:	90 95       	com	r25
     6f8:	9b 01       	movw	r18, r22
     6fa:	ac 01       	movw	r20, r24
     6fc:	bd 01       	movw	r22, r26
     6fe:	cf 01       	movw	r24, r30
     700:	08 95       	ret

00000702 <dtostrf>:
     702:	ef 92       	push	r14
     704:	0f 93       	push	r16
     706:	1f 93       	push	r17
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
     70c:	e8 01       	movw	r28, r16
     70e:	47 fd       	sbrc	r20, 7
     710:	02 c0       	rjmp	.+4      	; 0x716 <dtostrf+0x14>
     712:	34 e0       	ldi	r19, 0x04	; 4
     714:	01 c0       	rjmp	.+2      	; 0x718 <dtostrf+0x16>
     716:	34 e1       	ldi	r19, 0x14	; 20
     718:	04 2e       	mov	r0, r20
     71a:	00 0c       	add	r0, r0
     71c:	55 0b       	sbc	r21, r21
     71e:	57 ff       	sbrs	r21, 7
     720:	03 c0       	rjmp	.+6      	; 0x728 <dtostrf+0x26>
     722:	51 95       	neg	r21
     724:	41 95       	neg	r20
     726:	51 09       	sbc	r21, r1
     728:	e3 2e       	mov	r14, r19
     72a:	02 2f       	mov	r16, r18
     72c:	24 2f       	mov	r18, r20
     72e:	ae 01       	movw	r20, r28
     730:	0e 94 a4 05 	call	0xb48	; 0xb48 <dtoa_prf>
     734:	ce 01       	movw	r24, r28
     736:	df 91       	pop	r29
     738:	cf 91       	pop	r28
     73a:	1f 91       	pop	r17
     73c:	0f 91       	pop	r16
     73e:	ef 90       	pop	r14
     740:	08 95       	ret

00000742 <sprintf>:
     742:	ae e0       	ldi	r26, 0x0E	; 14
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 94 08 	jmp	0x1128	; 0x1128 <__prologue_saves__+0x1c>
     74e:	0d 89       	ldd	r16, Y+21	; 0x15
     750:	1e 89       	ldd	r17, Y+22	; 0x16
     752:	86 e0       	ldi	r24, 0x06	; 6
     754:	8c 83       	std	Y+4, r24	; 0x04
     756:	1a 83       	std	Y+2, r17	; 0x02
     758:	09 83       	std	Y+1, r16	; 0x01
     75a:	8f ef       	ldi	r24, 0xFF	; 255
     75c:	9f e7       	ldi	r25, 0x7F	; 127
     75e:	9e 83       	std	Y+6, r25	; 0x06
     760:	8d 83       	std	Y+5, r24	; 0x05
     762:	ae 01       	movw	r20, r28
     764:	47 5e       	subi	r20, 0xE7	; 231
     766:	5f 4f       	sbci	r21, 0xFF	; 255
     768:	6f 89       	ldd	r22, Y+23	; 0x17
     76a:	78 8d       	ldd	r23, Y+24	; 0x18
     76c:	ce 01       	movw	r24, r28
     76e:	01 96       	adiw	r24, 0x01	; 1
     770:	0e 94 c3 03 	call	0x786	; 0x786 <vfprintf>
     774:	ef 81       	ldd	r30, Y+7	; 0x07
     776:	f8 85       	ldd	r31, Y+8	; 0x08
     778:	e0 0f       	add	r30, r16
     77a:	f1 1f       	adc	r31, r17
     77c:	10 82       	st	Z, r1
     77e:	2e 96       	adiw	r28, 0x0e	; 14
     780:	e4 e0       	ldi	r30, 0x04	; 4
     782:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__epilogue_restores__+0x1c>

00000786 <vfprintf>:
     786:	ab e0       	ldi	r26, 0x0B	; 11
     788:	b0 e0       	ldi	r27, 0x00	; 0
     78a:	e9 ec       	ldi	r30, 0xC9	; 201
     78c:	f3 e0       	ldi	r31, 0x03	; 3
     78e:	0c 94 86 08 	jmp	0x110c	; 0x110c <__prologue_saves__>
     792:	6c 01       	movw	r12, r24
     794:	7b 01       	movw	r14, r22
     796:	8a 01       	movw	r16, r20
     798:	fc 01       	movw	r30, r24
     79a:	17 82       	std	Z+7, r1	; 0x07
     79c:	16 82       	std	Z+6, r1	; 0x06
     79e:	83 81       	ldd	r24, Z+3	; 0x03
     7a0:	81 ff       	sbrs	r24, 1
     7a2:	cc c1       	rjmp	.+920    	; 0xb3c <__stack+0x23d>
     7a4:	ce 01       	movw	r24, r28
     7a6:	01 96       	adiw	r24, 0x01	; 1
     7a8:	3c 01       	movw	r6, r24
     7aa:	f6 01       	movw	r30, r12
     7ac:	93 81       	ldd	r25, Z+3	; 0x03
     7ae:	f7 01       	movw	r30, r14
     7b0:	93 fd       	sbrc	r25, 3
     7b2:	85 91       	lpm	r24, Z+
     7b4:	93 ff       	sbrs	r25, 3
     7b6:	81 91       	ld	r24, Z+
     7b8:	7f 01       	movw	r14, r30
     7ba:	88 23       	and	r24, r24
     7bc:	09 f4       	brne	.+2      	; 0x7c0 <vfprintf+0x3a>
     7be:	ba c1       	rjmp	.+884    	; 0xb34 <__stack+0x235>
     7c0:	85 32       	cpi	r24, 0x25	; 37
     7c2:	39 f4       	brne	.+14     	; 0x7d2 <vfprintf+0x4c>
     7c4:	93 fd       	sbrc	r25, 3
     7c6:	85 91       	lpm	r24, Z+
     7c8:	93 ff       	sbrs	r25, 3
     7ca:	81 91       	ld	r24, Z+
     7cc:	7f 01       	movw	r14, r30
     7ce:	85 32       	cpi	r24, 0x25	; 37
     7d0:	29 f4       	brne	.+10     	; 0x7dc <vfprintf+0x56>
     7d2:	b6 01       	movw	r22, r12
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <fputc>
     7da:	e7 cf       	rjmp	.-50     	; 0x7aa <vfprintf+0x24>
     7dc:	91 2c       	mov	r9, r1
     7de:	21 2c       	mov	r2, r1
     7e0:	31 2c       	mov	r3, r1
     7e2:	ff e1       	ldi	r31, 0x1F	; 31
     7e4:	f3 15       	cp	r31, r3
     7e6:	d8 f0       	brcs	.+54     	; 0x81e <vfprintf+0x98>
     7e8:	8b 32       	cpi	r24, 0x2B	; 43
     7ea:	79 f0       	breq	.+30     	; 0x80a <vfprintf+0x84>
     7ec:	38 f4       	brcc	.+14     	; 0x7fc <vfprintf+0x76>
     7ee:	80 32       	cpi	r24, 0x20	; 32
     7f0:	79 f0       	breq	.+30     	; 0x810 <vfprintf+0x8a>
     7f2:	83 32       	cpi	r24, 0x23	; 35
     7f4:	a1 f4       	brne	.+40     	; 0x81e <vfprintf+0x98>
     7f6:	23 2d       	mov	r18, r3
     7f8:	20 61       	ori	r18, 0x10	; 16
     7fa:	1d c0       	rjmp	.+58     	; 0x836 <vfprintf+0xb0>
     7fc:	8d 32       	cpi	r24, 0x2D	; 45
     7fe:	61 f0       	breq	.+24     	; 0x818 <vfprintf+0x92>
     800:	80 33       	cpi	r24, 0x30	; 48
     802:	69 f4       	brne	.+26     	; 0x81e <vfprintf+0x98>
     804:	23 2d       	mov	r18, r3
     806:	21 60       	ori	r18, 0x01	; 1
     808:	16 c0       	rjmp	.+44     	; 0x836 <vfprintf+0xb0>
     80a:	83 2d       	mov	r24, r3
     80c:	82 60       	ori	r24, 0x02	; 2
     80e:	38 2e       	mov	r3, r24
     810:	e3 2d       	mov	r30, r3
     812:	e4 60       	ori	r30, 0x04	; 4
     814:	3e 2e       	mov	r3, r30
     816:	2a c0       	rjmp	.+84     	; 0x86c <vfprintf+0xe6>
     818:	f3 2d       	mov	r31, r3
     81a:	f8 60       	ori	r31, 0x08	; 8
     81c:	1d c0       	rjmp	.+58     	; 0x858 <vfprintf+0xd2>
     81e:	37 fc       	sbrc	r3, 7
     820:	2d c0       	rjmp	.+90     	; 0x87c <vfprintf+0xf6>
     822:	20 ed       	ldi	r18, 0xD0	; 208
     824:	28 0f       	add	r18, r24
     826:	2a 30       	cpi	r18, 0x0A	; 10
     828:	40 f0       	brcs	.+16     	; 0x83a <vfprintf+0xb4>
     82a:	8e 32       	cpi	r24, 0x2E	; 46
     82c:	b9 f4       	brne	.+46     	; 0x85c <vfprintf+0xd6>
     82e:	36 fc       	sbrc	r3, 6
     830:	81 c1       	rjmp	.+770    	; 0xb34 <__stack+0x235>
     832:	23 2d       	mov	r18, r3
     834:	20 64       	ori	r18, 0x40	; 64
     836:	32 2e       	mov	r3, r18
     838:	19 c0       	rjmp	.+50     	; 0x86c <vfprintf+0xe6>
     83a:	36 fe       	sbrs	r3, 6
     83c:	06 c0       	rjmp	.+12     	; 0x84a <vfprintf+0xc4>
     83e:	8a e0       	ldi	r24, 0x0A	; 10
     840:	98 9e       	mul	r9, r24
     842:	20 0d       	add	r18, r0
     844:	11 24       	eor	r1, r1
     846:	92 2e       	mov	r9, r18
     848:	11 c0       	rjmp	.+34     	; 0x86c <vfprintf+0xe6>
     84a:	ea e0       	ldi	r30, 0x0A	; 10
     84c:	2e 9e       	mul	r2, r30
     84e:	20 0d       	add	r18, r0
     850:	11 24       	eor	r1, r1
     852:	22 2e       	mov	r2, r18
     854:	f3 2d       	mov	r31, r3
     856:	f0 62       	ori	r31, 0x20	; 32
     858:	3f 2e       	mov	r3, r31
     85a:	08 c0       	rjmp	.+16     	; 0x86c <vfprintf+0xe6>
     85c:	8c 36       	cpi	r24, 0x6C	; 108
     85e:	21 f4       	brne	.+8      	; 0x868 <vfprintf+0xe2>
     860:	83 2d       	mov	r24, r3
     862:	80 68       	ori	r24, 0x80	; 128
     864:	38 2e       	mov	r3, r24
     866:	02 c0       	rjmp	.+4      	; 0x86c <vfprintf+0xe6>
     868:	88 36       	cpi	r24, 0x68	; 104
     86a:	41 f4       	brne	.+16     	; 0x87c <vfprintf+0xf6>
     86c:	f7 01       	movw	r30, r14
     86e:	93 fd       	sbrc	r25, 3
     870:	85 91       	lpm	r24, Z+
     872:	93 ff       	sbrs	r25, 3
     874:	81 91       	ld	r24, Z+
     876:	7f 01       	movw	r14, r30
     878:	81 11       	cpse	r24, r1
     87a:	b3 cf       	rjmp	.-154    	; 0x7e2 <vfprintf+0x5c>
     87c:	98 2f       	mov	r25, r24
     87e:	9f 7d       	andi	r25, 0xDF	; 223
     880:	95 54       	subi	r25, 0x45	; 69
     882:	93 30       	cpi	r25, 0x03	; 3
     884:	28 f4       	brcc	.+10     	; 0x890 <vfprintf+0x10a>
     886:	0c 5f       	subi	r16, 0xFC	; 252
     888:	1f 4f       	sbci	r17, 0xFF	; 255
     88a:	9f e3       	ldi	r25, 0x3F	; 63
     88c:	99 83       	std	Y+1, r25	; 0x01
     88e:	0d c0       	rjmp	.+26     	; 0x8aa <vfprintf+0x124>
     890:	83 36       	cpi	r24, 0x63	; 99
     892:	31 f0       	breq	.+12     	; 0x8a0 <vfprintf+0x11a>
     894:	83 37       	cpi	r24, 0x73	; 115
     896:	71 f0       	breq	.+28     	; 0x8b4 <vfprintf+0x12e>
     898:	83 35       	cpi	r24, 0x53	; 83
     89a:	09 f0       	breq	.+2      	; 0x89e <vfprintf+0x118>
     89c:	59 c0       	rjmp	.+178    	; 0x950 <__stack+0x51>
     89e:	21 c0       	rjmp	.+66     	; 0x8e2 <vfprintf+0x15c>
     8a0:	f8 01       	movw	r30, r16
     8a2:	80 81       	ld	r24, Z
     8a4:	89 83       	std	Y+1, r24	; 0x01
     8a6:	0e 5f       	subi	r16, 0xFE	; 254
     8a8:	1f 4f       	sbci	r17, 0xFF	; 255
     8aa:	88 24       	eor	r8, r8
     8ac:	83 94       	inc	r8
     8ae:	91 2c       	mov	r9, r1
     8b0:	53 01       	movw	r10, r6
     8b2:	13 c0       	rjmp	.+38     	; 0x8da <vfprintf+0x154>
     8b4:	28 01       	movw	r4, r16
     8b6:	f2 e0       	ldi	r31, 0x02	; 2
     8b8:	4f 0e       	add	r4, r31
     8ba:	51 1c       	adc	r5, r1
     8bc:	f8 01       	movw	r30, r16
     8be:	a0 80       	ld	r10, Z
     8c0:	b1 80       	ldd	r11, Z+1	; 0x01
     8c2:	36 fe       	sbrs	r3, 6
     8c4:	03 c0       	rjmp	.+6      	; 0x8cc <vfprintf+0x146>
     8c6:	69 2d       	mov	r22, r9
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	02 c0       	rjmp	.+4      	; 0x8d0 <vfprintf+0x14a>
     8cc:	6f ef       	ldi	r22, 0xFF	; 255
     8ce:	7f ef       	ldi	r23, 0xFF	; 255
     8d0:	c5 01       	movw	r24, r10
     8d2:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <strnlen>
     8d6:	4c 01       	movw	r8, r24
     8d8:	82 01       	movw	r16, r4
     8da:	f3 2d       	mov	r31, r3
     8dc:	ff 77       	andi	r31, 0x7F	; 127
     8de:	3f 2e       	mov	r3, r31
     8e0:	16 c0       	rjmp	.+44     	; 0x90e <__stack+0xf>
     8e2:	28 01       	movw	r4, r16
     8e4:	22 e0       	ldi	r18, 0x02	; 2
     8e6:	42 0e       	add	r4, r18
     8e8:	51 1c       	adc	r5, r1
     8ea:	f8 01       	movw	r30, r16
     8ec:	a0 80       	ld	r10, Z
     8ee:	b1 80       	ldd	r11, Z+1	; 0x01
     8f0:	36 fe       	sbrs	r3, 6
     8f2:	03 c0       	rjmp	.+6      	; 0x8fa <vfprintf+0x174>
     8f4:	69 2d       	mov	r22, r9
     8f6:	70 e0       	ldi	r23, 0x00	; 0
     8f8:	02 c0       	rjmp	.+4      	; 0x8fe <vfprintf+0x178>
     8fa:	6f ef       	ldi	r22, 0xFF	; 255
     8fc:	7f ef       	ldi	r23, 0xFF	; 255
     8fe:	c5 01       	movw	r24, r10
     900:	0e 94 d6 07 	call	0xfac	; 0xfac <strnlen_P>
     904:	4c 01       	movw	r8, r24
     906:	f3 2d       	mov	r31, r3
     908:	f0 68       	ori	r31, 0x80	; 128
     90a:	3f 2e       	mov	r3, r31
     90c:	82 01       	movw	r16, r4
     90e:	33 fc       	sbrc	r3, 3
     910:	1b c0       	rjmp	.+54     	; 0x948 <__stack+0x49>
     912:	82 2d       	mov	r24, r2
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	88 16       	cp	r8, r24
     918:	99 06       	cpc	r9, r25
     91a:	b0 f4       	brcc	.+44     	; 0x948 <__stack+0x49>
     91c:	b6 01       	movw	r22, r12
     91e:	80 e2       	ldi	r24, 0x20	; 32
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <fputc>
     926:	2a 94       	dec	r2
     928:	f4 cf       	rjmp	.-24     	; 0x912 <__stack+0x13>
     92a:	f5 01       	movw	r30, r10
     92c:	37 fc       	sbrc	r3, 7
     92e:	85 91       	lpm	r24, Z+
     930:	37 fe       	sbrs	r3, 7
     932:	81 91       	ld	r24, Z+
     934:	5f 01       	movw	r10, r30
     936:	b6 01       	movw	r22, r12
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <fputc>
     93e:	21 10       	cpse	r2, r1
     940:	2a 94       	dec	r2
     942:	21 e0       	ldi	r18, 0x01	; 1
     944:	82 1a       	sub	r8, r18
     946:	91 08       	sbc	r9, r1
     948:	81 14       	cp	r8, r1
     94a:	91 04       	cpc	r9, r1
     94c:	71 f7       	brne	.-36     	; 0x92a <__stack+0x2b>
     94e:	e8 c0       	rjmp	.+464    	; 0xb20 <__stack+0x221>
     950:	84 36       	cpi	r24, 0x64	; 100
     952:	11 f0       	breq	.+4      	; 0x958 <__stack+0x59>
     954:	89 36       	cpi	r24, 0x69	; 105
     956:	41 f5       	brne	.+80     	; 0x9a8 <__stack+0xa9>
     958:	f8 01       	movw	r30, r16
     95a:	37 fe       	sbrs	r3, 7
     95c:	07 c0       	rjmp	.+14     	; 0x96c <__stack+0x6d>
     95e:	60 81       	ld	r22, Z
     960:	71 81       	ldd	r23, Z+1	; 0x01
     962:	82 81       	ldd	r24, Z+2	; 0x02
     964:	93 81       	ldd	r25, Z+3	; 0x03
     966:	0c 5f       	subi	r16, 0xFC	; 252
     968:	1f 4f       	sbci	r17, 0xFF	; 255
     96a:	08 c0       	rjmp	.+16     	; 0x97c <__stack+0x7d>
     96c:	60 81       	ld	r22, Z
     96e:	71 81       	ldd	r23, Z+1	; 0x01
     970:	07 2e       	mov	r0, r23
     972:	00 0c       	add	r0, r0
     974:	88 0b       	sbc	r24, r24
     976:	99 0b       	sbc	r25, r25
     978:	0e 5f       	subi	r16, 0xFE	; 254
     97a:	1f 4f       	sbci	r17, 0xFF	; 255
     97c:	f3 2d       	mov	r31, r3
     97e:	ff 76       	andi	r31, 0x6F	; 111
     980:	3f 2e       	mov	r3, r31
     982:	97 ff       	sbrs	r25, 7
     984:	09 c0       	rjmp	.+18     	; 0x998 <__stack+0x99>
     986:	90 95       	com	r25
     988:	80 95       	com	r24
     98a:	70 95       	com	r23
     98c:	61 95       	neg	r22
     98e:	7f 4f       	sbci	r23, 0xFF	; 255
     990:	8f 4f       	sbci	r24, 0xFF	; 255
     992:	9f 4f       	sbci	r25, 0xFF	; 255
     994:	f0 68       	ori	r31, 0x80	; 128
     996:	3f 2e       	mov	r3, r31
     998:	2a e0       	ldi	r18, 0x0A	; 10
     99a:	30 e0       	ldi	r19, 0x00	; 0
     99c:	a3 01       	movw	r20, r6
     99e:	0e 94 28 08 	call	0x1050	; 0x1050 <__ultoa_invert>
     9a2:	88 2e       	mov	r8, r24
     9a4:	86 18       	sub	r8, r6
     9a6:	45 c0       	rjmp	.+138    	; 0xa32 <__stack+0x133>
     9a8:	85 37       	cpi	r24, 0x75	; 117
     9aa:	31 f4       	brne	.+12     	; 0x9b8 <__stack+0xb9>
     9ac:	23 2d       	mov	r18, r3
     9ae:	2f 7e       	andi	r18, 0xEF	; 239
     9b0:	b2 2e       	mov	r11, r18
     9b2:	2a e0       	ldi	r18, 0x0A	; 10
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	25 c0       	rjmp	.+74     	; 0xa02 <__stack+0x103>
     9b8:	93 2d       	mov	r25, r3
     9ba:	99 7f       	andi	r25, 0xF9	; 249
     9bc:	b9 2e       	mov	r11, r25
     9be:	8f 36       	cpi	r24, 0x6F	; 111
     9c0:	c1 f0       	breq	.+48     	; 0x9f2 <__stack+0xf3>
     9c2:	18 f4       	brcc	.+6      	; 0x9ca <__stack+0xcb>
     9c4:	88 35       	cpi	r24, 0x58	; 88
     9c6:	79 f0       	breq	.+30     	; 0x9e6 <__stack+0xe7>
     9c8:	b5 c0       	rjmp	.+362    	; 0xb34 <__stack+0x235>
     9ca:	80 37       	cpi	r24, 0x70	; 112
     9cc:	19 f0       	breq	.+6      	; 0x9d4 <__stack+0xd5>
     9ce:	88 37       	cpi	r24, 0x78	; 120
     9d0:	21 f0       	breq	.+8      	; 0x9da <__stack+0xdb>
     9d2:	b0 c0       	rjmp	.+352    	; 0xb34 <__stack+0x235>
     9d4:	e9 2f       	mov	r30, r25
     9d6:	e0 61       	ori	r30, 0x10	; 16
     9d8:	be 2e       	mov	r11, r30
     9da:	b4 fe       	sbrs	r11, 4
     9dc:	0d c0       	rjmp	.+26     	; 0x9f8 <__stack+0xf9>
     9de:	fb 2d       	mov	r31, r11
     9e0:	f4 60       	ori	r31, 0x04	; 4
     9e2:	bf 2e       	mov	r11, r31
     9e4:	09 c0       	rjmp	.+18     	; 0x9f8 <__stack+0xf9>
     9e6:	34 fe       	sbrs	r3, 4
     9e8:	0a c0       	rjmp	.+20     	; 0x9fe <__stack+0xff>
     9ea:	29 2f       	mov	r18, r25
     9ec:	26 60       	ori	r18, 0x06	; 6
     9ee:	b2 2e       	mov	r11, r18
     9f0:	06 c0       	rjmp	.+12     	; 0x9fe <__stack+0xff>
     9f2:	28 e0       	ldi	r18, 0x08	; 8
     9f4:	30 e0       	ldi	r19, 0x00	; 0
     9f6:	05 c0       	rjmp	.+10     	; 0xa02 <__stack+0x103>
     9f8:	20 e1       	ldi	r18, 0x10	; 16
     9fa:	30 e0       	ldi	r19, 0x00	; 0
     9fc:	02 c0       	rjmp	.+4      	; 0xa02 <__stack+0x103>
     9fe:	20 e1       	ldi	r18, 0x10	; 16
     a00:	32 e0       	ldi	r19, 0x02	; 2
     a02:	f8 01       	movw	r30, r16
     a04:	b7 fe       	sbrs	r11, 7
     a06:	07 c0       	rjmp	.+14     	; 0xa16 <__stack+0x117>
     a08:	60 81       	ld	r22, Z
     a0a:	71 81       	ldd	r23, Z+1	; 0x01
     a0c:	82 81       	ldd	r24, Z+2	; 0x02
     a0e:	93 81       	ldd	r25, Z+3	; 0x03
     a10:	0c 5f       	subi	r16, 0xFC	; 252
     a12:	1f 4f       	sbci	r17, 0xFF	; 255
     a14:	06 c0       	rjmp	.+12     	; 0xa22 <__stack+0x123>
     a16:	60 81       	ld	r22, Z
     a18:	71 81       	ldd	r23, Z+1	; 0x01
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 5f       	subi	r16, 0xFE	; 254
     a20:	1f 4f       	sbci	r17, 0xFF	; 255
     a22:	a3 01       	movw	r20, r6
     a24:	0e 94 28 08 	call	0x1050	; 0x1050 <__ultoa_invert>
     a28:	88 2e       	mov	r8, r24
     a2a:	86 18       	sub	r8, r6
     a2c:	fb 2d       	mov	r31, r11
     a2e:	ff 77       	andi	r31, 0x7F	; 127
     a30:	3f 2e       	mov	r3, r31
     a32:	36 fe       	sbrs	r3, 6
     a34:	0d c0       	rjmp	.+26     	; 0xa50 <__stack+0x151>
     a36:	23 2d       	mov	r18, r3
     a38:	2e 7f       	andi	r18, 0xFE	; 254
     a3a:	a2 2e       	mov	r10, r18
     a3c:	89 14       	cp	r8, r9
     a3e:	58 f4       	brcc	.+22     	; 0xa56 <__stack+0x157>
     a40:	34 fe       	sbrs	r3, 4
     a42:	0b c0       	rjmp	.+22     	; 0xa5a <__stack+0x15b>
     a44:	32 fc       	sbrc	r3, 2
     a46:	09 c0       	rjmp	.+18     	; 0xa5a <__stack+0x15b>
     a48:	83 2d       	mov	r24, r3
     a4a:	8e 7e       	andi	r24, 0xEE	; 238
     a4c:	a8 2e       	mov	r10, r24
     a4e:	05 c0       	rjmp	.+10     	; 0xa5a <__stack+0x15b>
     a50:	b8 2c       	mov	r11, r8
     a52:	a3 2c       	mov	r10, r3
     a54:	03 c0       	rjmp	.+6      	; 0xa5c <__stack+0x15d>
     a56:	b8 2c       	mov	r11, r8
     a58:	01 c0       	rjmp	.+2      	; 0xa5c <__stack+0x15d>
     a5a:	b9 2c       	mov	r11, r9
     a5c:	a4 fe       	sbrs	r10, 4
     a5e:	0f c0       	rjmp	.+30     	; 0xa7e <__stack+0x17f>
     a60:	fe 01       	movw	r30, r28
     a62:	e8 0d       	add	r30, r8
     a64:	f1 1d       	adc	r31, r1
     a66:	80 81       	ld	r24, Z
     a68:	80 33       	cpi	r24, 0x30	; 48
     a6a:	21 f4       	brne	.+8      	; 0xa74 <__stack+0x175>
     a6c:	9a 2d       	mov	r25, r10
     a6e:	99 7e       	andi	r25, 0xE9	; 233
     a70:	a9 2e       	mov	r10, r25
     a72:	09 c0       	rjmp	.+18     	; 0xa86 <__stack+0x187>
     a74:	a2 fe       	sbrs	r10, 2
     a76:	06 c0       	rjmp	.+12     	; 0xa84 <__stack+0x185>
     a78:	b3 94       	inc	r11
     a7a:	b3 94       	inc	r11
     a7c:	04 c0       	rjmp	.+8      	; 0xa86 <__stack+0x187>
     a7e:	8a 2d       	mov	r24, r10
     a80:	86 78       	andi	r24, 0x86	; 134
     a82:	09 f0       	breq	.+2      	; 0xa86 <__stack+0x187>
     a84:	b3 94       	inc	r11
     a86:	a3 fc       	sbrc	r10, 3
     a88:	11 c0       	rjmp	.+34     	; 0xaac <__stack+0x1ad>
     a8a:	a0 fe       	sbrs	r10, 0
     a8c:	06 c0       	rjmp	.+12     	; 0xa9a <__stack+0x19b>
     a8e:	b2 14       	cp	r11, r2
     a90:	88 f4       	brcc	.+34     	; 0xab4 <__stack+0x1b5>
     a92:	28 0c       	add	r2, r8
     a94:	92 2c       	mov	r9, r2
     a96:	9b 18       	sub	r9, r11
     a98:	0e c0       	rjmp	.+28     	; 0xab6 <__stack+0x1b7>
     a9a:	b2 14       	cp	r11, r2
     a9c:	60 f4       	brcc	.+24     	; 0xab6 <__stack+0x1b7>
     a9e:	b6 01       	movw	r22, r12
     aa0:	80 e2       	ldi	r24, 0x20	; 32
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <fputc>
     aa8:	b3 94       	inc	r11
     aaa:	f7 cf       	rjmp	.-18     	; 0xa9a <__stack+0x19b>
     aac:	b2 14       	cp	r11, r2
     aae:	18 f4       	brcc	.+6      	; 0xab6 <__stack+0x1b7>
     ab0:	2b 18       	sub	r2, r11
     ab2:	02 c0       	rjmp	.+4      	; 0xab8 <__stack+0x1b9>
     ab4:	98 2c       	mov	r9, r8
     ab6:	21 2c       	mov	r2, r1
     ab8:	a4 fe       	sbrs	r10, 4
     aba:	10 c0       	rjmp	.+32     	; 0xadc <__stack+0x1dd>
     abc:	b6 01       	movw	r22, r12
     abe:	80 e3       	ldi	r24, 0x30	; 48
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <fputc>
     ac6:	a2 fe       	sbrs	r10, 2
     ac8:	17 c0       	rjmp	.+46     	; 0xaf8 <__stack+0x1f9>
     aca:	a1 fc       	sbrc	r10, 1
     acc:	03 c0       	rjmp	.+6      	; 0xad4 <__stack+0x1d5>
     ace:	88 e7       	ldi	r24, 0x78	; 120
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	02 c0       	rjmp	.+4      	; 0xad8 <__stack+0x1d9>
     ad4:	88 e5       	ldi	r24, 0x58	; 88
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	b6 01       	movw	r22, r12
     ada:	0c c0       	rjmp	.+24     	; 0xaf4 <__stack+0x1f5>
     adc:	8a 2d       	mov	r24, r10
     ade:	86 78       	andi	r24, 0x86	; 134
     ae0:	59 f0       	breq	.+22     	; 0xaf8 <__stack+0x1f9>
     ae2:	a1 fe       	sbrs	r10, 1
     ae4:	02 c0       	rjmp	.+4      	; 0xaea <__stack+0x1eb>
     ae6:	8b e2       	ldi	r24, 0x2B	; 43
     ae8:	01 c0       	rjmp	.+2      	; 0xaec <__stack+0x1ed>
     aea:	80 e2       	ldi	r24, 0x20	; 32
     aec:	a7 fc       	sbrc	r10, 7
     aee:	8d e2       	ldi	r24, 0x2D	; 45
     af0:	b6 01       	movw	r22, r12
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <fputc>
     af8:	89 14       	cp	r8, r9
     afa:	38 f4       	brcc	.+14     	; 0xb0a <__stack+0x20b>
     afc:	b6 01       	movw	r22, r12
     afe:	80 e3       	ldi	r24, 0x30	; 48
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <fputc>
     b06:	9a 94       	dec	r9
     b08:	f7 cf       	rjmp	.-18     	; 0xaf8 <__stack+0x1f9>
     b0a:	8a 94       	dec	r8
     b0c:	f3 01       	movw	r30, r6
     b0e:	e8 0d       	add	r30, r8
     b10:	f1 1d       	adc	r31, r1
     b12:	80 81       	ld	r24, Z
     b14:	b6 01       	movw	r22, r12
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <fputc>
     b1c:	81 10       	cpse	r8, r1
     b1e:	f5 cf       	rjmp	.-22     	; 0xb0a <__stack+0x20b>
     b20:	22 20       	and	r2, r2
     b22:	09 f4       	brne	.+2      	; 0xb26 <__stack+0x227>
     b24:	42 ce       	rjmp	.-892    	; 0x7aa <vfprintf+0x24>
     b26:	b6 01       	movw	r22, r12
     b28:	80 e2       	ldi	r24, 0x20	; 32
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <fputc>
     b30:	2a 94       	dec	r2
     b32:	f6 cf       	rjmp	.-20     	; 0xb20 <__stack+0x221>
     b34:	f6 01       	movw	r30, r12
     b36:	86 81       	ldd	r24, Z+6	; 0x06
     b38:	97 81       	ldd	r25, Z+7	; 0x07
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__stack+0x241>
     b3c:	8f ef       	ldi	r24, 0xFF	; 255
     b3e:	9f ef       	ldi	r25, 0xFF	; 255
     b40:	2b 96       	adiw	r28, 0x0b	; 11
     b42:	e2 e1       	ldi	r30, 0x12	; 18
     b44:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__epilogue_restores__>

00000b48 <dtoa_prf>:
     b48:	a9 e0       	ldi	r26, 0x09	; 9
     b4a:	b0 e0       	ldi	r27, 0x00	; 0
     b4c:	ea ea       	ldi	r30, 0xAA	; 170
     b4e:	f5 e0       	ldi	r31, 0x05	; 5
     b50:	0c 94 8c 08 	jmp	0x1118	; 0x1118 <__prologue_saves__+0xc>
     b54:	6a 01       	movw	r12, r20
     b56:	12 2f       	mov	r17, r18
     b58:	b0 2e       	mov	r11, r16
     b5a:	2b e3       	ldi	r18, 0x3B	; 59
     b5c:	20 17       	cp	r18, r16
     b5e:	20 f0       	brcs	.+8      	; 0xb68 <dtoa_prf+0x20>
     b60:	ff 24       	eor	r15, r15
     b62:	f3 94       	inc	r15
     b64:	f0 0e       	add	r15, r16
     b66:	02 c0       	rjmp	.+4      	; 0xb6c <dtoa_prf+0x24>
     b68:	2c e3       	ldi	r18, 0x3C	; 60
     b6a:	f2 2e       	mov	r15, r18
     b6c:	0f 2d       	mov	r16, r15
     b6e:	27 e0       	ldi	r18, 0x07	; 7
     b70:	ae 01       	movw	r20, r28
     b72:	4f 5f       	subi	r20, 0xFF	; 255
     b74:	5f 4f       	sbci	r21, 0xFF	; 255
     b76:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__ftoa_engine>
     b7a:	bc 01       	movw	r22, r24
     b7c:	49 81       	ldd	r20, Y+1	; 0x01
     b7e:	84 2f       	mov	r24, r20
     b80:	89 70       	andi	r24, 0x09	; 9
     b82:	81 30       	cpi	r24, 0x01	; 1
     b84:	31 f0       	breq	.+12     	; 0xb92 <dtoa_prf+0x4a>
     b86:	e1 fc       	sbrc	r14, 1
     b88:	06 c0       	rjmp	.+12     	; 0xb96 <dtoa_prf+0x4e>
     b8a:	e0 fe       	sbrs	r14, 0
     b8c:	06 c0       	rjmp	.+12     	; 0xb9a <dtoa_prf+0x52>
     b8e:	90 e2       	ldi	r25, 0x20	; 32
     b90:	05 c0       	rjmp	.+10     	; 0xb9c <dtoa_prf+0x54>
     b92:	9d e2       	ldi	r25, 0x2D	; 45
     b94:	03 c0       	rjmp	.+6      	; 0xb9c <dtoa_prf+0x54>
     b96:	9b e2       	ldi	r25, 0x2B	; 43
     b98:	01 c0       	rjmp	.+2      	; 0xb9c <dtoa_prf+0x54>
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	5e 2d       	mov	r21, r14
     b9e:	50 71       	andi	r21, 0x10	; 16
     ba0:	43 ff       	sbrs	r20, 3
     ba2:	3c c0       	rjmp	.+120    	; 0xc1c <dtoa_prf+0xd4>
     ba4:	91 11       	cpse	r25, r1
     ba6:	02 c0       	rjmp	.+4      	; 0xbac <dtoa_prf+0x64>
     ba8:	83 e0       	ldi	r24, 0x03	; 3
     baa:	01 c0       	rjmp	.+2      	; 0xbae <dtoa_prf+0x66>
     bac:	84 e0       	ldi	r24, 0x04	; 4
     bae:	81 17       	cp	r24, r17
     bb0:	18 f4       	brcc	.+6      	; 0xbb8 <dtoa_prf+0x70>
     bb2:	21 2f       	mov	r18, r17
     bb4:	28 1b       	sub	r18, r24
     bb6:	01 c0       	rjmp	.+2      	; 0xbba <dtoa_prf+0x72>
     bb8:	20 e0       	ldi	r18, 0x00	; 0
     bba:	51 11       	cpse	r21, r1
     bbc:	0b c0       	rjmp	.+22     	; 0xbd4 <dtoa_prf+0x8c>
     bbe:	f6 01       	movw	r30, r12
     bc0:	82 2f       	mov	r24, r18
     bc2:	30 e2       	ldi	r19, 0x20	; 32
     bc4:	88 23       	and	r24, r24
     bc6:	19 f0       	breq	.+6      	; 0xbce <dtoa_prf+0x86>
     bc8:	31 93       	st	Z+, r19
     bca:	81 50       	subi	r24, 0x01	; 1
     bcc:	fb cf       	rjmp	.-10     	; 0xbc4 <dtoa_prf+0x7c>
     bce:	c2 0e       	add	r12, r18
     bd0:	d1 1c       	adc	r13, r1
     bd2:	20 e0       	ldi	r18, 0x00	; 0
     bd4:	99 23       	and	r25, r25
     bd6:	29 f0       	breq	.+10     	; 0xbe2 <dtoa_prf+0x9a>
     bd8:	d6 01       	movw	r26, r12
     bda:	9c 93       	st	X, r25
     bdc:	f6 01       	movw	r30, r12
     bde:	31 96       	adiw	r30, 0x01	; 1
     be0:	6f 01       	movw	r12, r30
     be2:	c6 01       	movw	r24, r12
     be4:	03 96       	adiw	r24, 0x03	; 3
     be6:	e2 fe       	sbrs	r14, 2
     be8:	0a c0       	rjmp	.+20     	; 0xbfe <dtoa_prf+0xb6>
     bea:	3e e4       	ldi	r19, 0x4E	; 78
     bec:	d6 01       	movw	r26, r12
     bee:	3c 93       	st	X, r19
     bf0:	41 e4       	ldi	r20, 0x41	; 65
     bf2:	11 96       	adiw	r26, 0x01	; 1
     bf4:	4c 93       	st	X, r20
     bf6:	11 97       	sbiw	r26, 0x01	; 1
     bf8:	12 96       	adiw	r26, 0x02	; 2
     bfa:	3c 93       	st	X, r19
     bfc:	06 c0       	rjmp	.+12     	; 0xc0a <dtoa_prf+0xc2>
     bfe:	3e e6       	ldi	r19, 0x6E	; 110
     c00:	f6 01       	movw	r30, r12
     c02:	30 83       	st	Z, r19
     c04:	41 e6       	ldi	r20, 0x61	; 97
     c06:	41 83       	std	Z+1, r20	; 0x01
     c08:	32 83       	std	Z+2, r19	; 0x02
     c0a:	fc 01       	movw	r30, r24
     c0c:	32 2f       	mov	r19, r18
     c0e:	40 e2       	ldi	r20, 0x20	; 32
     c10:	33 23       	and	r19, r19
     c12:	09 f4       	brne	.+2      	; 0xc16 <dtoa_prf+0xce>
     c14:	42 c0       	rjmp	.+132    	; 0xc9a <dtoa_prf+0x152>
     c16:	41 93       	st	Z+, r20
     c18:	31 50       	subi	r19, 0x01	; 1
     c1a:	fa cf       	rjmp	.-12     	; 0xc10 <dtoa_prf+0xc8>
     c1c:	42 ff       	sbrs	r20, 2
     c1e:	44 c0       	rjmp	.+136    	; 0xca8 <dtoa_prf+0x160>
     c20:	91 11       	cpse	r25, r1
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <dtoa_prf+0xe0>
     c24:	83 e0       	ldi	r24, 0x03	; 3
     c26:	01 c0       	rjmp	.+2      	; 0xc2a <dtoa_prf+0xe2>
     c28:	84 e0       	ldi	r24, 0x04	; 4
     c2a:	81 17       	cp	r24, r17
     c2c:	18 f4       	brcc	.+6      	; 0xc34 <dtoa_prf+0xec>
     c2e:	21 2f       	mov	r18, r17
     c30:	28 1b       	sub	r18, r24
     c32:	01 c0       	rjmp	.+2      	; 0xc36 <dtoa_prf+0xee>
     c34:	20 e0       	ldi	r18, 0x00	; 0
     c36:	51 11       	cpse	r21, r1
     c38:	0b c0       	rjmp	.+22     	; 0xc50 <dtoa_prf+0x108>
     c3a:	f6 01       	movw	r30, r12
     c3c:	82 2f       	mov	r24, r18
     c3e:	30 e2       	ldi	r19, 0x20	; 32
     c40:	88 23       	and	r24, r24
     c42:	19 f0       	breq	.+6      	; 0xc4a <dtoa_prf+0x102>
     c44:	31 93       	st	Z+, r19
     c46:	81 50       	subi	r24, 0x01	; 1
     c48:	fb cf       	rjmp	.-10     	; 0xc40 <dtoa_prf+0xf8>
     c4a:	c2 0e       	add	r12, r18
     c4c:	d1 1c       	adc	r13, r1
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	99 23       	and	r25, r25
     c52:	29 f0       	breq	.+10     	; 0xc5e <dtoa_prf+0x116>
     c54:	d6 01       	movw	r26, r12
     c56:	9c 93       	st	X, r25
     c58:	f6 01       	movw	r30, r12
     c5a:	31 96       	adiw	r30, 0x01	; 1
     c5c:	6f 01       	movw	r12, r30
     c5e:	c6 01       	movw	r24, r12
     c60:	03 96       	adiw	r24, 0x03	; 3
     c62:	e2 fe       	sbrs	r14, 2
     c64:	0b c0       	rjmp	.+22     	; 0xc7c <dtoa_prf+0x134>
     c66:	39 e4       	ldi	r19, 0x49	; 73
     c68:	d6 01       	movw	r26, r12
     c6a:	3c 93       	st	X, r19
     c6c:	3e e4       	ldi	r19, 0x4E	; 78
     c6e:	11 96       	adiw	r26, 0x01	; 1
     c70:	3c 93       	st	X, r19
     c72:	11 97       	sbiw	r26, 0x01	; 1
     c74:	36 e4       	ldi	r19, 0x46	; 70
     c76:	12 96       	adiw	r26, 0x02	; 2
     c78:	3c 93       	st	X, r19
     c7a:	07 c0       	rjmp	.+14     	; 0xc8a <dtoa_prf+0x142>
     c7c:	39 e6       	ldi	r19, 0x69	; 105
     c7e:	f6 01       	movw	r30, r12
     c80:	30 83       	st	Z, r19
     c82:	3e e6       	ldi	r19, 0x6E	; 110
     c84:	31 83       	std	Z+1, r19	; 0x01
     c86:	36 e6       	ldi	r19, 0x66	; 102
     c88:	32 83       	std	Z+2, r19	; 0x02
     c8a:	fc 01       	movw	r30, r24
     c8c:	32 2f       	mov	r19, r18
     c8e:	40 e2       	ldi	r20, 0x20	; 32
     c90:	33 23       	and	r19, r19
     c92:	19 f0       	breq	.+6      	; 0xc9a <dtoa_prf+0x152>
     c94:	41 93       	st	Z+, r20
     c96:	31 50       	subi	r19, 0x01	; 1
     c98:	fb cf       	rjmp	.-10     	; 0xc90 <dtoa_prf+0x148>
     c9a:	fc 01       	movw	r30, r24
     c9c:	e2 0f       	add	r30, r18
     c9e:	f1 1d       	adc	r31, r1
     ca0:	10 82       	st	Z, r1
     ca2:	8e ef       	ldi	r24, 0xFE	; 254
     ca4:	9f ef       	ldi	r25, 0xFF	; 255
     ca6:	a6 c0       	rjmp	.+332    	; 0xdf4 <dtoa_prf+0x2ac>
     ca8:	21 e0       	ldi	r18, 0x01	; 1
     caa:	30 e0       	ldi	r19, 0x00	; 0
     cac:	91 11       	cpse	r25, r1
     cae:	02 c0       	rjmp	.+4      	; 0xcb4 <dtoa_prf+0x16c>
     cb0:	20 e0       	ldi	r18, 0x00	; 0
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	16 16       	cp	r1, r22
     cb6:	17 06       	cpc	r1, r23
     cb8:	1c f4       	brge	.+6      	; 0xcc0 <dtoa_prf+0x178>
     cba:	fb 01       	movw	r30, r22
     cbc:	31 96       	adiw	r30, 0x01	; 1
     cbe:	02 c0       	rjmp	.+4      	; 0xcc4 <dtoa_prf+0x17c>
     cc0:	e1 e0       	ldi	r30, 0x01	; 1
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	2e 0f       	add	r18, r30
     cc6:	3f 1f       	adc	r19, r31
     cc8:	bb 20       	and	r11, r11
     cca:	21 f0       	breq	.+8      	; 0xcd4 <dtoa_prf+0x18c>
     ccc:	eb 2d       	mov	r30, r11
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	31 96       	adiw	r30, 0x01	; 1
     cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <dtoa_prf+0x190>
     cd4:	e0 e0       	ldi	r30, 0x00	; 0
     cd6:	f0 e0       	ldi	r31, 0x00	; 0
     cd8:	2e 0f       	add	r18, r30
     cda:	3f 1f       	adc	r19, r31
     cdc:	e1 2f       	mov	r30, r17
     cde:	f0 e0       	ldi	r31, 0x00	; 0
     ce0:	2e 17       	cp	r18, r30
     ce2:	3f 07       	cpc	r19, r31
     ce4:	1c f4       	brge	.+6      	; 0xcec <dtoa_prf+0x1a4>
     ce6:	12 1b       	sub	r17, r18
     ce8:	21 2f       	mov	r18, r17
     cea:	01 c0       	rjmp	.+2      	; 0xcee <dtoa_prf+0x1a6>
     cec:	20 e0       	ldi	r18, 0x00	; 0
     cee:	8e 2d       	mov	r24, r14
     cf0:	88 71       	andi	r24, 0x18	; 24
     cf2:	59 f4       	brne	.+22     	; 0xd0a <dtoa_prf+0x1c2>
     cf4:	f6 01       	movw	r30, r12
     cf6:	82 2f       	mov	r24, r18
     cf8:	30 e2       	ldi	r19, 0x20	; 32
     cfa:	88 23       	and	r24, r24
     cfc:	19 f0       	breq	.+6      	; 0xd04 <dtoa_prf+0x1bc>
     cfe:	31 93       	st	Z+, r19
     d00:	81 50       	subi	r24, 0x01	; 1
     d02:	fb cf       	rjmp	.-10     	; 0xcfa <dtoa_prf+0x1b2>
     d04:	c2 0e       	add	r12, r18
     d06:	d1 1c       	adc	r13, r1
     d08:	20 e0       	ldi	r18, 0x00	; 0
     d0a:	99 23       	and	r25, r25
     d0c:	29 f0       	breq	.+10     	; 0xd18 <dtoa_prf+0x1d0>
     d0e:	d6 01       	movw	r26, r12
     d10:	9c 93       	st	X, r25
     d12:	f6 01       	movw	r30, r12
     d14:	31 96       	adiw	r30, 0x01	; 1
     d16:	6f 01       	movw	r12, r30
     d18:	51 11       	cpse	r21, r1
     d1a:	0b c0       	rjmp	.+22     	; 0xd32 <dtoa_prf+0x1ea>
     d1c:	f6 01       	movw	r30, r12
     d1e:	82 2f       	mov	r24, r18
     d20:	90 e3       	ldi	r25, 0x30	; 48
     d22:	88 23       	and	r24, r24
     d24:	19 f0       	breq	.+6      	; 0xd2c <dtoa_prf+0x1e4>
     d26:	91 93       	st	Z+, r25
     d28:	81 50       	subi	r24, 0x01	; 1
     d2a:	fb cf       	rjmp	.-10     	; 0xd22 <dtoa_prf+0x1da>
     d2c:	c2 0e       	add	r12, r18
     d2e:	d1 1c       	adc	r13, r1
     d30:	20 e0       	ldi	r18, 0x00	; 0
     d32:	0f 2d       	mov	r16, r15
     d34:	06 0f       	add	r16, r22
     d36:	9a 81       	ldd	r25, Y+2	; 0x02
     d38:	34 2f       	mov	r19, r20
     d3a:	30 71       	andi	r19, 0x10	; 16
     d3c:	44 ff       	sbrs	r20, 4
     d3e:	03 c0       	rjmp	.+6      	; 0xd46 <dtoa_prf+0x1fe>
     d40:	91 33       	cpi	r25, 0x31	; 49
     d42:	09 f4       	brne	.+2      	; 0xd46 <dtoa_prf+0x1fe>
     d44:	01 50       	subi	r16, 0x01	; 1
     d46:	10 16       	cp	r1, r16
     d48:	24 f4       	brge	.+8      	; 0xd52 <dtoa_prf+0x20a>
     d4a:	09 30       	cpi	r16, 0x09	; 9
     d4c:	18 f0       	brcs	.+6      	; 0xd54 <dtoa_prf+0x20c>
     d4e:	08 e0       	ldi	r16, 0x08	; 8
     d50:	01 c0       	rjmp	.+2      	; 0xd54 <dtoa_prf+0x20c>
     d52:	01 e0       	ldi	r16, 0x01	; 1
     d54:	ab 01       	movw	r20, r22
     d56:	77 ff       	sbrs	r23, 7
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <dtoa_prf+0x216>
     d5a:	40 e0       	ldi	r20, 0x00	; 0
     d5c:	50 e0       	ldi	r21, 0x00	; 0
     d5e:	fb 01       	movw	r30, r22
     d60:	e4 1b       	sub	r30, r20
     d62:	f5 0b       	sbc	r31, r21
     d64:	a1 e0       	ldi	r26, 0x01	; 1
     d66:	b0 e0       	ldi	r27, 0x00	; 0
     d68:	ac 0f       	add	r26, r28
     d6a:	bd 1f       	adc	r27, r29
     d6c:	ea 0f       	add	r30, r26
     d6e:	fb 1f       	adc	r31, r27
     d70:	8e e2       	ldi	r24, 0x2E	; 46
     d72:	a8 2e       	mov	r10, r24
     d74:	4b 01       	movw	r8, r22
     d76:	80 1a       	sub	r8, r16
     d78:	91 08       	sbc	r9, r1
     d7a:	0b 2d       	mov	r16, r11
     d7c:	10 e0       	ldi	r17, 0x00	; 0
     d7e:	11 95       	neg	r17
     d80:	01 95       	neg	r16
     d82:	11 09       	sbc	r17, r1
     d84:	4f 3f       	cpi	r20, 0xFF	; 255
     d86:	bf ef       	ldi	r27, 0xFF	; 255
     d88:	5b 07       	cpc	r21, r27
     d8a:	21 f4       	brne	.+8      	; 0xd94 <dtoa_prf+0x24c>
     d8c:	d6 01       	movw	r26, r12
     d8e:	ac 92       	st	X, r10
     d90:	11 96       	adiw	r26, 0x01	; 1
     d92:	6d 01       	movw	r12, r26
     d94:	64 17       	cp	r22, r20
     d96:	75 07       	cpc	r23, r21
     d98:	2c f0       	brlt	.+10     	; 0xda4 <dtoa_prf+0x25c>
     d9a:	84 16       	cp	r8, r20
     d9c:	95 06       	cpc	r9, r21
     d9e:	14 f4       	brge	.+4      	; 0xda4 <dtoa_prf+0x25c>
     da0:	81 81       	ldd	r24, Z+1	; 0x01
     da2:	01 c0       	rjmp	.+2      	; 0xda6 <dtoa_prf+0x25e>
     da4:	80 e3       	ldi	r24, 0x30	; 48
     da6:	41 50       	subi	r20, 0x01	; 1
     da8:	51 09       	sbc	r21, r1
     daa:	31 96       	adiw	r30, 0x01	; 1
     dac:	d6 01       	movw	r26, r12
     dae:	11 96       	adiw	r26, 0x01	; 1
     db0:	7d 01       	movw	r14, r26
     db2:	40 17       	cp	r20, r16
     db4:	51 07       	cpc	r21, r17
     db6:	24 f0       	brlt	.+8      	; 0xdc0 <dtoa_prf+0x278>
     db8:	d6 01       	movw	r26, r12
     dba:	8c 93       	st	X, r24
     dbc:	67 01       	movw	r12, r14
     dbe:	e2 cf       	rjmp	.-60     	; 0xd84 <dtoa_prf+0x23c>
     dc0:	64 17       	cp	r22, r20
     dc2:	75 07       	cpc	r23, r21
     dc4:	39 f4       	brne	.+14     	; 0xdd4 <dtoa_prf+0x28c>
     dc6:	96 33       	cpi	r25, 0x36	; 54
     dc8:	20 f4       	brcc	.+8      	; 0xdd2 <dtoa_prf+0x28a>
     dca:	95 33       	cpi	r25, 0x35	; 53
     dcc:	19 f4       	brne	.+6      	; 0xdd4 <dtoa_prf+0x28c>
     dce:	31 11       	cpse	r19, r1
     dd0:	01 c0       	rjmp	.+2      	; 0xdd4 <dtoa_prf+0x28c>
     dd2:	81 e3       	ldi	r24, 0x31	; 49
     dd4:	f6 01       	movw	r30, r12
     dd6:	80 83       	st	Z, r24
     dd8:	f7 01       	movw	r30, r14
     dda:	82 2f       	mov	r24, r18
     ddc:	90 e2       	ldi	r25, 0x20	; 32
     dde:	88 23       	and	r24, r24
     de0:	19 f0       	breq	.+6      	; 0xde8 <dtoa_prf+0x2a0>
     de2:	91 93       	st	Z+, r25
     de4:	81 50       	subi	r24, 0x01	; 1
     de6:	fb cf       	rjmp	.-10     	; 0xdde <dtoa_prf+0x296>
     de8:	f7 01       	movw	r30, r14
     dea:	e2 0f       	add	r30, r18
     dec:	f1 1d       	adc	r31, r1
     dee:	10 82       	st	Z, r1
     df0:	80 e0       	ldi	r24, 0x00	; 0
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	29 96       	adiw	r28, 0x09	; 9
     df6:	ec e0       	ldi	r30, 0x0C	; 12
     df8:	0c 94 a8 08 	jmp	0x1150	; 0x1150 <__epilogue_restores__+0xc>

00000dfc <__ftoa_engine>:
     dfc:	28 30       	cpi	r18, 0x08	; 8
     dfe:	08 f0       	brcs	.+2      	; 0xe02 <__ftoa_engine+0x6>
     e00:	27 e0       	ldi	r18, 0x07	; 7
     e02:	33 27       	eor	r19, r19
     e04:	da 01       	movw	r26, r20
     e06:	99 0f       	add	r25, r25
     e08:	31 1d       	adc	r19, r1
     e0a:	87 fd       	sbrc	r24, 7
     e0c:	91 60       	ori	r25, 0x01	; 1
     e0e:	00 96       	adiw	r24, 0x00	; 0
     e10:	61 05       	cpc	r22, r1
     e12:	71 05       	cpc	r23, r1
     e14:	39 f4       	brne	.+14     	; 0xe24 <__ftoa_engine+0x28>
     e16:	32 60       	ori	r19, 0x02	; 2
     e18:	2e 5f       	subi	r18, 0xFE	; 254
     e1a:	3d 93       	st	X+, r19
     e1c:	30 e3       	ldi	r19, 0x30	; 48
     e1e:	2a 95       	dec	r18
     e20:	e1 f7       	brne	.-8      	; 0xe1a <__ftoa_engine+0x1e>
     e22:	08 95       	ret
     e24:	9f 3f       	cpi	r25, 0xFF	; 255
     e26:	30 f0       	brcs	.+12     	; 0xe34 <__ftoa_engine+0x38>
     e28:	80 38       	cpi	r24, 0x80	; 128
     e2a:	71 05       	cpc	r23, r1
     e2c:	61 05       	cpc	r22, r1
     e2e:	09 f0       	breq	.+2      	; 0xe32 <__ftoa_engine+0x36>
     e30:	3c 5f       	subi	r19, 0xFC	; 252
     e32:	3c 5f       	subi	r19, 0xFC	; 252
     e34:	3d 93       	st	X+, r19
     e36:	91 30       	cpi	r25, 0x01	; 1
     e38:	08 f0       	brcs	.+2      	; 0xe3c <__ftoa_engine+0x40>
     e3a:	80 68       	ori	r24, 0x80	; 128
     e3c:	91 1d       	adc	r25, r1
     e3e:	df 93       	push	r29
     e40:	cf 93       	push	r28
     e42:	1f 93       	push	r17
     e44:	0f 93       	push	r16
     e46:	ff 92       	push	r15
     e48:	ef 92       	push	r14
     e4a:	19 2f       	mov	r17, r25
     e4c:	98 7f       	andi	r25, 0xF8	; 248
     e4e:	96 95       	lsr	r25
     e50:	e9 2f       	mov	r30, r25
     e52:	96 95       	lsr	r25
     e54:	96 95       	lsr	r25
     e56:	e9 0f       	add	r30, r25
     e58:	ff 27       	eor	r31, r31
     e5a:	ee 53       	subi	r30, 0x3E	; 62
     e5c:	ff 4f       	sbci	r31, 0xFF	; 255
     e5e:	99 27       	eor	r25, r25
     e60:	33 27       	eor	r19, r19
     e62:	ee 24       	eor	r14, r14
     e64:	ff 24       	eor	r15, r15
     e66:	a7 01       	movw	r20, r14
     e68:	e7 01       	movw	r28, r14
     e6a:	05 90       	lpm	r0, Z+
     e6c:	08 94       	sec
     e6e:	07 94       	ror	r0
     e70:	28 f4       	brcc	.+10     	; 0xe7c <__ftoa_engine+0x80>
     e72:	36 0f       	add	r19, r22
     e74:	e7 1e       	adc	r14, r23
     e76:	f8 1e       	adc	r15, r24
     e78:	49 1f       	adc	r20, r25
     e7a:	51 1d       	adc	r21, r1
     e7c:	66 0f       	add	r22, r22
     e7e:	77 1f       	adc	r23, r23
     e80:	88 1f       	adc	r24, r24
     e82:	99 1f       	adc	r25, r25
     e84:	06 94       	lsr	r0
     e86:	a1 f7       	brne	.-24     	; 0xe70 <__ftoa_engine+0x74>
     e88:	05 90       	lpm	r0, Z+
     e8a:	07 94       	ror	r0
     e8c:	28 f4       	brcc	.+10     	; 0xe98 <__ftoa_engine+0x9c>
     e8e:	e7 0e       	add	r14, r23
     e90:	f8 1e       	adc	r15, r24
     e92:	49 1f       	adc	r20, r25
     e94:	56 1f       	adc	r21, r22
     e96:	c1 1d       	adc	r28, r1
     e98:	77 0f       	add	r23, r23
     e9a:	88 1f       	adc	r24, r24
     e9c:	99 1f       	adc	r25, r25
     e9e:	66 1f       	adc	r22, r22
     ea0:	06 94       	lsr	r0
     ea2:	a1 f7       	brne	.-24     	; 0xe8c <__ftoa_engine+0x90>
     ea4:	05 90       	lpm	r0, Z+
     ea6:	07 94       	ror	r0
     ea8:	28 f4       	brcc	.+10     	; 0xeb4 <__ftoa_engine+0xb8>
     eaa:	f8 0e       	add	r15, r24
     eac:	49 1f       	adc	r20, r25
     eae:	56 1f       	adc	r21, r22
     eb0:	c7 1f       	adc	r28, r23
     eb2:	d1 1d       	adc	r29, r1
     eb4:	88 0f       	add	r24, r24
     eb6:	99 1f       	adc	r25, r25
     eb8:	66 1f       	adc	r22, r22
     eba:	77 1f       	adc	r23, r23
     ebc:	06 94       	lsr	r0
     ebe:	a1 f7       	brne	.-24     	; 0xea8 <__ftoa_engine+0xac>
     ec0:	05 90       	lpm	r0, Z+
     ec2:	07 94       	ror	r0
     ec4:	20 f4       	brcc	.+8      	; 0xece <__ftoa_engine+0xd2>
     ec6:	49 0f       	add	r20, r25
     ec8:	56 1f       	adc	r21, r22
     eca:	c7 1f       	adc	r28, r23
     ecc:	d8 1f       	adc	r29, r24
     ece:	99 0f       	add	r25, r25
     ed0:	66 1f       	adc	r22, r22
     ed2:	77 1f       	adc	r23, r23
     ed4:	88 1f       	adc	r24, r24
     ed6:	06 94       	lsr	r0
     ed8:	a9 f7       	brne	.-22     	; 0xec4 <__ftoa_engine+0xc8>
     eda:	84 91       	lpm	r24, Z
     edc:	10 95       	com	r17
     ede:	17 70       	andi	r17, 0x07	; 7
     ee0:	41 f0       	breq	.+16     	; 0xef2 <__ftoa_engine+0xf6>
     ee2:	d6 95       	lsr	r29
     ee4:	c7 95       	ror	r28
     ee6:	57 95       	ror	r21
     ee8:	47 95       	ror	r20
     eea:	f7 94       	ror	r15
     eec:	e7 94       	ror	r14
     eee:	1a 95       	dec	r17
     ef0:	c1 f7       	brne	.-16     	; 0xee2 <__ftoa_engine+0xe6>
     ef2:	e8 e6       	ldi	r30, 0x68	; 104
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
     ef6:	68 94       	set
     ef8:	15 90       	lpm	r1, Z+
     efa:	15 91       	lpm	r17, Z+
     efc:	35 91       	lpm	r19, Z+
     efe:	65 91       	lpm	r22, Z+
     f00:	95 91       	lpm	r25, Z+
     f02:	05 90       	lpm	r0, Z+
     f04:	7f e2       	ldi	r23, 0x2F	; 47
     f06:	73 95       	inc	r23
     f08:	e1 18       	sub	r14, r1
     f0a:	f1 0a       	sbc	r15, r17
     f0c:	43 0b       	sbc	r20, r19
     f0e:	56 0b       	sbc	r21, r22
     f10:	c9 0b       	sbc	r28, r25
     f12:	d0 09       	sbc	r29, r0
     f14:	c0 f7       	brcc	.-16     	; 0xf06 <__ftoa_engine+0x10a>
     f16:	e1 0c       	add	r14, r1
     f18:	f1 1e       	adc	r15, r17
     f1a:	43 1f       	adc	r20, r19
     f1c:	56 1f       	adc	r21, r22
     f1e:	c9 1f       	adc	r28, r25
     f20:	d0 1d       	adc	r29, r0
     f22:	7e f4       	brtc	.+30     	; 0xf42 <__ftoa_engine+0x146>
     f24:	70 33       	cpi	r23, 0x30	; 48
     f26:	11 f4       	brne	.+4      	; 0xf2c <__ftoa_engine+0x130>
     f28:	8a 95       	dec	r24
     f2a:	e6 cf       	rjmp	.-52     	; 0xef8 <__ftoa_engine+0xfc>
     f2c:	e8 94       	clt
     f2e:	01 50       	subi	r16, 0x01	; 1
     f30:	30 f0       	brcs	.+12     	; 0xf3e <__ftoa_engine+0x142>
     f32:	08 0f       	add	r16, r24
     f34:	0a f4       	brpl	.+2      	; 0xf38 <__ftoa_engine+0x13c>
     f36:	00 27       	eor	r16, r16
     f38:	02 17       	cp	r16, r18
     f3a:	08 f4       	brcc	.+2      	; 0xf3e <__ftoa_engine+0x142>
     f3c:	20 2f       	mov	r18, r16
     f3e:	23 95       	inc	r18
     f40:	02 2f       	mov	r16, r18
     f42:	7a 33       	cpi	r23, 0x3A	; 58
     f44:	28 f0       	brcs	.+10     	; 0xf50 <__ftoa_engine+0x154>
     f46:	79 e3       	ldi	r23, 0x39	; 57
     f48:	7d 93       	st	X+, r23
     f4a:	2a 95       	dec	r18
     f4c:	e9 f7       	brne	.-6      	; 0xf48 <__ftoa_engine+0x14c>
     f4e:	10 c0       	rjmp	.+32     	; 0xf70 <__ftoa_engine+0x174>
     f50:	7d 93       	st	X+, r23
     f52:	2a 95       	dec	r18
     f54:	89 f6       	brne	.-94     	; 0xef8 <__ftoa_engine+0xfc>
     f56:	06 94       	lsr	r0
     f58:	97 95       	ror	r25
     f5a:	67 95       	ror	r22
     f5c:	37 95       	ror	r19
     f5e:	17 95       	ror	r17
     f60:	17 94       	ror	r1
     f62:	e1 18       	sub	r14, r1
     f64:	f1 0a       	sbc	r15, r17
     f66:	43 0b       	sbc	r20, r19
     f68:	56 0b       	sbc	r21, r22
     f6a:	c9 0b       	sbc	r28, r25
     f6c:	d0 09       	sbc	r29, r0
     f6e:	98 f0       	brcs	.+38     	; 0xf96 <__ftoa_engine+0x19a>
     f70:	23 95       	inc	r18
     f72:	7e 91       	ld	r23, -X
     f74:	73 95       	inc	r23
     f76:	7a 33       	cpi	r23, 0x3A	; 58
     f78:	08 f0       	brcs	.+2      	; 0xf7c <__ftoa_engine+0x180>
     f7a:	70 e3       	ldi	r23, 0x30	; 48
     f7c:	7c 93       	st	X, r23
     f7e:	20 13       	cpse	r18, r16
     f80:	b8 f7       	brcc	.-18     	; 0xf70 <__ftoa_engine+0x174>
     f82:	7e 91       	ld	r23, -X
     f84:	70 61       	ori	r23, 0x10	; 16
     f86:	7d 93       	st	X+, r23
     f88:	30 f0       	brcs	.+12     	; 0xf96 <__ftoa_engine+0x19a>
     f8a:	83 95       	inc	r24
     f8c:	71 e3       	ldi	r23, 0x31	; 49
     f8e:	7d 93       	st	X+, r23
     f90:	70 e3       	ldi	r23, 0x30	; 48
     f92:	2a 95       	dec	r18
     f94:	e1 f7       	brne	.-8      	; 0xf8e <__ftoa_engine+0x192>
     f96:	11 24       	eor	r1, r1
     f98:	ef 90       	pop	r14
     f9a:	ff 90       	pop	r15
     f9c:	0f 91       	pop	r16
     f9e:	1f 91       	pop	r17
     fa0:	cf 91       	pop	r28
     fa2:	df 91       	pop	r29
     fa4:	99 27       	eor	r25, r25
     fa6:	87 fd       	sbrc	r24, 7
     fa8:	90 95       	com	r25
     faa:	08 95       	ret

00000fac <strnlen_P>:
     fac:	fc 01       	movw	r30, r24
     fae:	05 90       	lpm	r0, Z+
     fb0:	61 50       	subi	r22, 0x01	; 1
     fb2:	70 40       	sbci	r23, 0x00	; 0
     fb4:	01 10       	cpse	r0, r1
     fb6:	d8 f7       	brcc	.-10     	; 0xfae <strnlen_P+0x2>
     fb8:	80 95       	com	r24
     fba:	90 95       	com	r25
     fbc:	8e 0f       	add	r24, r30
     fbe:	9f 1f       	adc	r25, r31
     fc0:	08 95       	ret

00000fc2 <strnlen>:
     fc2:	fc 01       	movw	r30, r24
     fc4:	61 50       	subi	r22, 0x01	; 1
     fc6:	70 40       	sbci	r23, 0x00	; 0
     fc8:	01 90       	ld	r0, Z+
     fca:	01 10       	cpse	r0, r1
     fcc:	d8 f7       	brcc	.-10     	; 0xfc4 <strnlen+0x2>
     fce:	80 95       	com	r24
     fd0:	90 95       	com	r25
     fd2:	8e 0f       	add	r24, r30
     fd4:	9f 1f       	adc	r25, r31
     fd6:	08 95       	ret

00000fd8 <fputc>:
     fd8:	0f 93       	push	r16
     fda:	1f 93       	push	r17
     fdc:	cf 93       	push	r28
     fde:	df 93       	push	r29
     fe0:	fb 01       	movw	r30, r22
     fe2:	23 81       	ldd	r18, Z+3	; 0x03
     fe4:	21 fd       	sbrc	r18, 1
     fe6:	03 c0       	rjmp	.+6      	; 0xfee <fputc+0x16>
     fe8:	8f ef       	ldi	r24, 0xFF	; 255
     fea:	9f ef       	ldi	r25, 0xFF	; 255
     fec:	2c c0       	rjmp	.+88     	; 0x1046 <fputc+0x6e>
     fee:	22 ff       	sbrs	r18, 2
     ff0:	16 c0       	rjmp	.+44     	; 0x101e <fputc+0x46>
     ff2:	46 81       	ldd	r20, Z+6	; 0x06
     ff4:	57 81       	ldd	r21, Z+7	; 0x07
     ff6:	24 81       	ldd	r18, Z+4	; 0x04
     ff8:	35 81       	ldd	r19, Z+5	; 0x05
     ffa:	42 17       	cp	r20, r18
     ffc:	53 07       	cpc	r21, r19
     ffe:	44 f4       	brge	.+16     	; 0x1010 <fputc+0x38>
    1000:	a0 81       	ld	r26, Z
    1002:	b1 81       	ldd	r27, Z+1	; 0x01
    1004:	9d 01       	movw	r18, r26
    1006:	2f 5f       	subi	r18, 0xFF	; 255
    1008:	3f 4f       	sbci	r19, 0xFF	; 255
    100a:	31 83       	std	Z+1, r19	; 0x01
    100c:	20 83       	st	Z, r18
    100e:	8c 93       	st	X, r24
    1010:	26 81       	ldd	r18, Z+6	; 0x06
    1012:	37 81       	ldd	r19, Z+7	; 0x07
    1014:	2f 5f       	subi	r18, 0xFF	; 255
    1016:	3f 4f       	sbci	r19, 0xFF	; 255
    1018:	37 83       	std	Z+7, r19	; 0x07
    101a:	26 83       	std	Z+6, r18	; 0x06
    101c:	14 c0       	rjmp	.+40     	; 0x1046 <fputc+0x6e>
    101e:	8b 01       	movw	r16, r22
    1020:	ec 01       	movw	r28, r24
    1022:	fb 01       	movw	r30, r22
    1024:	00 84       	ldd	r0, Z+8	; 0x08
    1026:	f1 85       	ldd	r31, Z+9	; 0x09
    1028:	e0 2d       	mov	r30, r0
    102a:	09 95       	icall
    102c:	89 2b       	or	r24, r25
    102e:	e1 f6       	brne	.-72     	; 0xfe8 <fputc+0x10>
    1030:	d8 01       	movw	r26, r16
    1032:	16 96       	adiw	r26, 0x06	; 6
    1034:	8d 91       	ld	r24, X+
    1036:	9c 91       	ld	r25, X
    1038:	17 97       	sbiw	r26, 0x07	; 7
    103a:	01 96       	adiw	r24, 0x01	; 1
    103c:	17 96       	adiw	r26, 0x07	; 7
    103e:	9c 93       	st	X, r25
    1040:	8e 93       	st	-X, r24
    1042:	16 97       	sbiw	r26, 0x06	; 6
    1044:	ce 01       	movw	r24, r28
    1046:	df 91       	pop	r29
    1048:	cf 91       	pop	r28
    104a:	1f 91       	pop	r17
    104c:	0f 91       	pop	r16
    104e:	08 95       	ret

00001050 <__ultoa_invert>:
    1050:	fa 01       	movw	r30, r20
    1052:	aa 27       	eor	r26, r26
    1054:	28 30       	cpi	r18, 0x08	; 8
    1056:	51 f1       	breq	.+84     	; 0x10ac <__ultoa_invert+0x5c>
    1058:	20 31       	cpi	r18, 0x10	; 16
    105a:	81 f1       	breq	.+96     	; 0x10bc <__ultoa_invert+0x6c>
    105c:	e8 94       	clt
    105e:	6f 93       	push	r22
    1060:	6e 7f       	andi	r22, 0xFE	; 254
    1062:	6e 5f       	subi	r22, 0xFE	; 254
    1064:	7f 4f       	sbci	r23, 0xFF	; 255
    1066:	8f 4f       	sbci	r24, 0xFF	; 255
    1068:	9f 4f       	sbci	r25, 0xFF	; 255
    106a:	af 4f       	sbci	r26, 0xFF	; 255
    106c:	b1 e0       	ldi	r27, 0x01	; 1
    106e:	3e d0       	rcall	.+124    	; 0x10ec <__ultoa_invert+0x9c>
    1070:	b4 e0       	ldi	r27, 0x04	; 4
    1072:	3c d0       	rcall	.+120    	; 0x10ec <__ultoa_invert+0x9c>
    1074:	67 0f       	add	r22, r23
    1076:	78 1f       	adc	r23, r24
    1078:	89 1f       	adc	r24, r25
    107a:	9a 1f       	adc	r25, r26
    107c:	a1 1d       	adc	r26, r1
    107e:	68 0f       	add	r22, r24
    1080:	79 1f       	adc	r23, r25
    1082:	8a 1f       	adc	r24, r26
    1084:	91 1d       	adc	r25, r1
    1086:	a1 1d       	adc	r26, r1
    1088:	6a 0f       	add	r22, r26
    108a:	71 1d       	adc	r23, r1
    108c:	81 1d       	adc	r24, r1
    108e:	91 1d       	adc	r25, r1
    1090:	a1 1d       	adc	r26, r1
    1092:	20 d0       	rcall	.+64     	; 0x10d4 <__ultoa_invert+0x84>
    1094:	09 f4       	brne	.+2      	; 0x1098 <__ultoa_invert+0x48>
    1096:	68 94       	set
    1098:	3f 91       	pop	r19
    109a:	2a e0       	ldi	r18, 0x0A	; 10
    109c:	26 9f       	mul	r18, r22
    109e:	11 24       	eor	r1, r1
    10a0:	30 19       	sub	r19, r0
    10a2:	30 5d       	subi	r19, 0xD0	; 208
    10a4:	31 93       	st	Z+, r19
    10a6:	de f6       	brtc	.-74     	; 0x105e <__ultoa_invert+0xe>
    10a8:	cf 01       	movw	r24, r30
    10aa:	08 95       	ret
    10ac:	46 2f       	mov	r20, r22
    10ae:	47 70       	andi	r20, 0x07	; 7
    10b0:	40 5d       	subi	r20, 0xD0	; 208
    10b2:	41 93       	st	Z+, r20
    10b4:	b3 e0       	ldi	r27, 0x03	; 3
    10b6:	0f d0       	rcall	.+30     	; 0x10d6 <__ultoa_invert+0x86>
    10b8:	c9 f7       	brne	.-14     	; 0x10ac <__ultoa_invert+0x5c>
    10ba:	f6 cf       	rjmp	.-20     	; 0x10a8 <__ultoa_invert+0x58>
    10bc:	46 2f       	mov	r20, r22
    10be:	4f 70       	andi	r20, 0x0F	; 15
    10c0:	40 5d       	subi	r20, 0xD0	; 208
    10c2:	4a 33       	cpi	r20, 0x3A	; 58
    10c4:	18 f0       	brcs	.+6      	; 0x10cc <__ultoa_invert+0x7c>
    10c6:	49 5d       	subi	r20, 0xD9	; 217
    10c8:	31 fd       	sbrc	r19, 1
    10ca:	40 52       	subi	r20, 0x20	; 32
    10cc:	41 93       	st	Z+, r20
    10ce:	02 d0       	rcall	.+4      	; 0x10d4 <__ultoa_invert+0x84>
    10d0:	a9 f7       	brne	.-22     	; 0x10bc <__ultoa_invert+0x6c>
    10d2:	ea cf       	rjmp	.-44     	; 0x10a8 <__ultoa_invert+0x58>
    10d4:	b4 e0       	ldi	r27, 0x04	; 4
    10d6:	a6 95       	lsr	r26
    10d8:	97 95       	ror	r25
    10da:	87 95       	ror	r24
    10dc:	77 95       	ror	r23
    10de:	67 95       	ror	r22
    10e0:	ba 95       	dec	r27
    10e2:	c9 f7       	brne	.-14     	; 0x10d6 <__ultoa_invert+0x86>
    10e4:	00 97       	sbiw	r24, 0x00	; 0
    10e6:	61 05       	cpc	r22, r1
    10e8:	71 05       	cpc	r23, r1
    10ea:	08 95       	ret
    10ec:	9b 01       	movw	r18, r22
    10ee:	ac 01       	movw	r20, r24
    10f0:	0a 2e       	mov	r0, r26
    10f2:	06 94       	lsr	r0
    10f4:	57 95       	ror	r21
    10f6:	47 95       	ror	r20
    10f8:	37 95       	ror	r19
    10fa:	27 95       	ror	r18
    10fc:	ba 95       	dec	r27
    10fe:	c9 f7       	brne	.-14     	; 0x10f2 <__ultoa_invert+0xa2>
    1100:	62 0f       	add	r22, r18
    1102:	73 1f       	adc	r23, r19
    1104:	84 1f       	adc	r24, r20
    1106:	95 1f       	adc	r25, r21
    1108:	a0 1d       	adc	r26, r0
    110a:	08 95       	ret

0000110c <__prologue_saves__>:
    110c:	2f 92       	push	r2
    110e:	3f 92       	push	r3
    1110:	4f 92       	push	r4
    1112:	5f 92       	push	r5
    1114:	6f 92       	push	r6
    1116:	7f 92       	push	r7
    1118:	8f 92       	push	r8
    111a:	9f 92       	push	r9
    111c:	af 92       	push	r10
    111e:	bf 92       	push	r11
    1120:	cf 92       	push	r12
    1122:	df 92       	push	r13
    1124:	ef 92       	push	r14
    1126:	ff 92       	push	r15
    1128:	0f 93       	push	r16
    112a:	1f 93       	push	r17
    112c:	cf 93       	push	r28
    112e:	df 93       	push	r29
    1130:	cd b7       	in	r28, 0x3d	; 61
    1132:	de b7       	in	r29, 0x3e	; 62
    1134:	ca 1b       	sub	r28, r26
    1136:	db 0b       	sbc	r29, r27
    1138:	0f b6       	in	r0, 0x3f	; 63
    113a:	f8 94       	cli
    113c:	de bf       	out	0x3e, r29	; 62
    113e:	0f be       	out	0x3f, r0	; 63
    1140:	cd bf       	out	0x3d, r28	; 61
    1142:	09 94       	ijmp

00001144 <__epilogue_restores__>:
    1144:	2a 88       	ldd	r2, Y+18	; 0x12
    1146:	39 88       	ldd	r3, Y+17	; 0x11
    1148:	48 88       	ldd	r4, Y+16	; 0x10
    114a:	5f 84       	ldd	r5, Y+15	; 0x0f
    114c:	6e 84       	ldd	r6, Y+14	; 0x0e
    114e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1150:	8c 84       	ldd	r8, Y+12	; 0x0c
    1152:	9b 84       	ldd	r9, Y+11	; 0x0b
    1154:	aa 84       	ldd	r10, Y+10	; 0x0a
    1156:	b9 84       	ldd	r11, Y+9	; 0x09
    1158:	c8 84       	ldd	r12, Y+8	; 0x08
    115a:	df 80       	ldd	r13, Y+7	; 0x07
    115c:	ee 80       	ldd	r14, Y+6	; 0x06
    115e:	fd 80       	ldd	r15, Y+5	; 0x05
    1160:	0c 81       	ldd	r16, Y+4	; 0x04
    1162:	1b 81       	ldd	r17, Y+3	; 0x03
    1164:	aa 81       	ldd	r26, Y+2	; 0x02
    1166:	b9 81       	ldd	r27, Y+1	; 0x01
    1168:	ce 0f       	add	r28, r30
    116a:	d1 1d       	adc	r29, r1
    116c:	0f b6       	in	r0, 0x3f	; 63
    116e:	f8 94       	cli
    1170:	de bf       	out	0x3e, r29	; 62
    1172:	0f be       	out	0x3f, r0	; 63
    1174:	cd bf       	out	0x3d, r28	; 61
    1176:	ed 01       	movw	r28, r26
    1178:	08 95       	ret

0000117a <_exit>:
    117a:	f8 94       	cli

0000117c <__stop_program>:
    117c:	ff cf       	rjmp	.-2      	; 0x117c <__stop_program>
