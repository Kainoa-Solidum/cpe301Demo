
ATmega16_Interfacing_to_Nokia5110.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001f0  00800100  000001f8  0000026c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001f8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000045c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000048c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  000004cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b69  00000000  00000000  00000564  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007ec  00000000  00000000  000010cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000057e  00000000  00000000  000018b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000148  00000000  00000000  00001e38  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c6  00000000  00000000  00001f80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000383  00000000  00000000  00002446  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  000027c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ef       	ldi	r30, 0xF8	; 248
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 3f       	cpi	r26, 0xF0	; 240
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <main>
  8e:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <N5110_Cmnd>:
	{
		SPI_Write(image_data[k]);
	}
	PORTB &= ~(1<<DC);
	SPI_SS_Disable();
}
  96:	cf 93       	push	r28
  98:	c8 2f       	mov	r28, r24
  9a:	29 98       	cbi	0x05, 1	; 5
  9c:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <SPI_SS_Enable>
  a0:	8c 2f       	mov	r24, r28
  a2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <SPI_Write>
  a6:	29 9a       	sbi	0x05, 1	; 5
  a8:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <SPI_SS_Disable>
  ac:	cf 91       	pop	r28
  ae:	08 95       	ret

000000b0 <N5110_Data>:
  b0:	ef 92       	push	r14
  b2:	ff 92       	push	r15
  b4:	0f 93       	push	r16
  b6:	1f 93       	push	r17
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
  bc:	8c 01       	movw	r16, r24
  be:	29 9a       	sbi	0x05, 1	; 5
  c0:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <SPI_SS_Enable>
  c4:	f8 01       	movw	r30, r16
  c6:	01 90       	ld	r0, Z+
  c8:	00 20       	and	r0, r0
  ca:	e9 f7       	brne	.-6      	; 0xc6 <N5110_Data+0x16>
  cc:	31 97       	sbiw	r30, 0x01	; 1
  ce:	e0 1b       	sub	r30, r16
  d0:	f1 0b       	sbc	r31, r17
  d2:	1e 16       	cp	r1, r30
  d4:	1f 06       	cpc	r1, r31
  d6:	3c f5       	brge	.+78     	; 0x126 <N5110_Data+0x76>
  d8:	e8 01       	movw	r28, r16
  da:	0e 0f       	add	r16, r30
  dc:	1f 1f       	adc	r17, r31
  de:	20 c0       	rjmp	.+64     	; 0x120 <N5110_Data+0x70>
  e0:	28 81       	ld	r18, Y
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	20 52       	subi	r18, 0x20	; 32
  e6:	31 09       	sbc	r19, r1
  e8:	f9 01       	movw	r30, r18
  ea:	ee 0f       	add	r30, r30
  ec:	ff 1f       	adc	r31, r31
  ee:	ee 0f       	add	r30, r30
  f0:	ff 1f       	adc	r31, r31
  f2:	e2 0f       	add	r30, r18
  f4:	f3 1f       	adc	r31, r19
  f6:	e0 5f       	subi	r30, 0xF0	; 240
  f8:	fe 4f       	sbci	r31, 0xFE	; 254
  fa:	ee 0d       	add	r30, r14
  fc:	ff 1d       	adc	r31, r15
  fe:	80 81       	ld	r24, Z
 100:	0e 94 f5 00 	call	0x1ea	; 0x1ea <SPI_Write>
 104:	8f ef       	ldi	r24, 0xFF	; 255
 106:	e8 1a       	sub	r14, r24
 108:	f8 0a       	sbc	r15, r24
 10a:	85 e0       	ldi	r24, 0x05	; 5
 10c:	e8 16       	cp	r14, r24
 10e:	f1 04       	cpc	r15, r1
 110:	39 f7       	brne	.-50     	; 0xe0 <N5110_Data+0x30>
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	0e 94 f5 00 	call	0x1ea	; 0x1ea <SPI_Write>
 118:	21 96       	adiw	r28, 0x01	; 1
 11a:	0c 17       	cp	r16, r28
 11c:	1d 07       	cpc	r17, r29
 11e:	19 f0       	breq	.+6      	; 0x126 <N5110_Data+0x76>
 120:	e1 2c       	mov	r14, r1
 122:	f1 2c       	mov	r15, r1
 124:	dd cf       	rjmp	.-70     	; 0xe0 <N5110_Data+0x30>
 126:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <SPI_SS_Disable>
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	1f 91       	pop	r17
 130:	0f 91       	pop	r16
 132:	ff 90       	pop	r15
 134:	ef 90       	pop	r14
 136:	08 95       	ret

00000138 <N5110_Reset>:
 138:	28 98       	cbi	0x05, 0	; 5
 13a:	2f ef       	ldi	r18, 0xFF	; 255
 13c:	80 e7       	ldi	r24, 0x70	; 112
 13e:	92 e0       	ldi	r25, 0x02	; 2
 140:	21 50       	subi	r18, 0x01	; 1
 142:	80 40       	sbci	r24, 0x00	; 0
 144:	90 40       	sbci	r25, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <N5110_Reset+0x8>
 148:	00 c0       	rjmp	.+0      	; 0x14a <N5110_Reset+0x12>
 14a:	00 00       	nop
 14c:	28 9a       	sbi	0x05, 0	; 5
 14e:	08 95       	ret

00000150 <N5110_init>:
 150:	0e 94 9c 00 	call	0x138	; 0x138 <N5110_Reset>
 154:	81 e2       	ldi	r24, 0x21	; 33
 156:	0e 94 4b 00 	call	0x96	; 0x96 <N5110_Cmnd>
 15a:	80 ec       	ldi	r24, 0xC0	; 192
 15c:	0e 94 4b 00 	call	0x96	; 0x96 <N5110_Cmnd>
 160:	87 e0       	ldi	r24, 0x07	; 7
 162:	0e 94 4b 00 	call	0x96	; 0x96 <N5110_Cmnd>
 166:	83 e1       	ldi	r24, 0x13	; 19
 168:	0e 94 4b 00 	call	0x96	; 0x96 <N5110_Cmnd>
 16c:	80 e2       	ldi	r24, 0x20	; 32
 16e:	0e 94 4b 00 	call	0x96	; 0x96 <N5110_Cmnd>
 172:	8c e0       	ldi	r24, 0x0C	; 12
 174:	0e 94 4b 00 	call	0x96	; 0x96 <N5110_Cmnd>
 178:	08 95       	ret

0000017a <lcd_setXY>:
 17a:	cf 93       	push	r28
 17c:	c6 2f       	mov	r28, r22
 17e:	0e 94 4b 00 	call	0x96	; 0x96 <N5110_Cmnd>
 182:	8c 2f       	mov	r24, r28
 184:	0e 94 4b 00 	call	0x96	; 0x96 <N5110_Cmnd>
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <N5110_clear>:
 18c:	cf 93       	push	r28
 18e:	df 93       	push	r29
 190:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <SPI_SS_Enable>
 194:	29 9a       	sbi	0x05, 1	; 5
 196:	c8 ef       	ldi	r28, 0xF8	; 248
 198:	d1 e0       	ldi	r29, 0x01	; 1
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <SPI_Write>
 1a0:	21 97       	sbiw	r28, 0x01	; 1
 1a2:	d9 f7       	brne	.-10     	; 0x19a <N5110_clear+0xe>
 1a4:	29 98       	cbi	0x05, 1	; 5
 1a6:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <SPI_SS_Disable>
 1aa:	df 91       	pop	r29
 1ac:	cf 91       	pop	r28
 1ae:	08 95       	ret

000001b0 <main>:

int main()
{
	SPI_Init();
 1b0:	0e 94 ed 00 	call	0x1da	; 0x1da <SPI_Init>
	N5110_init();
 1b4:	0e 94 a8 00 	call	0x150	; 0x150 <N5110_init>
	N5110_clear();
 1b8:	0e 94 c6 00 	call	0x18c	; 0x18c <N5110_clear>
	lcd_setXY(0x40,0x80);
 1bc:	60 e8       	ldi	r22, 0x80	; 128
 1be:	80 e4       	ldi	r24, 0x40	; 64
 1c0:	0e 94 bd 00 	call	0x17a	; 0x17a <lcd_setXY>
	N5110_Data("ElectronicWings");
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	0e 94 58 00 	call	0xb0	; 0xb0 <N5110_Data>
	while(1)	
	return 0;
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	08 95       	ret

000001d2 <SPI_SS_Enable>:
char SPI_Read()
{
	SPDR = 0xFF;
	while(!(SPSR & (1<<SPIF)));										/* wait here while SPIF flag set */
	return(SPDR);													/* Return the SPDR value */
}
 1d2:	2c 98       	cbi	0x05, 4	; 5
 1d4:	08 95       	ret

000001d6 <SPI_SS_Disable>:
 1d6:	2c 9a       	sbi	0x05, 4	; 5
 1d8:	08 95       	ret

000001da <SPI_Init>:
 1da:	83 eb       	ldi	r24, 0xB3	; 179
 1dc:	84 b9       	out	0x04, r24	; 4
 1de:	28 9a       	sbi	0x05, 0	; 5
 1e0:	26 98       	cbi	0x04, 6	; 4
 1e2:	2c 9a       	sbi	0x05, 4	; 5
 1e4:	81 e5       	ldi	r24, 0x51	; 81
 1e6:	8c bd       	out	0x2c, r24	; 44
 1e8:	08 95       	ret

000001ea <SPI_Write>:

void SPI_Write(char write_data)										
{
	SPDR = write_data;													
 1ea:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));										/* wait here while SPIF flag set */
 1ec:	0d b4       	in	r0, 0x2d	; 45
 1ee:	07 fe       	sbrs	r0, 7
 1f0:	fd cf       	rjmp	.-6      	; 0x1ec <SPI_Write+0x2>
}
 1f2:	08 95       	ret

000001f4 <_exit>:
 1f4:	f8 94       	cli

000001f6 <__stop_program>:
 1f6:	ff cf       	rjmp	.-2      	; 0x1f6 <__stop_program>
