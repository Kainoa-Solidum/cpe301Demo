
TSL2561_simple.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00001316  000013aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001316  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800110  00800110  000013ba  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000013ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001418  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00001458  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d6c  00000000  00000000  00001520  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000092a  00000000  00000000  0000228c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000772  00000000  00000000  00002bb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000017c  00000000  00000000  00003328  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f2  00000000  00000000  000034a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003aa  00000000  00000000  00003996  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003d40  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e6 e1       	ldi	r30, 0x16	; 22
     17e:	f3 e1       	ldi	r31, 0x13	; 19
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a0 31       	cpi	r26, 0x10	; 16
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a0 e1       	ldi	r26, 0x10	; 16
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a5 31       	cpi	r26, 0x15	; 21
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 b3 01 	call	0x366	; 0x366 <main>
     1a0:	0c 94 89 09 	jmp	0x1312	; 0x1312 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <i2c_init>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     1a8:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     1ac:	8c e0       	ldi	r24, 0x0C	; 12
     1ae:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     1b2:	08 95       	ret

000001b4 <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     1b4:	94 ea       	ldi	r25, 0xA4	; 164
     1b6:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     1ba:	ec eb       	ldi	r30, 0xBC	; 188
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	90 81       	ld	r25, Z
     1c0:	99 23       	and	r25, r25
     1c2:	ec f7       	brge	.-6      	; 0x1be <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     1c4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     1c8:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     1ca:	98 30       	cpi	r25, 0x08	; 8
     1cc:	11 f0       	breq	.+4      	; 0x1d2 <i2c_start+0x1e>
     1ce:	90 31       	cpi	r25, 0x10	; 16
     1d0:	a1 f4       	brne	.+40     	; 0x1fa <i2c_start+0x46>

	// send device address
	TWDR = address;
     1d2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     1d6:	84 e8       	ldi	r24, 0x84	; 132
     1d8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     1dc:	ec eb       	ldi	r30, 0xBC	; 188
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	80 81       	ld	r24, Z
     1e2:	88 23       	and	r24, r24
     1e4:	ec f7       	brge	.-6      	; 0x1e0 <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     1e6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     1ea:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     1ec:	98 31       	cpi	r25, 0x18	; 24
     1ee:	39 f0       	breq	.+14     	; 0x1fe <i2c_start+0x4a>
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     1f0:	81 e0       	ldi	r24, 0x01	; 1
     1f2:	90 34       	cpi	r25, 0x40	; 64
     1f4:	29 f4       	brne	.+10     	; 0x200 <i2c_start+0x4c>
     1f6:	80 e0       	ldi	r24, 0x00	; 0
     1f8:	08 95       	ret
     1fa:	81 e0       	ldi	r24, 0x01	; 1
     1fc:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     1fe:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     200:	08 95       	ret

00000202 <i2c_start_wait>:
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
{
     202:	cf 93       	push	r28
     204:	df 93       	push	r29


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     206:	ec eb       	ldi	r30, 0xBC	; 188
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	24 ea       	ldi	r18, 0xA4	; 164
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     20c:	a9 eb       	ldi	r26, 0xB9	; 185
     20e:	b0 e0       	ldi	r27, 0x00	; 0
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
     210:	cb eb       	ldi	r28, 0xBB	; 187
     212:	d0 e0       	ldi	r29, 0x00	; 0
    	TWCR = (1<<TWINT) | (1<<TWEN);
     214:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     216:	44 e9       	ldi	r20, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     218:	20 83       	st	Z, r18
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     21a:	90 81       	ld	r25, Z
     21c:	99 23       	and	r25, r25
     21e:	ec f7       	brge	.-6      	; 0x21a <i2c_start_wait+0x18>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     220:	9c 91       	ld	r25, X
     222:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     224:	98 30       	cpi	r25, 0x08	; 8
     226:	11 f0       	breq	.+4      	; 0x22c <i2c_start_wait+0x2a>
     228:	90 31       	cpi	r25, 0x10	; 16
     22a:	b1 f7       	brne	.-20     	; 0x218 <i2c_start_wait+0x16>
    
    	// send device address
    	TWDR = address;
     22c:	88 83       	st	Y, r24
    	TWCR = (1<<TWINT) | (1<<TWEN);
     22e:	30 83       	st	Z, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     230:	90 81       	ld	r25, Z
     232:	99 23       	and	r25, r25
     234:	ec f7       	brge	.-6      	; 0x230 <i2c_start_wait+0x2e>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     236:	9c 91       	ld	r25, X
     238:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     23a:	90 32       	cpi	r25, 0x20	; 32
     23c:	11 f0       	breq	.+4      	; 0x242 <i2c_start_wait+0x40>
     23e:	98 35       	cpi	r25, 0x58	; 88
     240:	29 f4       	brne	.+10     	; 0x24c <i2c_start_wait+0x4a>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     242:	40 83       	st	Z, r20
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     244:	90 81       	ld	r25, Z
     246:	94 fd       	sbrc	r25, 4
     248:	fd cf       	rjmp	.-6      	; 0x244 <i2c_start_wait+0x42>
     24a:	e6 cf       	rjmp	.-52     	; 0x218 <i2c_start_wait+0x16>
    	}
    	//if( twst != TW_MT_SLA_ACK) return 1;
    	break;
     }

}/* i2c_start_wait */
     24c:	df 91       	pop	r29
     24e:	cf 91       	pop	r28
     250:	08 95       	ret

00000252 <i2c_rep_start>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
     252:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>

}/* i2c_rep_start */
     256:	08 95       	ret

00000258 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     258:	84 e9       	ldi	r24, 0x94	; 148
     25a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     25e:	ec eb       	ldi	r30, 0xBC	; 188
     260:	f0 e0       	ldi	r31, 0x00	; 0
     262:	80 81       	ld	r24, Z
     264:	84 fd       	sbrc	r24, 4
     266:	fd cf       	rjmp	.-6      	; 0x262 <i2c_stop+0xa>

}/* i2c_stop */
     268:	08 95       	ret

0000026a <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     26a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     26e:	84 e8       	ldi	r24, 0x84	; 132
     270:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     274:	ec eb       	ldi	r30, 0xBC	; 188
     276:	f0 e0       	ldi	r31, 0x00	; 0
     278:	80 81       	ld	r24, Z
     27a:	88 23       	and	r24, r24
     27c:	ec f7       	brge	.-6      	; 0x278 <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     27e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     282:	98 7f       	andi	r25, 0xF8	; 248
     284:	81 e0       	ldi	r24, 0x01	; 1
     286:	98 32       	cpi	r25, 0x28	; 40
     288:	09 f4       	brne	.+2      	; 0x28c <i2c_write+0x22>
     28a:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     28c:	08 95       	ret

0000028e <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     28e:	84 ec       	ldi	r24, 0xC4	; 196
     290:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));    
     294:	ec eb       	ldi	r30, 0xBC	; 188
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	80 81       	ld	r24, Z
     29a:	88 23       	and	r24, r24
     29c:	ec f7       	brge	.-6      	; 0x298 <i2c_readAck+0xa>

    return TWDR;
     29e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2c_readAck */
     2a2:	08 95       	ret

000002a4 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     2a4:	84 e8       	ldi	r24, 0x84	; 132
     2a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));
     2aa:	ec eb       	ldi	r30, 0xBC	; 188
     2ac:	f0 e0       	ldi	r31, 0x00	; 0
     2ae:	80 81       	ld	r24, Z
     2b0:	88 23       	and	r24, r24
     2b2:	ec f7       	brge	.-6      	; 0x2ae <i2c_readNak+0xa>
	
    return TWDR;
     2b4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2c_readNak */
     2b8:	08 95       	ret

000002ba <TSL2561_writereg>:
uint16_t raw;             // raw sensor value
uint16_t CH0_Data;          // CH0 raw value


void TSL2561_writereg(uint8_t reg, uint8_t val)
{
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	d8 2f       	mov	r29, r24
     2c0:	c6 2f       	mov	r28, r22
	i2c_start(TSL2561+I2C_WRITE);
     2c2:	82 e7       	ldi	r24, 0x72	; 114
     2c4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
	i2c_write(reg);  // go to register e.g. 106 user control
     2c8:	8d 2f       	mov	r24, r29
     2ca:	0e 94 35 01 	call	0x26a	; 0x26a <i2c_write>
	i2c_write(val);  // set value e.g. to 0100 0000 FIFO enable
     2ce:	8c 2f       	mov	r24, r28
     2d0:	0e 94 35 01 	call	0x26a	; 0x26a <i2c_write>
	i2c_stop();      // set stop condition = release bus
     2d4:	0e 94 2c 01 	call	0x258	; 0x258 <i2c_stop>
}
     2d8:	df 91       	pop	r29
     2da:	cf 91       	pop	r28
     2dc:	08 95       	ret

000002de <TSL2561_readreg>:


uint16_t TSL2561_readreg(uint8_t reg)
{
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	c8 2f       	mov	r28, r24
	i2c_start_wait(TSL2561+I2C_WRITE);  // set device address and write mode
     2e4:	82 e7       	ldi	r24, 0x72	; 114
     2e6:	0e 94 01 01 	call	0x202	; 0x202 <i2c_start_wait>
	i2c_write(reg);                     // ACCEL_XOUT
     2ea:	8c 2f       	mov	r24, r28
     2ec:	0e 94 35 01 	call	0x26a	; 0x26a <i2c_write>
	i2c_rep_start(TSL2561+I2C_READ);    // set device address and read mode
     2f0:	83 e7       	ldi	r24, 0x73	; 115
     2f2:	0e 94 29 01 	call	0x252	; 0x252 <i2c_rep_start>
	raw = i2c_readAck();                // read one intermediate byte
     2f6:	0e 94 47 01 	call	0x28e	; 0x28e <i2c_readAck>
     2fa:	c8 2f       	mov	r28, r24
     2fc:	d0 e0       	ldi	r29, 0x00	; 0
     2fe:	d0 93 13 01 	sts	0x0113, r29	; 0x800113 <raw+0x1>
     302:	c0 93 12 01 	sts	0x0112, r28	; 0x800112 <raw>
	raw = (raw<<8) | i2c_readNak();     // read last byte
     306:	0e 94 52 01 	call	0x2a4	; 0x2a4 <i2c_readNak>
     30a:	dc 2f       	mov	r29, r28
     30c:	cc 27       	eor	r28, r28
     30e:	c8 2b       	or	r28, r24
     310:	d0 93 13 01 	sts	0x0113, r29	; 0x800113 <raw+0x1>
     314:	c0 93 12 01 	sts	0x0112, r28	; 0x800112 <raw>
	i2c_stop();
     318:	0e 94 2c 01 	call	0x258	; 0x258 <i2c_stop>
	
	return raw;
}
     31c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <raw>
     320:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <raw+0x1>
     324:	df 91       	pop	r29
     326:	cf 91       	pop	r28
     328:	08 95       	ret

0000032a <Init_TSL2561>:


void Init_TSL2561()
{
	i2c_init();     // init I2C interface
     32a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <i2c_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     32e:	2f ef       	ldi	r18, 0xFF	; 255
     330:	83 ec       	ldi	r24, 0xC3	; 195
     332:	99 e0       	ldi	r25, 0x09	; 9
     334:	21 50       	subi	r18, 0x01	; 1
     336:	80 40       	sbci	r24, 0x00	; 0
     338:	90 40       	sbci	r25, 0x00	; 0
     33a:	e1 f7       	brne	.-8      	; 0x334 <Init_TSL2561+0xa>
     33c:	00 c0       	rjmp	.+0      	; 0x33e <Init_TSL2561+0x14>
     33e:	00 00       	nop
	_delay_ms(200);  // Wait for 200 ms.

	ret = i2c_start(TSL2561+I2C_WRITE);       // set device address and write mode
     340:	82 e7       	ldi	r24, 0x72	; 114
     342:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_start>
     346:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <ret>
	if ( ret )
     34a:	88 23       	and	r24, r24
     34c:	19 f0       	breq	.+6      	; 0x354 <Init_TSL2561+0x2a>
	{
		/* failed to issue start condition, possibly no device found */
		i2c_stop();
     34e:	0e 94 2c 01 	call	0x258	; 0x258 <i2c_stop>
     352:	ff cf       	rjmp	.-2      	; 0x352 <Init_TSL2561+0x28>
	else
	{
		/* issuing start condition ok, device accessible */
		// Select control register(0x00 | 0x80)
		// Power ON mode(0x03)
		TSL2561_writereg(0x00|0x80, 0x03); 
     354:	63 e0       	ldi	r22, 0x03	; 3
     356:	80 e8       	ldi	r24, 0x80	; 128
     358:	0e 94 5d 01 	call	0x2ba	; 0x2ba <TSL2561_writereg>
			// Select timing register(0x01 | 0x80)
	// Nominal integration time = 402ms(0x02)
		TSL2561_writereg(0x01|0x80, 0x02); 
     35c:	62 e0       	ldi	r22, 0x02	; 2
     35e:	81 e8       	ldi	r24, 0x81	; 129
     360:	0e 94 5d 01 	call	0x2ba	; 0x2ba <TSL2561_writereg>
     364:	08 95       	ret

00000366 <main>:
	}
}

int main(void)
{
     366:	cf 93       	push	r28
     368:	df 93       	push	r29
     36a:	cd b7       	in	r28, 0x3d	; 61
     36c:	de b7       	in	r29, 0x3e	; 62
     36e:	6e 97       	sbiw	r28, 0x1e	; 30
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
	uint8_t ch0_LSB, ch0_MSB;
	char buffer[20], float_[10];
	USART_Init(9600);									/* Initialize USART with 9600 baud rate */
     37a:	60 e8       	ldi	r22, 0x80	; 128
     37c:	75 e2       	ldi	r23, 0x25	; 37
     37e:	80 e0       	ldi	r24, 0x00	; 0
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	0e 94 07 02 	call	0x40e	; 0x40e <USART_Init>
	sei();             // Enable global interrupts
     386:	78 94       	sei

	Init_TSL2561();    // Sensor init
     388:	0e 94 95 01 	call	0x32a	; 0x32a <Init_TSL2561>
     38c:	2f ef       	ldi	r18, 0xFF	; 255
     38e:	83 ec       	ldi	r24, 0xC3	; 195
     390:	99 e0       	ldi	r25, 0x09	; 9
     392:	21 50       	subi	r18, 0x01	; 1
     394:	80 40       	sbci	r24, 0x00	; 0
     396:	90 40       	sbci	r25, 0x00	; 0
     398:	e1 f7       	brne	.-8      	; 0x392 <main+0x2c>
     39a:	00 c0       	rjmp	.+0      	; 0x39c <main+0x36>
     39c:	00 00       	nop
	while (1)
	{
	ch0_LSB = TSL2561_readreg(0x0C|0x80);   // read ch0 LSB byte
	ch0_MSB = TSL2561_readreg(0x0D|0x80);   // read ch0 LSB byte
	CH0_Data = ch0_MSB * 256 + ch0_LSB;
	dtostrf( CH0_Data, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     39e:	7e 01       	movw	r14, r28
     3a0:	25 e1       	ldi	r18, 0x15	; 21
     3a2:	e2 0e       	add	r14, r18
     3a4:	f1 1c       	adc	r15, r1
	sprintf(buffer," CH0 Data = %s\n",float_);
     3a6:	0f 2e       	mov	r0, r31
     3a8:	f0 e0       	ldi	r31, 0x00	; 0
     3aa:	af 2e       	mov	r10, r31
     3ac:	f1 e0       	ldi	r31, 0x01	; 1
     3ae:	bf 2e       	mov	r11, r31
     3b0:	f0 2d       	mov	r31, r0
     3b2:	ce 01       	movw	r24, r28
     3b4:	01 96       	adiw	r24, 0x01	; 1
     3b6:	6c 01       	movw	r12, r24
	Init_TSL2561();    // Sensor init
	_delay_ms(200);     // Wait for 200 ms.

	while (1)
	{
	ch0_LSB = TSL2561_readreg(0x0C|0x80);   // read ch0 LSB byte
     3b8:	8c e8       	ldi	r24, 0x8C	; 140
     3ba:	0e 94 6f 01 	call	0x2de	; 0x2de <TSL2561_readreg>
     3be:	18 2f       	mov	r17, r24
	ch0_MSB = TSL2561_readreg(0x0D|0x80);   // read ch0 LSB byte
     3c0:	8d e8       	ldi	r24, 0x8D	; 141
     3c2:	0e 94 6f 01 	call	0x2de	; 0x2de <TSL2561_readreg>
	CH0_Data = ch0_MSB * 256 + ch0_LSB;
     3c6:	98 2f       	mov	r25, r24
     3c8:	88 27       	eor	r24, r24
     3ca:	bc 01       	movw	r22, r24
     3cc:	61 0f       	add	r22, r17
     3ce:	71 1d       	adc	r23, r1
     3d0:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <__data_end+0x1>
     3d4:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <__data_end>
	dtostrf( CH0_Data, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__floatunsisf>
     3e0:	87 01       	movw	r16, r14
     3e2:	22 e0       	ldi	r18, 0x02	; 2
     3e4:	43 e0       	ldi	r20, 0x03	; 3
     3e6:	0e 94 65 06 	call	0xcca	; 0xcca <dtostrf>
	sprintf(buffer," CH0 Data = %s\n",float_);
     3ea:	ff 92       	push	r15
     3ec:	ef 92       	push	r14
     3ee:	bf 92       	push	r11
     3f0:	af 92       	push	r10
     3f2:	df 92       	push	r13
     3f4:	cf 92       	push	r12
     3f6:	0e 94 af 07 	call	0xf5e	; 0xf5e <sprintf>
	USART_SendString(buffer);
     3fa:	c6 01       	movw	r24, r12
     3fc:	0e 94 43 02 	call	0x486	; 0x486 <USART_SendString>
     400:	0f 90       	pop	r0
     402:	0f 90       	pop	r0
     404:	0f 90       	pop	r0
     406:	0f 90       	pop	r0
     408:	0f 90       	pop	r0
     40a:	0f 90       	pop	r0
     40c:	d5 cf       	rjmp	.-86     	; 0x3b8 <main+0x52>

0000040e <USART_Init>:

char USART_RxChar()									/* Data receiving function */
{
	while (!(UCSR0A & (1 << RXC0)));					/* Wait until new data receive */
	return(UDR0);									/* Get and return received data */ 
}
     40e:	e1 ec       	ldi	r30, 0xC1	; 193
     410:	f0 e0       	ldi	r31, 0x00	; 0
     412:	20 81       	ld	r18, Z
     414:	28 61       	ori	r18, 0x18	; 24
     416:	20 83       	st	Z, r18
     418:	e2 ec       	ldi	r30, 0xC2	; 194
     41a:	f0 e0       	ldi	r31, 0x00	; 0
     41c:	20 81       	ld	r18, Z
     41e:	26 60       	ori	r18, 0x06	; 6
     420:	20 83       	st	Z, r18
     422:	dc 01       	movw	r26, r24
     424:	cb 01       	movw	r24, r22
     426:	88 0f       	add	r24, r24
     428:	99 1f       	adc	r25, r25
     42a:	aa 1f       	adc	r26, r26
     42c:	bb 1f       	adc	r27, r27
     42e:	88 0f       	add	r24, r24
     430:	99 1f       	adc	r25, r25
     432:	aa 1f       	adc	r26, r26
     434:	bb 1f       	adc	r27, r27
     436:	9c 01       	movw	r18, r24
     438:	ad 01       	movw	r20, r26
     43a:	22 0f       	add	r18, r18
     43c:	33 1f       	adc	r19, r19
     43e:	44 1f       	adc	r20, r20
     440:	55 1f       	adc	r21, r21
     442:	22 0f       	add	r18, r18
     444:	33 1f       	adc	r19, r19
     446:	44 1f       	adc	r20, r20
     448:	55 1f       	adc	r21, r21
     44a:	60 e0       	ldi	r22, 0x00	; 0
     44c:	74 e2       	ldi	r23, 0x24	; 36
     44e:	84 ef       	ldi	r24, 0xF4	; 244
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	0e 94 0c 06 	call	0xc18	; 0xc18 <__udivmodsi4>
     456:	8f ef       	ldi	r24, 0xFF	; 255
     458:	82 0f       	add	r24, r18
     45a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     45e:	da 01       	movw	r26, r20
     460:	c9 01       	movw	r24, r18
     462:	01 97       	sbiw	r24, 0x01	; 1
     464:	a1 09       	sbc	r26, r1
     466:	b1 09       	sbc	r27, r1
     468:	89 2f       	mov	r24, r25
     46a:	9a 2f       	mov	r25, r26
     46c:	ab 2f       	mov	r26, r27
     46e:	bb 27       	eor	r27, r27
     470:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     474:	08 95       	ret

00000476 <USART_TxChar>:

void USART_TxChar(char data)						/* Data transmitting function */
{
	UDR0 = data;										/* Write data to be transmitting in UDR */
     476:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while (!(UCSR0A & (1<<UDRE0)));					/* Wait until data transmit and buffer get empty */
     47a:	e0 ec       	ldi	r30, 0xC0	; 192
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	80 81       	ld	r24, Z
     480:	85 ff       	sbrs	r24, 5
     482:	fd cf       	rjmp	.-6      	; 0x47e <USART_TxChar+0x8>
}
     484:	08 95       	ret

00000486 <USART_SendString>:

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
     48a:	ec 01       	movw	r28, r24
	int i=0;																	
	while (str[i]!=0)
     48c:	88 81       	ld	r24, Y
     48e:	88 23       	and	r24, r24
     490:	31 f0       	breq	.+12     	; 0x49e <USART_SendString+0x18>
     492:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
     494:	0e 94 3b 02 	call	0x476	; 0x476 <USART_TxChar>
}

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
	int i=0;																	
	while (str[i]!=0)
     498:	89 91       	ld	r24, Y+
     49a:	81 11       	cpse	r24, r1
     49c:	fb cf       	rjmp	.-10     	; 0x494 <USART_SendString+0xe>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
		i++;
	}
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	08 95       	ret

000004a4 <__floatunsisf>:
     4a4:	e8 94       	clt
     4a6:	09 c0       	rjmp	.+18     	; 0x4ba <__floatsisf+0x12>

000004a8 <__floatsisf>:
     4a8:	97 fb       	bst	r25, 7
     4aa:	3e f4       	brtc	.+14     	; 0x4ba <__floatsisf+0x12>
     4ac:	90 95       	com	r25
     4ae:	80 95       	com	r24
     4b0:	70 95       	com	r23
     4b2:	61 95       	neg	r22
     4b4:	7f 4f       	sbci	r23, 0xFF	; 255
     4b6:	8f 4f       	sbci	r24, 0xFF	; 255
     4b8:	9f 4f       	sbci	r25, 0xFF	; 255
     4ba:	99 23       	and	r25, r25
     4bc:	a9 f0       	breq	.+42     	; 0x4e8 <__floatsisf+0x40>
     4be:	f9 2f       	mov	r31, r25
     4c0:	96 e9       	ldi	r25, 0x96	; 150
     4c2:	bb 27       	eor	r27, r27
     4c4:	93 95       	inc	r25
     4c6:	f6 95       	lsr	r31
     4c8:	87 95       	ror	r24
     4ca:	77 95       	ror	r23
     4cc:	67 95       	ror	r22
     4ce:	b7 95       	ror	r27
     4d0:	f1 11       	cpse	r31, r1
     4d2:	f8 cf       	rjmp	.-16     	; 0x4c4 <__floatsisf+0x1c>
     4d4:	fa f4       	brpl	.+62     	; 0x514 <__floatsisf+0x6c>
     4d6:	bb 0f       	add	r27, r27
     4d8:	11 f4       	brne	.+4      	; 0x4de <__floatsisf+0x36>
     4da:	60 ff       	sbrs	r22, 0
     4dc:	1b c0       	rjmp	.+54     	; 0x514 <__floatsisf+0x6c>
     4de:	6f 5f       	subi	r22, 0xFF	; 255
     4e0:	7f 4f       	sbci	r23, 0xFF	; 255
     4e2:	8f 4f       	sbci	r24, 0xFF	; 255
     4e4:	9f 4f       	sbci	r25, 0xFF	; 255
     4e6:	16 c0       	rjmp	.+44     	; 0x514 <__floatsisf+0x6c>
     4e8:	88 23       	and	r24, r24
     4ea:	11 f0       	breq	.+4      	; 0x4f0 <__floatsisf+0x48>
     4ec:	96 e9       	ldi	r25, 0x96	; 150
     4ee:	11 c0       	rjmp	.+34     	; 0x512 <__floatsisf+0x6a>
     4f0:	77 23       	and	r23, r23
     4f2:	21 f0       	breq	.+8      	; 0x4fc <__floatsisf+0x54>
     4f4:	9e e8       	ldi	r25, 0x8E	; 142
     4f6:	87 2f       	mov	r24, r23
     4f8:	76 2f       	mov	r23, r22
     4fa:	05 c0       	rjmp	.+10     	; 0x506 <__floatsisf+0x5e>
     4fc:	66 23       	and	r22, r22
     4fe:	71 f0       	breq	.+28     	; 0x51c <__floatsisf+0x74>
     500:	96 e8       	ldi	r25, 0x86	; 134
     502:	86 2f       	mov	r24, r22
     504:	70 e0       	ldi	r23, 0x00	; 0
     506:	60 e0       	ldi	r22, 0x00	; 0
     508:	2a f0       	brmi	.+10     	; 0x514 <__floatsisf+0x6c>
     50a:	9a 95       	dec	r25
     50c:	66 0f       	add	r22, r22
     50e:	77 1f       	adc	r23, r23
     510:	88 1f       	adc	r24, r24
     512:	da f7       	brpl	.-10     	; 0x50a <__floatsisf+0x62>
     514:	88 0f       	add	r24, r24
     516:	96 95       	lsr	r25
     518:	87 95       	ror	r24
     51a:	97 f9       	bld	r25, 7
     51c:	08 95       	ret

0000051e <vfprintf>:
     51e:	a0 e1       	ldi	r26, 0x10	; 16
     520:	b0 e0       	ldi	r27, 0x00	; 0
     522:	e5 e9       	ldi	r30, 0x95	; 149
     524:	f2 e0       	ldi	r31, 0x02	; 2
     526:	0c 94 2e 06 	jmp	0xc5c	; 0xc5c <__prologue_saves__>
     52a:	7c 01       	movw	r14, r24
     52c:	1b 01       	movw	r2, r22
     52e:	6a 01       	movw	r12, r20
     530:	fc 01       	movw	r30, r24
     532:	17 82       	std	Z+7, r1	; 0x07
     534:	16 82       	std	Z+6, r1	; 0x06
     536:	83 81       	ldd	r24, Z+3	; 0x03
     538:	81 ff       	sbrs	r24, 1
     53a:	44 c3       	rjmp	.+1672   	; 0xbc4 <__stack+0x2c5>
     53c:	9e 01       	movw	r18, r28
     53e:	2f 5f       	subi	r18, 0xFF	; 255
     540:	3f 4f       	sbci	r19, 0xFF	; 255
     542:	39 01       	movw	r6, r18
     544:	f7 01       	movw	r30, r14
     546:	93 81       	ldd	r25, Z+3	; 0x03
     548:	f1 01       	movw	r30, r2
     54a:	93 fd       	sbrc	r25, 3
     54c:	85 91       	lpm	r24, Z+
     54e:	93 ff       	sbrs	r25, 3
     550:	81 91       	ld	r24, Z+
     552:	1f 01       	movw	r2, r30
     554:	88 23       	and	r24, r24
     556:	09 f4       	brne	.+2      	; 0x55a <vfprintf+0x3c>
     558:	31 c3       	rjmp	.+1634   	; 0xbbc <__stack+0x2bd>
     55a:	85 32       	cpi	r24, 0x25	; 37
     55c:	39 f4       	brne	.+14     	; 0x56c <vfprintf+0x4e>
     55e:	93 fd       	sbrc	r25, 3
     560:	85 91       	lpm	r24, Z+
     562:	93 ff       	sbrs	r25, 3
     564:	81 91       	ld	r24, Z+
     566:	1f 01       	movw	r2, r30
     568:	85 32       	cpi	r24, 0x25	; 37
     56a:	39 f4       	brne	.+14     	; 0x57a <vfprintf+0x5c>
     56c:	b7 01       	movw	r22, r14
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     574:	56 01       	movw	r10, r12
     576:	65 01       	movw	r12, r10
     578:	e5 cf       	rjmp	.-54     	; 0x544 <vfprintf+0x26>
     57a:	10 e0       	ldi	r17, 0x00	; 0
     57c:	51 2c       	mov	r5, r1
     57e:	91 2c       	mov	r9, r1
     580:	ff e1       	ldi	r31, 0x1F	; 31
     582:	f9 15       	cp	r31, r9
     584:	d8 f0       	brcs	.+54     	; 0x5bc <vfprintf+0x9e>
     586:	8b 32       	cpi	r24, 0x2B	; 43
     588:	79 f0       	breq	.+30     	; 0x5a8 <vfprintf+0x8a>
     58a:	38 f4       	brcc	.+14     	; 0x59a <vfprintf+0x7c>
     58c:	80 32       	cpi	r24, 0x20	; 32
     58e:	79 f0       	breq	.+30     	; 0x5ae <vfprintf+0x90>
     590:	83 32       	cpi	r24, 0x23	; 35
     592:	a1 f4       	brne	.+40     	; 0x5bc <vfprintf+0x9e>
     594:	f9 2d       	mov	r31, r9
     596:	f0 61       	ori	r31, 0x10	; 16
     598:	2e c0       	rjmp	.+92     	; 0x5f6 <vfprintf+0xd8>
     59a:	8d 32       	cpi	r24, 0x2D	; 45
     59c:	61 f0       	breq	.+24     	; 0x5b6 <vfprintf+0x98>
     59e:	80 33       	cpi	r24, 0x30	; 48
     5a0:	69 f4       	brne	.+26     	; 0x5bc <vfprintf+0x9e>
     5a2:	29 2d       	mov	r18, r9
     5a4:	21 60       	ori	r18, 0x01	; 1
     5a6:	2d c0       	rjmp	.+90     	; 0x602 <vfprintf+0xe4>
     5a8:	39 2d       	mov	r19, r9
     5aa:	32 60       	ori	r19, 0x02	; 2
     5ac:	93 2e       	mov	r9, r19
     5ae:	89 2d       	mov	r24, r9
     5b0:	84 60       	ori	r24, 0x04	; 4
     5b2:	98 2e       	mov	r9, r24
     5b4:	2a c0       	rjmp	.+84     	; 0x60a <vfprintf+0xec>
     5b6:	e9 2d       	mov	r30, r9
     5b8:	e8 60       	ori	r30, 0x08	; 8
     5ba:	15 c0       	rjmp	.+42     	; 0x5e6 <vfprintf+0xc8>
     5bc:	97 fc       	sbrc	r9, 7
     5be:	2d c0       	rjmp	.+90     	; 0x61a <vfprintf+0xfc>
     5c0:	20 ed       	ldi	r18, 0xD0	; 208
     5c2:	28 0f       	add	r18, r24
     5c4:	2a 30       	cpi	r18, 0x0A	; 10
     5c6:	88 f4       	brcc	.+34     	; 0x5ea <vfprintf+0xcc>
     5c8:	96 fe       	sbrs	r9, 6
     5ca:	06 c0       	rjmp	.+12     	; 0x5d8 <vfprintf+0xba>
     5cc:	3a e0       	ldi	r19, 0x0A	; 10
     5ce:	13 9f       	mul	r17, r19
     5d0:	20 0d       	add	r18, r0
     5d2:	11 24       	eor	r1, r1
     5d4:	12 2f       	mov	r17, r18
     5d6:	19 c0       	rjmp	.+50     	; 0x60a <vfprintf+0xec>
     5d8:	8a e0       	ldi	r24, 0x0A	; 10
     5da:	58 9e       	mul	r5, r24
     5dc:	20 0d       	add	r18, r0
     5de:	11 24       	eor	r1, r1
     5e0:	52 2e       	mov	r5, r18
     5e2:	e9 2d       	mov	r30, r9
     5e4:	e0 62       	ori	r30, 0x20	; 32
     5e6:	9e 2e       	mov	r9, r30
     5e8:	10 c0       	rjmp	.+32     	; 0x60a <vfprintf+0xec>
     5ea:	8e 32       	cpi	r24, 0x2E	; 46
     5ec:	31 f4       	brne	.+12     	; 0x5fa <vfprintf+0xdc>
     5ee:	96 fc       	sbrc	r9, 6
     5f0:	e5 c2       	rjmp	.+1482   	; 0xbbc <__stack+0x2bd>
     5f2:	f9 2d       	mov	r31, r9
     5f4:	f0 64       	ori	r31, 0x40	; 64
     5f6:	9f 2e       	mov	r9, r31
     5f8:	08 c0       	rjmp	.+16     	; 0x60a <vfprintf+0xec>
     5fa:	8c 36       	cpi	r24, 0x6C	; 108
     5fc:	21 f4       	brne	.+8      	; 0x606 <vfprintf+0xe8>
     5fe:	29 2d       	mov	r18, r9
     600:	20 68       	ori	r18, 0x80	; 128
     602:	92 2e       	mov	r9, r18
     604:	02 c0       	rjmp	.+4      	; 0x60a <vfprintf+0xec>
     606:	88 36       	cpi	r24, 0x68	; 104
     608:	41 f4       	brne	.+16     	; 0x61a <vfprintf+0xfc>
     60a:	f1 01       	movw	r30, r2
     60c:	93 fd       	sbrc	r25, 3
     60e:	85 91       	lpm	r24, Z+
     610:	93 ff       	sbrs	r25, 3
     612:	81 91       	ld	r24, Z+
     614:	1f 01       	movw	r2, r30
     616:	81 11       	cpse	r24, r1
     618:	b3 cf       	rjmp	.-154    	; 0x580 <vfprintf+0x62>
     61a:	9b eb       	ldi	r25, 0xBB	; 187
     61c:	98 0f       	add	r25, r24
     61e:	93 30       	cpi	r25, 0x03	; 3
     620:	20 f4       	brcc	.+8      	; 0x62a <vfprintf+0x10c>
     622:	99 2d       	mov	r25, r9
     624:	90 61       	ori	r25, 0x10	; 16
     626:	80 5e       	subi	r24, 0xE0	; 224
     628:	07 c0       	rjmp	.+14     	; 0x638 <vfprintf+0x11a>
     62a:	9b e9       	ldi	r25, 0x9B	; 155
     62c:	98 0f       	add	r25, r24
     62e:	93 30       	cpi	r25, 0x03	; 3
     630:	08 f0       	brcs	.+2      	; 0x634 <vfprintf+0x116>
     632:	66 c1       	rjmp	.+716    	; 0x900 <__stack+0x1>
     634:	99 2d       	mov	r25, r9
     636:	9f 7e       	andi	r25, 0xEF	; 239
     638:	96 ff       	sbrs	r25, 6
     63a:	16 e0       	ldi	r17, 0x06	; 6
     63c:	9f 73       	andi	r25, 0x3F	; 63
     63e:	99 2e       	mov	r9, r25
     640:	85 36       	cpi	r24, 0x65	; 101
     642:	19 f4       	brne	.+6      	; 0x64a <vfprintf+0x12c>
     644:	90 64       	ori	r25, 0x40	; 64
     646:	99 2e       	mov	r9, r25
     648:	08 c0       	rjmp	.+16     	; 0x65a <vfprintf+0x13c>
     64a:	86 36       	cpi	r24, 0x66	; 102
     64c:	21 f4       	brne	.+8      	; 0x656 <vfprintf+0x138>
     64e:	39 2f       	mov	r19, r25
     650:	30 68       	ori	r19, 0x80	; 128
     652:	93 2e       	mov	r9, r19
     654:	02 c0       	rjmp	.+4      	; 0x65a <vfprintf+0x13c>
     656:	11 11       	cpse	r17, r1
     658:	11 50       	subi	r17, 0x01	; 1
     65a:	97 fe       	sbrs	r9, 7
     65c:	07 c0       	rjmp	.+14     	; 0x66c <vfprintf+0x14e>
     65e:	1c 33       	cpi	r17, 0x3C	; 60
     660:	50 f4       	brcc	.+20     	; 0x676 <vfprintf+0x158>
     662:	44 24       	eor	r4, r4
     664:	43 94       	inc	r4
     666:	41 0e       	add	r4, r17
     668:	27 e0       	ldi	r18, 0x07	; 7
     66a:	0b c0       	rjmp	.+22     	; 0x682 <vfprintf+0x164>
     66c:	18 30       	cpi	r17, 0x08	; 8
     66e:	38 f0       	brcs	.+14     	; 0x67e <vfprintf+0x160>
     670:	27 e0       	ldi	r18, 0x07	; 7
     672:	17 e0       	ldi	r17, 0x07	; 7
     674:	05 c0       	rjmp	.+10     	; 0x680 <vfprintf+0x162>
     676:	27 e0       	ldi	r18, 0x07	; 7
     678:	9c e3       	ldi	r25, 0x3C	; 60
     67a:	49 2e       	mov	r4, r25
     67c:	02 c0       	rjmp	.+4      	; 0x682 <vfprintf+0x164>
     67e:	21 2f       	mov	r18, r17
     680:	41 2c       	mov	r4, r1
     682:	56 01       	movw	r10, r12
     684:	84 e0       	ldi	r24, 0x04	; 4
     686:	a8 0e       	add	r10, r24
     688:	b1 1c       	adc	r11, r1
     68a:	f6 01       	movw	r30, r12
     68c:	60 81       	ld	r22, Z
     68e:	71 81       	ldd	r23, Z+1	; 0x01
     690:	82 81       	ldd	r24, Z+2	; 0x02
     692:	93 81       	ldd	r25, Z+3	; 0x03
     694:	04 2d       	mov	r16, r4
     696:	a3 01       	movw	r20, r6
     698:	0e 94 85 06 	call	0xd0a	; 0xd0a <__ftoa_engine>
     69c:	6c 01       	movw	r12, r24
     69e:	f9 81       	ldd	r31, Y+1	; 0x01
     6a0:	fc 87       	std	Y+12, r31	; 0x0c
     6a2:	f0 ff       	sbrs	r31, 0
     6a4:	02 c0       	rjmp	.+4      	; 0x6aa <vfprintf+0x18c>
     6a6:	f3 ff       	sbrs	r31, 3
     6a8:	06 c0       	rjmp	.+12     	; 0x6b6 <vfprintf+0x198>
     6aa:	91 fc       	sbrc	r9, 1
     6ac:	06 c0       	rjmp	.+12     	; 0x6ba <vfprintf+0x19c>
     6ae:	92 fe       	sbrs	r9, 2
     6b0:	06 c0       	rjmp	.+12     	; 0x6be <vfprintf+0x1a0>
     6b2:	00 e2       	ldi	r16, 0x20	; 32
     6b4:	05 c0       	rjmp	.+10     	; 0x6c0 <vfprintf+0x1a2>
     6b6:	0d e2       	ldi	r16, 0x2D	; 45
     6b8:	03 c0       	rjmp	.+6      	; 0x6c0 <vfprintf+0x1a2>
     6ba:	0b e2       	ldi	r16, 0x2B	; 43
     6bc:	01 c0       	rjmp	.+2      	; 0x6c0 <vfprintf+0x1a2>
     6be:	00 e0       	ldi	r16, 0x00	; 0
     6c0:	8c 85       	ldd	r24, Y+12	; 0x0c
     6c2:	8c 70       	andi	r24, 0x0C	; 12
     6c4:	19 f0       	breq	.+6      	; 0x6cc <vfprintf+0x1ae>
     6c6:	01 11       	cpse	r16, r1
     6c8:	5a c2       	rjmp	.+1204   	; 0xb7e <__stack+0x27f>
     6ca:	9b c2       	rjmp	.+1334   	; 0xc02 <__stack+0x303>
     6cc:	97 fe       	sbrs	r9, 7
     6ce:	10 c0       	rjmp	.+32     	; 0x6f0 <vfprintf+0x1d2>
     6d0:	4c 0c       	add	r4, r12
     6d2:	fc 85       	ldd	r31, Y+12	; 0x0c
     6d4:	f4 ff       	sbrs	r31, 4
     6d6:	04 c0       	rjmp	.+8      	; 0x6e0 <vfprintf+0x1c2>
     6d8:	8a 81       	ldd	r24, Y+2	; 0x02
     6da:	81 33       	cpi	r24, 0x31	; 49
     6dc:	09 f4       	brne	.+2      	; 0x6e0 <vfprintf+0x1c2>
     6de:	4a 94       	dec	r4
     6e0:	14 14       	cp	r1, r4
     6e2:	74 f5       	brge	.+92     	; 0x740 <vfprintf+0x222>
     6e4:	28 e0       	ldi	r18, 0x08	; 8
     6e6:	24 15       	cp	r18, r4
     6e8:	78 f5       	brcc	.+94     	; 0x748 <vfprintf+0x22a>
     6ea:	88 e0       	ldi	r24, 0x08	; 8
     6ec:	48 2e       	mov	r4, r24
     6ee:	2c c0       	rjmp	.+88     	; 0x748 <vfprintf+0x22a>
     6f0:	96 fc       	sbrc	r9, 6
     6f2:	2a c0       	rjmp	.+84     	; 0x748 <vfprintf+0x22a>
     6f4:	81 2f       	mov	r24, r17
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	8c 15       	cp	r24, r12
     6fa:	9d 05       	cpc	r25, r13
     6fc:	9c f0       	brlt	.+38     	; 0x724 <vfprintf+0x206>
     6fe:	3c ef       	ldi	r19, 0xFC	; 252
     700:	c3 16       	cp	r12, r19
     702:	3f ef       	ldi	r19, 0xFF	; 255
     704:	d3 06       	cpc	r13, r19
     706:	74 f0       	brlt	.+28     	; 0x724 <vfprintf+0x206>
     708:	89 2d       	mov	r24, r9
     70a:	80 68       	ori	r24, 0x80	; 128
     70c:	98 2e       	mov	r9, r24
     70e:	0a c0       	rjmp	.+20     	; 0x724 <vfprintf+0x206>
     710:	e2 e0       	ldi	r30, 0x02	; 2
     712:	f0 e0       	ldi	r31, 0x00	; 0
     714:	ec 0f       	add	r30, r28
     716:	fd 1f       	adc	r31, r29
     718:	e1 0f       	add	r30, r17
     71a:	f1 1d       	adc	r31, r1
     71c:	80 81       	ld	r24, Z
     71e:	80 33       	cpi	r24, 0x30	; 48
     720:	19 f4       	brne	.+6      	; 0x728 <vfprintf+0x20a>
     722:	11 50       	subi	r17, 0x01	; 1
     724:	11 11       	cpse	r17, r1
     726:	f4 cf       	rjmp	.-24     	; 0x710 <vfprintf+0x1f2>
     728:	97 fe       	sbrs	r9, 7
     72a:	0e c0       	rjmp	.+28     	; 0x748 <vfprintf+0x22a>
     72c:	44 24       	eor	r4, r4
     72e:	43 94       	inc	r4
     730:	41 0e       	add	r4, r17
     732:	81 2f       	mov	r24, r17
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	c8 16       	cp	r12, r24
     738:	d9 06       	cpc	r13, r25
     73a:	2c f4       	brge	.+10     	; 0x746 <vfprintf+0x228>
     73c:	1c 19       	sub	r17, r12
     73e:	04 c0       	rjmp	.+8      	; 0x748 <vfprintf+0x22a>
     740:	44 24       	eor	r4, r4
     742:	43 94       	inc	r4
     744:	01 c0       	rjmp	.+2      	; 0x748 <vfprintf+0x22a>
     746:	10 e0       	ldi	r17, 0x00	; 0
     748:	97 fe       	sbrs	r9, 7
     74a:	06 c0       	rjmp	.+12     	; 0x758 <vfprintf+0x23a>
     74c:	1c 14       	cp	r1, r12
     74e:	1d 04       	cpc	r1, r13
     750:	34 f4       	brge	.+12     	; 0x75e <vfprintf+0x240>
     752:	c6 01       	movw	r24, r12
     754:	01 96       	adiw	r24, 0x01	; 1
     756:	05 c0       	rjmp	.+10     	; 0x762 <vfprintf+0x244>
     758:	85 e0       	ldi	r24, 0x05	; 5
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	02 c0       	rjmp	.+4      	; 0x762 <vfprintf+0x244>
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	01 11       	cpse	r16, r1
     764:	01 96       	adiw	r24, 0x01	; 1
     766:	11 23       	and	r17, r17
     768:	31 f0       	breq	.+12     	; 0x776 <vfprintf+0x258>
     76a:	21 2f       	mov	r18, r17
     76c:	30 e0       	ldi	r19, 0x00	; 0
     76e:	2f 5f       	subi	r18, 0xFF	; 255
     770:	3f 4f       	sbci	r19, 0xFF	; 255
     772:	82 0f       	add	r24, r18
     774:	93 1f       	adc	r25, r19
     776:	25 2d       	mov	r18, r5
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	82 17       	cp	r24, r18
     77c:	93 07       	cpc	r25, r19
     77e:	14 f4       	brge	.+4      	; 0x784 <vfprintf+0x266>
     780:	58 1a       	sub	r5, r24
     782:	01 c0       	rjmp	.+2      	; 0x786 <vfprintf+0x268>
     784:	51 2c       	mov	r5, r1
     786:	89 2d       	mov	r24, r9
     788:	89 70       	andi	r24, 0x09	; 9
     78a:	49 f4       	brne	.+18     	; 0x79e <vfprintf+0x280>
     78c:	55 20       	and	r5, r5
     78e:	39 f0       	breq	.+14     	; 0x79e <vfprintf+0x280>
     790:	b7 01       	movw	r22, r14
     792:	80 e2       	ldi	r24, 0x20	; 32
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     79a:	5a 94       	dec	r5
     79c:	f7 cf       	rjmp	.-18     	; 0x78c <vfprintf+0x26e>
     79e:	00 23       	and	r16, r16
     7a0:	29 f0       	breq	.+10     	; 0x7ac <vfprintf+0x28e>
     7a2:	b7 01       	movw	r22, r14
     7a4:	80 2f       	mov	r24, r16
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     7ac:	93 fc       	sbrc	r9, 3
     7ae:	09 c0       	rjmp	.+18     	; 0x7c2 <vfprintf+0x2a4>
     7b0:	55 20       	and	r5, r5
     7b2:	39 f0       	breq	.+14     	; 0x7c2 <vfprintf+0x2a4>
     7b4:	b7 01       	movw	r22, r14
     7b6:	80 e3       	ldi	r24, 0x30	; 48
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     7be:	5a 94       	dec	r5
     7c0:	f7 cf       	rjmp	.-18     	; 0x7b0 <vfprintf+0x292>
     7c2:	97 fe       	sbrs	r9, 7
     7c4:	4c c0       	rjmp	.+152    	; 0x85e <vfprintf+0x340>
     7c6:	46 01       	movw	r8, r12
     7c8:	d7 fe       	sbrs	r13, 7
     7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <vfprintf+0x2b2>
     7cc:	81 2c       	mov	r8, r1
     7ce:	91 2c       	mov	r9, r1
     7d0:	c6 01       	movw	r24, r12
     7d2:	88 19       	sub	r24, r8
     7d4:	99 09       	sbc	r25, r9
     7d6:	f3 01       	movw	r30, r6
     7d8:	e8 0f       	add	r30, r24
     7da:	f9 1f       	adc	r31, r25
     7dc:	fe 87       	std	Y+14, r31	; 0x0e
     7de:	ed 87       	std	Y+13, r30	; 0x0d
     7e0:	96 01       	movw	r18, r12
     7e2:	24 19       	sub	r18, r4
     7e4:	31 09       	sbc	r19, r1
     7e6:	38 8b       	std	Y+16, r19	; 0x10
     7e8:	2f 87       	std	Y+15, r18	; 0x0f
     7ea:	01 2f       	mov	r16, r17
     7ec:	10 e0       	ldi	r17, 0x00	; 0
     7ee:	11 95       	neg	r17
     7f0:	01 95       	neg	r16
     7f2:	11 09       	sbc	r17, r1
     7f4:	3f ef       	ldi	r19, 0xFF	; 255
     7f6:	83 16       	cp	r8, r19
     7f8:	93 06       	cpc	r9, r19
     7fa:	29 f4       	brne	.+10     	; 0x806 <vfprintf+0x2e8>
     7fc:	b7 01       	movw	r22, r14
     7fe:	8e e2       	ldi	r24, 0x2E	; 46
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     806:	c8 14       	cp	r12, r8
     808:	d9 04       	cpc	r13, r9
     80a:	4c f0       	brlt	.+18     	; 0x81e <vfprintf+0x300>
     80c:	8f 85       	ldd	r24, Y+15	; 0x0f
     80e:	98 89       	ldd	r25, Y+16	; 0x10
     810:	88 15       	cp	r24, r8
     812:	99 05       	cpc	r25, r9
     814:	24 f4       	brge	.+8      	; 0x81e <vfprintf+0x300>
     816:	ed 85       	ldd	r30, Y+13	; 0x0d
     818:	fe 85       	ldd	r31, Y+14	; 0x0e
     81a:	81 81       	ldd	r24, Z+1	; 0x01
     81c:	01 c0       	rjmp	.+2      	; 0x820 <vfprintf+0x302>
     81e:	80 e3       	ldi	r24, 0x30	; 48
     820:	f1 e0       	ldi	r31, 0x01	; 1
     822:	8f 1a       	sub	r8, r31
     824:	91 08       	sbc	r9, r1
     826:	2d 85       	ldd	r18, Y+13	; 0x0d
     828:	3e 85       	ldd	r19, Y+14	; 0x0e
     82a:	2f 5f       	subi	r18, 0xFF	; 255
     82c:	3f 4f       	sbci	r19, 0xFF	; 255
     82e:	3e 87       	std	Y+14, r19	; 0x0e
     830:	2d 87       	std	Y+13, r18	; 0x0d
     832:	80 16       	cp	r8, r16
     834:	91 06       	cpc	r9, r17
     836:	2c f0       	brlt	.+10     	; 0x842 <vfprintf+0x324>
     838:	b7 01       	movw	r22, r14
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     840:	d9 cf       	rjmp	.-78     	; 0x7f4 <vfprintf+0x2d6>
     842:	c8 14       	cp	r12, r8
     844:	d9 04       	cpc	r13, r9
     846:	41 f4       	brne	.+16     	; 0x858 <vfprintf+0x33a>
     848:	9a 81       	ldd	r25, Y+2	; 0x02
     84a:	96 33       	cpi	r25, 0x36	; 54
     84c:	20 f4       	brcc	.+8      	; 0x856 <vfprintf+0x338>
     84e:	95 33       	cpi	r25, 0x35	; 53
     850:	19 f4       	brne	.+6      	; 0x858 <vfprintf+0x33a>
     852:	3c 85       	ldd	r19, Y+12	; 0x0c
     854:	34 ff       	sbrs	r19, 4
     856:	81 e3       	ldi	r24, 0x31	; 49
     858:	b7 01       	movw	r22, r14
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	4e c0       	rjmp	.+156    	; 0x8fa <vfprintf+0x3dc>
     85e:	8a 81       	ldd	r24, Y+2	; 0x02
     860:	81 33       	cpi	r24, 0x31	; 49
     862:	19 f0       	breq	.+6      	; 0x86a <vfprintf+0x34c>
     864:	9c 85       	ldd	r25, Y+12	; 0x0c
     866:	9f 7e       	andi	r25, 0xEF	; 239
     868:	9c 87       	std	Y+12, r25	; 0x0c
     86a:	b7 01       	movw	r22, r14
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     872:	11 11       	cpse	r17, r1
     874:	05 c0       	rjmp	.+10     	; 0x880 <vfprintf+0x362>
     876:	94 fc       	sbrc	r9, 4
     878:	18 c0       	rjmp	.+48     	; 0x8aa <vfprintf+0x38c>
     87a:	85 e6       	ldi	r24, 0x65	; 101
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	17 c0       	rjmp	.+46     	; 0x8ae <vfprintf+0x390>
     880:	b7 01       	movw	r22, r14
     882:	8e e2       	ldi	r24, 0x2E	; 46
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     88a:	1e 5f       	subi	r17, 0xFE	; 254
     88c:	82 e0       	ldi	r24, 0x02	; 2
     88e:	01 e0       	ldi	r16, 0x01	; 1
     890:	08 0f       	add	r16, r24
     892:	f3 01       	movw	r30, r6
     894:	e8 0f       	add	r30, r24
     896:	f1 1d       	adc	r31, r1
     898:	80 81       	ld	r24, Z
     89a:	b7 01       	movw	r22, r14
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     8a2:	80 2f       	mov	r24, r16
     8a4:	01 13       	cpse	r16, r17
     8a6:	f3 cf       	rjmp	.-26     	; 0x88e <vfprintf+0x370>
     8a8:	e6 cf       	rjmp	.-52     	; 0x876 <vfprintf+0x358>
     8aa:	85 e4       	ldi	r24, 0x45	; 69
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	b7 01       	movw	r22, r14
     8b0:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     8b4:	d7 fc       	sbrc	r13, 7
     8b6:	06 c0       	rjmp	.+12     	; 0x8c4 <vfprintf+0x3a6>
     8b8:	c1 14       	cp	r12, r1
     8ba:	d1 04       	cpc	r13, r1
     8bc:	41 f4       	brne	.+16     	; 0x8ce <vfprintf+0x3b0>
     8be:	ec 85       	ldd	r30, Y+12	; 0x0c
     8c0:	e4 ff       	sbrs	r30, 4
     8c2:	05 c0       	rjmp	.+10     	; 0x8ce <vfprintf+0x3b0>
     8c4:	d1 94       	neg	r13
     8c6:	c1 94       	neg	r12
     8c8:	d1 08       	sbc	r13, r1
     8ca:	8d e2       	ldi	r24, 0x2D	; 45
     8cc:	01 c0       	rjmp	.+2      	; 0x8d0 <vfprintf+0x3b2>
     8ce:	8b e2       	ldi	r24, 0x2B	; 43
     8d0:	b7 01       	movw	r22, r14
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     8d8:	80 e3       	ldi	r24, 0x30	; 48
     8da:	2a e0       	ldi	r18, 0x0A	; 10
     8dc:	c2 16       	cp	r12, r18
     8de:	d1 04       	cpc	r13, r1
     8e0:	2c f0       	brlt	.+10     	; 0x8ec <vfprintf+0x3ce>
     8e2:	8f 5f       	subi	r24, 0xFF	; 255
     8e4:	fa e0       	ldi	r31, 0x0A	; 10
     8e6:	cf 1a       	sub	r12, r31
     8e8:	d1 08       	sbc	r13, r1
     8ea:	f7 cf       	rjmp	.-18     	; 0x8da <vfprintf+0x3bc>
     8ec:	b7 01       	movw	r22, r14
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     8f4:	b7 01       	movw	r22, r14
     8f6:	c6 01       	movw	r24, r12
     8f8:	c0 96       	adiw	r24, 0x30	; 48
     8fa:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     8fe:	54 c1       	rjmp	.+680    	; 0xba8 <__stack+0x2a9>
     900:	83 36       	cpi	r24, 0x63	; 99
     902:	31 f0       	breq	.+12     	; 0x910 <__stack+0x11>
     904:	83 37       	cpi	r24, 0x73	; 115
     906:	79 f0       	breq	.+30     	; 0x926 <__stack+0x27>
     908:	83 35       	cpi	r24, 0x53	; 83
     90a:	09 f0       	breq	.+2      	; 0x90e <__stack+0xf>
     90c:	56 c0       	rjmp	.+172    	; 0x9ba <__stack+0xbb>
     90e:	20 c0       	rjmp	.+64     	; 0x950 <__stack+0x51>
     910:	56 01       	movw	r10, r12
     912:	32 e0       	ldi	r19, 0x02	; 2
     914:	a3 0e       	add	r10, r19
     916:	b1 1c       	adc	r11, r1
     918:	f6 01       	movw	r30, r12
     91a:	80 81       	ld	r24, Z
     91c:	89 83       	std	Y+1, r24	; 0x01
     91e:	01 e0       	ldi	r16, 0x01	; 1
     920:	10 e0       	ldi	r17, 0x00	; 0
     922:	63 01       	movw	r12, r6
     924:	12 c0       	rjmp	.+36     	; 0x94a <__stack+0x4b>
     926:	56 01       	movw	r10, r12
     928:	f2 e0       	ldi	r31, 0x02	; 2
     92a:	af 0e       	add	r10, r31
     92c:	b1 1c       	adc	r11, r1
     92e:	f6 01       	movw	r30, r12
     930:	c0 80       	ld	r12, Z
     932:	d1 80       	ldd	r13, Z+1	; 0x01
     934:	96 fe       	sbrs	r9, 6
     936:	03 c0       	rjmp	.+6      	; 0x93e <__stack+0x3f>
     938:	61 2f       	mov	r22, r17
     93a:	70 e0       	ldi	r23, 0x00	; 0
     93c:	02 c0       	rjmp	.+4      	; 0x942 <__stack+0x43>
     93e:	6f ef       	ldi	r22, 0xFF	; 255
     940:	7f ef       	ldi	r23, 0xFF	; 255
     942:	c6 01       	movw	r24, r12
     944:	0e 94 68 07 	call	0xed0	; 0xed0 <strnlen>
     948:	8c 01       	movw	r16, r24
     94a:	f9 2d       	mov	r31, r9
     94c:	ff 77       	andi	r31, 0x7F	; 127
     94e:	14 c0       	rjmp	.+40     	; 0x978 <__stack+0x79>
     950:	56 01       	movw	r10, r12
     952:	22 e0       	ldi	r18, 0x02	; 2
     954:	a2 0e       	add	r10, r18
     956:	b1 1c       	adc	r11, r1
     958:	f6 01       	movw	r30, r12
     95a:	c0 80       	ld	r12, Z
     95c:	d1 80       	ldd	r13, Z+1	; 0x01
     95e:	96 fe       	sbrs	r9, 6
     960:	03 c0       	rjmp	.+6      	; 0x968 <__stack+0x69>
     962:	61 2f       	mov	r22, r17
     964:	70 e0       	ldi	r23, 0x00	; 0
     966:	02 c0       	rjmp	.+4      	; 0x96c <__stack+0x6d>
     968:	6f ef       	ldi	r22, 0xFF	; 255
     96a:	7f ef       	ldi	r23, 0xFF	; 255
     96c:	c6 01       	movw	r24, r12
     96e:	0e 94 5d 07 	call	0xeba	; 0xeba <strnlen_P>
     972:	8c 01       	movw	r16, r24
     974:	f9 2d       	mov	r31, r9
     976:	f0 68       	ori	r31, 0x80	; 128
     978:	9f 2e       	mov	r9, r31
     97a:	f3 fd       	sbrc	r31, 3
     97c:	1a c0       	rjmp	.+52     	; 0x9b2 <__stack+0xb3>
     97e:	85 2d       	mov	r24, r5
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	08 17       	cp	r16, r24
     984:	19 07       	cpc	r17, r25
     986:	a8 f4       	brcc	.+42     	; 0x9b2 <__stack+0xb3>
     988:	b7 01       	movw	r22, r14
     98a:	80 e2       	ldi	r24, 0x20	; 32
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     992:	5a 94       	dec	r5
     994:	f4 cf       	rjmp	.-24     	; 0x97e <__stack+0x7f>
     996:	f6 01       	movw	r30, r12
     998:	97 fc       	sbrc	r9, 7
     99a:	85 91       	lpm	r24, Z+
     99c:	97 fe       	sbrs	r9, 7
     99e:	81 91       	ld	r24, Z+
     9a0:	6f 01       	movw	r12, r30
     9a2:	b7 01       	movw	r22, r14
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     9aa:	51 10       	cpse	r5, r1
     9ac:	5a 94       	dec	r5
     9ae:	01 50       	subi	r16, 0x01	; 1
     9b0:	11 09       	sbc	r17, r1
     9b2:	01 15       	cp	r16, r1
     9b4:	11 05       	cpc	r17, r1
     9b6:	79 f7       	brne	.-34     	; 0x996 <__stack+0x97>
     9b8:	f7 c0       	rjmp	.+494    	; 0xba8 <__stack+0x2a9>
     9ba:	84 36       	cpi	r24, 0x64	; 100
     9bc:	11 f0       	breq	.+4      	; 0x9c2 <__stack+0xc3>
     9be:	89 36       	cpi	r24, 0x69	; 105
     9c0:	61 f5       	brne	.+88     	; 0xa1a <__stack+0x11b>
     9c2:	56 01       	movw	r10, r12
     9c4:	97 fe       	sbrs	r9, 7
     9c6:	09 c0       	rjmp	.+18     	; 0x9da <__stack+0xdb>
     9c8:	24 e0       	ldi	r18, 0x04	; 4
     9ca:	a2 0e       	add	r10, r18
     9cc:	b1 1c       	adc	r11, r1
     9ce:	f6 01       	movw	r30, r12
     9d0:	60 81       	ld	r22, Z
     9d2:	71 81       	ldd	r23, Z+1	; 0x01
     9d4:	82 81       	ldd	r24, Z+2	; 0x02
     9d6:	93 81       	ldd	r25, Z+3	; 0x03
     9d8:	0a c0       	rjmp	.+20     	; 0x9ee <__stack+0xef>
     9da:	f2 e0       	ldi	r31, 0x02	; 2
     9dc:	af 0e       	add	r10, r31
     9de:	b1 1c       	adc	r11, r1
     9e0:	f6 01       	movw	r30, r12
     9e2:	60 81       	ld	r22, Z
     9e4:	71 81       	ldd	r23, Z+1	; 0x01
     9e6:	07 2e       	mov	r0, r23
     9e8:	00 0c       	add	r0, r0
     9ea:	88 0b       	sbc	r24, r24
     9ec:	99 0b       	sbc	r25, r25
     9ee:	f9 2d       	mov	r31, r9
     9f0:	ff 76       	andi	r31, 0x6F	; 111
     9f2:	9f 2e       	mov	r9, r31
     9f4:	97 ff       	sbrs	r25, 7
     9f6:	09 c0       	rjmp	.+18     	; 0xa0a <__stack+0x10b>
     9f8:	90 95       	com	r25
     9fa:	80 95       	com	r24
     9fc:	70 95       	com	r23
     9fe:	61 95       	neg	r22
     a00:	7f 4f       	sbci	r23, 0xFF	; 255
     a02:	8f 4f       	sbci	r24, 0xFF	; 255
     a04:	9f 4f       	sbci	r25, 0xFF	; 255
     a06:	f0 68       	ori	r31, 0x80	; 128
     a08:	9f 2e       	mov	r9, r31
     a0a:	2a e0       	ldi	r18, 0x0A	; 10
     a0c:	30 e0       	ldi	r19, 0x00	; 0
     a0e:	a3 01       	movw	r20, r6
     a10:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__ultoa_invert>
     a14:	c8 2e       	mov	r12, r24
     a16:	c6 18       	sub	r12, r6
     a18:	3f c0       	rjmp	.+126    	; 0xa98 <__stack+0x199>
     a1a:	09 2d       	mov	r16, r9
     a1c:	85 37       	cpi	r24, 0x75	; 117
     a1e:	21 f4       	brne	.+8      	; 0xa28 <__stack+0x129>
     a20:	0f 7e       	andi	r16, 0xEF	; 239
     a22:	2a e0       	ldi	r18, 0x0A	; 10
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	1d c0       	rjmp	.+58     	; 0xa62 <__stack+0x163>
     a28:	09 7f       	andi	r16, 0xF9	; 249
     a2a:	8f 36       	cpi	r24, 0x6F	; 111
     a2c:	91 f0       	breq	.+36     	; 0xa52 <__stack+0x153>
     a2e:	18 f4       	brcc	.+6      	; 0xa36 <__stack+0x137>
     a30:	88 35       	cpi	r24, 0x58	; 88
     a32:	59 f0       	breq	.+22     	; 0xa4a <__stack+0x14b>
     a34:	c3 c0       	rjmp	.+390    	; 0xbbc <__stack+0x2bd>
     a36:	80 37       	cpi	r24, 0x70	; 112
     a38:	19 f0       	breq	.+6      	; 0xa40 <__stack+0x141>
     a3a:	88 37       	cpi	r24, 0x78	; 120
     a3c:	11 f0       	breq	.+4      	; 0xa42 <__stack+0x143>
     a3e:	be c0       	rjmp	.+380    	; 0xbbc <__stack+0x2bd>
     a40:	00 61       	ori	r16, 0x10	; 16
     a42:	04 ff       	sbrs	r16, 4
     a44:	09 c0       	rjmp	.+18     	; 0xa58 <__stack+0x159>
     a46:	04 60       	ori	r16, 0x04	; 4
     a48:	07 c0       	rjmp	.+14     	; 0xa58 <__stack+0x159>
     a4a:	94 fe       	sbrs	r9, 4
     a4c:	08 c0       	rjmp	.+16     	; 0xa5e <__stack+0x15f>
     a4e:	06 60       	ori	r16, 0x06	; 6
     a50:	06 c0       	rjmp	.+12     	; 0xa5e <__stack+0x15f>
     a52:	28 e0       	ldi	r18, 0x08	; 8
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	05 c0       	rjmp	.+10     	; 0xa62 <__stack+0x163>
     a58:	20 e1       	ldi	r18, 0x10	; 16
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	02 c0       	rjmp	.+4      	; 0xa62 <__stack+0x163>
     a5e:	20 e1       	ldi	r18, 0x10	; 16
     a60:	32 e0       	ldi	r19, 0x02	; 2
     a62:	56 01       	movw	r10, r12
     a64:	07 ff       	sbrs	r16, 7
     a66:	09 c0       	rjmp	.+18     	; 0xa7a <__stack+0x17b>
     a68:	84 e0       	ldi	r24, 0x04	; 4
     a6a:	a8 0e       	add	r10, r24
     a6c:	b1 1c       	adc	r11, r1
     a6e:	f6 01       	movw	r30, r12
     a70:	60 81       	ld	r22, Z
     a72:	71 81       	ldd	r23, Z+1	; 0x01
     a74:	82 81       	ldd	r24, Z+2	; 0x02
     a76:	93 81       	ldd	r25, Z+3	; 0x03
     a78:	08 c0       	rjmp	.+16     	; 0xa8a <__stack+0x18b>
     a7a:	f2 e0       	ldi	r31, 0x02	; 2
     a7c:	af 0e       	add	r10, r31
     a7e:	b1 1c       	adc	r11, r1
     a80:	f6 01       	movw	r30, r12
     a82:	60 81       	ld	r22, Z
     a84:	71 81       	ldd	r23, Z+1	; 0x01
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a3 01       	movw	r20, r6
     a8c:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__ultoa_invert>
     a90:	c8 2e       	mov	r12, r24
     a92:	c6 18       	sub	r12, r6
     a94:	0f 77       	andi	r16, 0x7F	; 127
     a96:	90 2e       	mov	r9, r16
     a98:	96 fe       	sbrs	r9, 6
     a9a:	0b c0       	rjmp	.+22     	; 0xab2 <__stack+0x1b3>
     a9c:	09 2d       	mov	r16, r9
     a9e:	0e 7f       	andi	r16, 0xFE	; 254
     aa0:	c1 16       	cp	r12, r17
     aa2:	50 f4       	brcc	.+20     	; 0xab8 <__stack+0x1b9>
     aa4:	94 fe       	sbrs	r9, 4
     aa6:	0a c0       	rjmp	.+20     	; 0xabc <__stack+0x1bd>
     aa8:	92 fc       	sbrc	r9, 2
     aaa:	08 c0       	rjmp	.+16     	; 0xabc <__stack+0x1bd>
     aac:	09 2d       	mov	r16, r9
     aae:	0e 7e       	andi	r16, 0xEE	; 238
     ab0:	05 c0       	rjmp	.+10     	; 0xabc <__stack+0x1bd>
     ab2:	dc 2c       	mov	r13, r12
     ab4:	09 2d       	mov	r16, r9
     ab6:	03 c0       	rjmp	.+6      	; 0xabe <__stack+0x1bf>
     ab8:	dc 2c       	mov	r13, r12
     aba:	01 c0       	rjmp	.+2      	; 0xabe <__stack+0x1bf>
     abc:	d1 2e       	mov	r13, r17
     abe:	04 ff       	sbrs	r16, 4
     ac0:	0d c0       	rjmp	.+26     	; 0xadc <__stack+0x1dd>
     ac2:	fe 01       	movw	r30, r28
     ac4:	ec 0d       	add	r30, r12
     ac6:	f1 1d       	adc	r31, r1
     ac8:	80 81       	ld	r24, Z
     aca:	80 33       	cpi	r24, 0x30	; 48
     acc:	11 f4       	brne	.+4      	; 0xad2 <__stack+0x1d3>
     ace:	09 7e       	andi	r16, 0xE9	; 233
     ad0:	09 c0       	rjmp	.+18     	; 0xae4 <__stack+0x1e5>
     ad2:	02 ff       	sbrs	r16, 2
     ad4:	06 c0       	rjmp	.+12     	; 0xae2 <__stack+0x1e3>
     ad6:	d3 94       	inc	r13
     ad8:	d3 94       	inc	r13
     ada:	04 c0       	rjmp	.+8      	; 0xae4 <__stack+0x1e5>
     adc:	80 2f       	mov	r24, r16
     ade:	86 78       	andi	r24, 0x86	; 134
     ae0:	09 f0       	breq	.+2      	; 0xae4 <__stack+0x1e5>
     ae2:	d3 94       	inc	r13
     ae4:	03 fd       	sbrc	r16, 3
     ae6:	11 c0       	rjmp	.+34     	; 0xb0a <__stack+0x20b>
     ae8:	00 ff       	sbrs	r16, 0
     aea:	06 c0       	rjmp	.+12     	; 0xaf8 <__stack+0x1f9>
     aec:	1c 2d       	mov	r17, r12
     aee:	d5 14       	cp	r13, r5
     af0:	80 f4       	brcc	.+32     	; 0xb12 <__stack+0x213>
     af2:	15 0d       	add	r17, r5
     af4:	1d 19       	sub	r17, r13
     af6:	0d c0       	rjmp	.+26     	; 0xb12 <__stack+0x213>
     af8:	d5 14       	cp	r13, r5
     afa:	58 f4       	brcc	.+22     	; 0xb12 <__stack+0x213>
     afc:	b7 01       	movw	r22, r14
     afe:	80 e2       	ldi	r24, 0x20	; 32
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     b06:	d3 94       	inc	r13
     b08:	f7 cf       	rjmp	.-18     	; 0xaf8 <__stack+0x1f9>
     b0a:	d5 14       	cp	r13, r5
     b0c:	10 f4       	brcc	.+4      	; 0xb12 <__stack+0x213>
     b0e:	5d 18       	sub	r5, r13
     b10:	01 c0       	rjmp	.+2      	; 0xb14 <__stack+0x215>
     b12:	51 2c       	mov	r5, r1
     b14:	04 ff       	sbrs	r16, 4
     b16:	10 c0       	rjmp	.+32     	; 0xb38 <__stack+0x239>
     b18:	b7 01       	movw	r22, r14
     b1a:	80 e3       	ldi	r24, 0x30	; 48
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     b22:	02 ff       	sbrs	r16, 2
     b24:	17 c0       	rjmp	.+46     	; 0xb54 <__stack+0x255>
     b26:	01 fd       	sbrc	r16, 1
     b28:	03 c0       	rjmp	.+6      	; 0xb30 <__stack+0x231>
     b2a:	88 e7       	ldi	r24, 0x78	; 120
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	02 c0       	rjmp	.+4      	; 0xb34 <__stack+0x235>
     b30:	88 e5       	ldi	r24, 0x58	; 88
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	b7 01       	movw	r22, r14
     b36:	0c c0       	rjmp	.+24     	; 0xb50 <__stack+0x251>
     b38:	80 2f       	mov	r24, r16
     b3a:	86 78       	andi	r24, 0x86	; 134
     b3c:	59 f0       	breq	.+22     	; 0xb54 <__stack+0x255>
     b3e:	01 ff       	sbrs	r16, 1
     b40:	02 c0       	rjmp	.+4      	; 0xb46 <__stack+0x247>
     b42:	8b e2       	ldi	r24, 0x2B	; 43
     b44:	01 c0       	rjmp	.+2      	; 0xb48 <__stack+0x249>
     b46:	80 e2       	ldi	r24, 0x20	; 32
     b48:	07 fd       	sbrc	r16, 7
     b4a:	8d e2       	ldi	r24, 0x2D	; 45
     b4c:	b7 01       	movw	r22, r14
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     b54:	c1 16       	cp	r12, r17
     b56:	38 f4       	brcc	.+14     	; 0xb66 <__stack+0x267>
     b58:	b7 01       	movw	r22, r14
     b5a:	80 e3       	ldi	r24, 0x30	; 48
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     b62:	11 50       	subi	r17, 0x01	; 1
     b64:	f7 cf       	rjmp	.-18     	; 0xb54 <__stack+0x255>
     b66:	ca 94       	dec	r12
     b68:	f3 01       	movw	r30, r6
     b6a:	ec 0d       	add	r30, r12
     b6c:	f1 1d       	adc	r31, r1
     b6e:	80 81       	ld	r24, Z
     b70:	b7 01       	movw	r22, r14
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     b78:	c1 10       	cpse	r12, r1
     b7a:	f5 cf       	rjmp	.-22     	; 0xb66 <__stack+0x267>
     b7c:	15 c0       	rjmp	.+42     	; 0xba8 <__stack+0x2a9>
     b7e:	f4 e0       	ldi	r31, 0x04	; 4
     b80:	f5 15       	cp	r31, r5
     b82:	60 f5       	brcc	.+88     	; 0xbdc <__stack+0x2dd>
     b84:	84 e0       	ldi	r24, 0x04	; 4
     b86:	58 1a       	sub	r5, r24
     b88:	93 fe       	sbrs	r9, 3
     b8a:	1f c0       	rjmp	.+62     	; 0xbca <__stack+0x2cb>
     b8c:	01 11       	cpse	r16, r1
     b8e:	27 c0       	rjmp	.+78     	; 0xbde <__stack+0x2df>
     b90:	2c 85       	ldd	r18, Y+12	; 0x0c
     b92:	23 ff       	sbrs	r18, 3
     b94:	2a c0       	rjmp	.+84     	; 0xbea <__stack+0x2eb>
     b96:	08 e6       	ldi	r16, 0x68	; 104
     b98:	10 e0       	ldi	r17, 0x00	; 0
     b9a:	39 2d       	mov	r19, r9
     b9c:	30 71       	andi	r19, 0x10	; 16
     b9e:	93 2e       	mov	r9, r19
     ba0:	f8 01       	movw	r30, r16
     ba2:	84 91       	lpm	r24, Z
     ba4:	81 11       	cpse	r24, r1
     ba6:	24 c0       	rjmp	.+72     	; 0xbf0 <__stack+0x2f1>
     ba8:	55 20       	and	r5, r5
     baa:	09 f4       	brne	.+2      	; 0xbae <__stack+0x2af>
     bac:	e4 cc       	rjmp	.-1592   	; 0x576 <vfprintf+0x58>
     bae:	b7 01       	movw	r22, r14
     bb0:	80 e2       	ldi	r24, 0x20	; 32
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     bb8:	5a 94       	dec	r5
     bba:	f6 cf       	rjmp	.-20     	; 0xba8 <__stack+0x2a9>
     bbc:	f7 01       	movw	r30, r14
     bbe:	86 81       	ldd	r24, Z+6	; 0x06
     bc0:	97 81       	ldd	r25, Z+7	; 0x07
     bc2:	26 c0       	rjmp	.+76     	; 0xc10 <__stack+0x311>
     bc4:	8f ef       	ldi	r24, 0xFF	; 255
     bc6:	9f ef       	ldi	r25, 0xFF	; 255
     bc8:	23 c0       	rjmp	.+70     	; 0xc10 <__stack+0x311>
     bca:	b7 01       	movw	r22, r14
     bcc:	80 e2       	ldi	r24, 0x20	; 32
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     bd4:	5a 94       	dec	r5
     bd6:	51 10       	cpse	r5, r1
     bd8:	f8 cf       	rjmp	.-16     	; 0xbca <__stack+0x2cb>
     bda:	d8 cf       	rjmp	.-80     	; 0xb8c <__stack+0x28d>
     bdc:	51 2c       	mov	r5, r1
     bde:	b7 01       	movw	r22, r14
     be0:	80 2f       	mov	r24, r16
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     be8:	d3 cf       	rjmp	.-90     	; 0xb90 <__stack+0x291>
     bea:	0c e6       	ldi	r16, 0x6C	; 108
     bec:	10 e0       	ldi	r17, 0x00	; 0
     bee:	d5 cf       	rjmp	.-86     	; 0xb9a <__stack+0x29b>
     bf0:	91 10       	cpse	r9, r1
     bf2:	80 52       	subi	r24, 0x20	; 32
     bf4:	b7 01       	movw	r22, r14
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	0e 94 73 07 	call	0xee6	; 0xee6 <fputc>
     bfc:	0f 5f       	subi	r16, 0xFF	; 255
     bfe:	1f 4f       	sbci	r17, 0xFF	; 255
     c00:	cf cf       	rjmp	.-98     	; 0xba0 <__stack+0x2a1>
     c02:	23 e0       	ldi	r18, 0x03	; 3
     c04:	25 15       	cp	r18, r5
     c06:	10 f4       	brcc	.+4      	; 0xc0c <__stack+0x30d>
     c08:	83 e0       	ldi	r24, 0x03	; 3
     c0a:	bd cf       	rjmp	.-134    	; 0xb86 <__stack+0x287>
     c0c:	51 2c       	mov	r5, r1
     c0e:	c0 cf       	rjmp	.-128    	; 0xb90 <__stack+0x291>
     c10:	60 96       	adiw	r28, 0x10	; 16
     c12:	e2 e1       	ldi	r30, 0x12	; 18
     c14:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__epilogue_restores__>

00000c18 <__udivmodsi4>:
     c18:	a1 e2       	ldi	r26, 0x21	; 33
     c1a:	1a 2e       	mov	r1, r26
     c1c:	aa 1b       	sub	r26, r26
     c1e:	bb 1b       	sub	r27, r27
     c20:	fd 01       	movw	r30, r26
     c22:	0d c0       	rjmp	.+26     	; 0xc3e <__udivmodsi4_ep>

00000c24 <__udivmodsi4_loop>:
     c24:	aa 1f       	adc	r26, r26
     c26:	bb 1f       	adc	r27, r27
     c28:	ee 1f       	adc	r30, r30
     c2a:	ff 1f       	adc	r31, r31
     c2c:	a2 17       	cp	r26, r18
     c2e:	b3 07       	cpc	r27, r19
     c30:	e4 07       	cpc	r30, r20
     c32:	f5 07       	cpc	r31, r21
     c34:	20 f0       	brcs	.+8      	; 0xc3e <__udivmodsi4_ep>
     c36:	a2 1b       	sub	r26, r18
     c38:	b3 0b       	sbc	r27, r19
     c3a:	e4 0b       	sbc	r30, r20
     c3c:	f5 0b       	sbc	r31, r21

00000c3e <__udivmodsi4_ep>:
     c3e:	66 1f       	adc	r22, r22
     c40:	77 1f       	adc	r23, r23
     c42:	88 1f       	adc	r24, r24
     c44:	99 1f       	adc	r25, r25
     c46:	1a 94       	dec	r1
     c48:	69 f7       	brne	.-38     	; 0xc24 <__udivmodsi4_loop>
     c4a:	60 95       	com	r22
     c4c:	70 95       	com	r23
     c4e:	80 95       	com	r24
     c50:	90 95       	com	r25
     c52:	9b 01       	movw	r18, r22
     c54:	ac 01       	movw	r20, r24
     c56:	bd 01       	movw	r22, r26
     c58:	cf 01       	movw	r24, r30
     c5a:	08 95       	ret

00000c5c <__prologue_saves__>:
     c5c:	2f 92       	push	r2
     c5e:	3f 92       	push	r3
     c60:	4f 92       	push	r4
     c62:	5f 92       	push	r5
     c64:	6f 92       	push	r6
     c66:	7f 92       	push	r7
     c68:	8f 92       	push	r8
     c6a:	9f 92       	push	r9
     c6c:	af 92       	push	r10
     c6e:	bf 92       	push	r11
     c70:	cf 92       	push	r12
     c72:	df 92       	push	r13
     c74:	ef 92       	push	r14
     c76:	ff 92       	push	r15
     c78:	0f 93       	push	r16
     c7a:	1f 93       	push	r17
     c7c:	cf 93       	push	r28
     c7e:	df 93       	push	r29
     c80:	cd b7       	in	r28, 0x3d	; 61
     c82:	de b7       	in	r29, 0x3e	; 62
     c84:	ca 1b       	sub	r28, r26
     c86:	db 0b       	sbc	r29, r27
     c88:	0f b6       	in	r0, 0x3f	; 63
     c8a:	f8 94       	cli
     c8c:	de bf       	out	0x3e, r29	; 62
     c8e:	0f be       	out	0x3f, r0	; 63
     c90:	cd bf       	out	0x3d, r28	; 61
     c92:	09 94       	ijmp

00000c94 <__epilogue_restores__>:
     c94:	2a 88       	ldd	r2, Y+18	; 0x12
     c96:	39 88       	ldd	r3, Y+17	; 0x11
     c98:	48 88       	ldd	r4, Y+16	; 0x10
     c9a:	5f 84       	ldd	r5, Y+15	; 0x0f
     c9c:	6e 84       	ldd	r6, Y+14	; 0x0e
     c9e:	7d 84       	ldd	r7, Y+13	; 0x0d
     ca0:	8c 84       	ldd	r8, Y+12	; 0x0c
     ca2:	9b 84       	ldd	r9, Y+11	; 0x0b
     ca4:	aa 84       	ldd	r10, Y+10	; 0x0a
     ca6:	b9 84       	ldd	r11, Y+9	; 0x09
     ca8:	c8 84       	ldd	r12, Y+8	; 0x08
     caa:	df 80       	ldd	r13, Y+7	; 0x07
     cac:	ee 80       	ldd	r14, Y+6	; 0x06
     cae:	fd 80       	ldd	r15, Y+5	; 0x05
     cb0:	0c 81       	ldd	r16, Y+4	; 0x04
     cb2:	1b 81       	ldd	r17, Y+3	; 0x03
     cb4:	aa 81       	ldd	r26, Y+2	; 0x02
     cb6:	b9 81       	ldd	r27, Y+1	; 0x01
     cb8:	ce 0f       	add	r28, r30
     cba:	d1 1d       	adc	r29, r1
     cbc:	0f b6       	in	r0, 0x3f	; 63
     cbe:	f8 94       	cli
     cc0:	de bf       	out	0x3e, r29	; 62
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	cd bf       	out	0x3d, r28	; 61
     cc6:	ed 01       	movw	r28, r26
     cc8:	08 95       	ret

00000cca <dtostrf>:
     cca:	ef 92       	push	r14
     ccc:	0f 93       	push	r16
     cce:	1f 93       	push	r17
     cd0:	cf 93       	push	r28
     cd2:	df 93       	push	r29
     cd4:	e8 01       	movw	r28, r16
     cd6:	47 fd       	sbrc	r20, 7
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <dtostrf+0x14>
     cda:	34 e0       	ldi	r19, 0x04	; 4
     cdc:	01 c0       	rjmp	.+2      	; 0xce0 <dtostrf+0x16>
     cde:	34 e1       	ldi	r19, 0x14	; 20
     ce0:	04 2e       	mov	r0, r20
     ce2:	00 0c       	add	r0, r0
     ce4:	55 0b       	sbc	r21, r21
     ce6:	57 ff       	sbrs	r21, 7
     ce8:	03 c0       	rjmp	.+6      	; 0xcf0 <dtostrf+0x26>
     cea:	51 95       	neg	r21
     cec:	41 95       	neg	r20
     cee:	51 09       	sbc	r21, r1
     cf0:	e3 2e       	mov	r14, r19
     cf2:	02 2f       	mov	r16, r18
     cf4:	24 2f       	mov	r18, r20
     cf6:	ae 01       	movw	r20, r28
     cf8:	0e 94 2f 08 	call	0x105e	; 0x105e <dtoa_prf>
     cfc:	ce 01       	movw	r24, r28
     cfe:	df 91       	pop	r29
     d00:	cf 91       	pop	r28
     d02:	1f 91       	pop	r17
     d04:	0f 91       	pop	r16
     d06:	ef 90       	pop	r14
     d08:	08 95       	ret

00000d0a <__ftoa_engine>:
     d0a:	28 30       	cpi	r18, 0x08	; 8
     d0c:	08 f0       	brcs	.+2      	; 0xd10 <__ftoa_engine+0x6>
     d0e:	27 e0       	ldi	r18, 0x07	; 7
     d10:	33 27       	eor	r19, r19
     d12:	da 01       	movw	r26, r20
     d14:	99 0f       	add	r25, r25
     d16:	31 1d       	adc	r19, r1
     d18:	87 fd       	sbrc	r24, 7
     d1a:	91 60       	ori	r25, 0x01	; 1
     d1c:	00 96       	adiw	r24, 0x00	; 0
     d1e:	61 05       	cpc	r22, r1
     d20:	71 05       	cpc	r23, r1
     d22:	39 f4       	brne	.+14     	; 0xd32 <__ftoa_engine+0x28>
     d24:	32 60       	ori	r19, 0x02	; 2
     d26:	2e 5f       	subi	r18, 0xFE	; 254
     d28:	3d 93       	st	X+, r19
     d2a:	30 e3       	ldi	r19, 0x30	; 48
     d2c:	2a 95       	dec	r18
     d2e:	e1 f7       	brne	.-8      	; 0xd28 <__ftoa_engine+0x1e>
     d30:	08 95       	ret
     d32:	9f 3f       	cpi	r25, 0xFF	; 255
     d34:	30 f0       	brcs	.+12     	; 0xd42 <__ftoa_engine+0x38>
     d36:	80 38       	cpi	r24, 0x80	; 128
     d38:	71 05       	cpc	r23, r1
     d3a:	61 05       	cpc	r22, r1
     d3c:	09 f0       	breq	.+2      	; 0xd40 <__ftoa_engine+0x36>
     d3e:	3c 5f       	subi	r19, 0xFC	; 252
     d40:	3c 5f       	subi	r19, 0xFC	; 252
     d42:	3d 93       	st	X+, r19
     d44:	91 30       	cpi	r25, 0x01	; 1
     d46:	08 f0       	brcs	.+2      	; 0xd4a <__ftoa_engine+0x40>
     d48:	80 68       	ori	r24, 0x80	; 128
     d4a:	91 1d       	adc	r25, r1
     d4c:	df 93       	push	r29
     d4e:	cf 93       	push	r28
     d50:	1f 93       	push	r17
     d52:	0f 93       	push	r16
     d54:	ff 92       	push	r15
     d56:	ef 92       	push	r14
     d58:	19 2f       	mov	r17, r25
     d5a:	98 7f       	andi	r25, 0xF8	; 248
     d5c:	96 95       	lsr	r25
     d5e:	e9 2f       	mov	r30, r25
     d60:	96 95       	lsr	r25
     d62:	96 95       	lsr	r25
     d64:	e9 0f       	add	r30, r25
     d66:	ff 27       	eor	r31, r31
     d68:	e6 53       	subi	r30, 0x36	; 54
     d6a:	ff 4f       	sbci	r31, 0xFF	; 255
     d6c:	99 27       	eor	r25, r25
     d6e:	33 27       	eor	r19, r19
     d70:	ee 24       	eor	r14, r14
     d72:	ff 24       	eor	r15, r15
     d74:	a7 01       	movw	r20, r14
     d76:	e7 01       	movw	r28, r14
     d78:	05 90       	lpm	r0, Z+
     d7a:	08 94       	sec
     d7c:	07 94       	ror	r0
     d7e:	28 f4       	brcc	.+10     	; 0xd8a <__ftoa_engine+0x80>
     d80:	36 0f       	add	r19, r22
     d82:	e7 1e       	adc	r14, r23
     d84:	f8 1e       	adc	r15, r24
     d86:	49 1f       	adc	r20, r25
     d88:	51 1d       	adc	r21, r1
     d8a:	66 0f       	add	r22, r22
     d8c:	77 1f       	adc	r23, r23
     d8e:	88 1f       	adc	r24, r24
     d90:	99 1f       	adc	r25, r25
     d92:	06 94       	lsr	r0
     d94:	a1 f7       	brne	.-24     	; 0xd7e <__ftoa_engine+0x74>
     d96:	05 90       	lpm	r0, Z+
     d98:	07 94       	ror	r0
     d9a:	28 f4       	brcc	.+10     	; 0xda6 <__ftoa_engine+0x9c>
     d9c:	e7 0e       	add	r14, r23
     d9e:	f8 1e       	adc	r15, r24
     da0:	49 1f       	adc	r20, r25
     da2:	56 1f       	adc	r21, r22
     da4:	c1 1d       	adc	r28, r1
     da6:	77 0f       	add	r23, r23
     da8:	88 1f       	adc	r24, r24
     daa:	99 1f       	adc	r25, r25
     dac:	66 1f       	adc	r22, r22
     dae:	06 94       	lsr	r0
     db0:	a1 f7       	brne	.-24     	; 0xd9a <__ftoa_engine+0x90>
     db2:	05 90       	lpm	r0, Z+
     db4:	07 94       	ror	r0
     db6:	28 f4       	brcc	.+10     	; 0xdc2 <__ftoa_engine+0xb8>
     db8:	f8 0e       	add	r15, r24
     dba:	49 1f       	adc	r20, r25
     dbc:	56 1f       	adc	r21, r22
     dbe:	c7 1f       	adc	r28, r23
     dc0:	d1 1d       	adc	r29, r1
     dc2:	88 0f       	add	r24, r24
     dc4:	99 1f       	adc	r25, r25
     dc6:	66 1f       	adc	r22, r22
     dc8:	77 1f       	adc	r23, r23
     dca:	06 94       	lsr	r0
     dcc:	a1 f7       	brne	.-24     	; 0xdb6 <__ftoa_engine+0xac>
     dce:	05 90       	lpm	r0, Z+
     dd0:	07 94       	ror	r0
     dd2:	20 f4       	brcc	.+8      	; 0xddc <__ftoa_engine+0xd2>
     dd4:	49 0f       	add	r20, r25
     dd6:	56 1f       	adc	r21, r22
     dd8:	c7 1f       	adc	r28, r23
     dda:	d8 1f       	adc	r29, r24
     ddc:	99 0f       	add	r25, r25
     dde:	66 1f       	adc	r22, r22
     de0:	77 1f       	adc	r23, r23
     de2:	88 1f       	adc	r24, r24
     de4:	06 94       	lsr	r0
     de6:	a9 f7       	brne	.-22     	; 0xdd2 <__ftoa_engine+0xc8>
     de8:	84 91       	lpm	r24, Z
     dea:	10 95       	com	r17
     dec:	17 70       	andi	r17, 0x07	; 7
     dee:	41 f0       	breq	.+16     	; 0xe00 <__ftoa_engine+0xf6>
     df0:	d6 95       	lsr	r29
     df2:	c7 95       	ror	r28
     df4:	57 95       	ror	r21
     df6:	47 95       	ror	r20
     df8:	f7 94       	ror	r15
     dfa:	e7 94       	ror	r14
     dfc:	1a 95       	dec	r17
     dfe:	c1 f7       	brne	.-16     	; 0xdf0 <__ftoa_engine+0xe6>
     e00:	e0 e7       	ldi	r30, 0x70	; 112
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	68 94       	set
     e06:	15 90       	lpm	r1, Z+
     e08:	15 91       	lpm	r17, Z+
     e0a:	35 91       	lpm	r19, Z+
     e0c:	65 91       	lpm	r22, Z+
     e0e:	95 91       	lpm	r25, Z+
     e10:	05 90       	lpm	r0, Z+
     e12:	7f e2       	ldi	r23, 0x2F	; 47
     e14:	73 95       	inc	r23
     e16:	e1 18       	sub	r14, r1
     e18:	f1 0a       	sbc	r15, r17
     e1a:	43 0b       	sbc	r20, r19
     e1c:	56 0b       	sbc	r21, r22
     e1e:	c9 0b       	sbc	r28, r25
     e20:	d0 09       	sbc	r29, r0
     e22:	c0 f7       	brcc	.-16     	; 0xe14 <__ftoa_engine+0x10a>
     e24:	e1 0c       	add	r14, r1
     e26:	f1 1e       	adc	r15, r17
     e28:	43 1f       	adc	r20, r19
     e2a:	56 1f       	adc	r21, r22
     e2c:	c9 1f       	adc	r28, r25
     e2e:	d0 1d       	adc	r29, r0
     e30:	7e f4       	brtc	.+30     	; 0xe50 <__ftoa_engine+0x146>
     e32:	70 33       	cpi	r23, 0x30	; 48
     e34:	11 f4       	brne	.+4      	; 0xe3a <__ftoa_engine+0x130>
     e36:	8a 95       	dec	r24
     e38:	e6 cf       	rjmp	.-52     	; 0xe06 <__ftoa_engine+0xfc>
     e3a:	e8 94       	clt
     e3c:	01 50       	subi	r16, 0x01	; 1
     e3e:	30 f0       	brcs	.+12     	; 0xe4c <__ftoa_engine+0x142>
     e40:	08 0f       	add	r16, r24
     e42:	0a f4       	brpl	.+2      	; 0xe46 <__ftoa_engine+0x13c>
     e44:	00 27       	eor	r16, r16
     e46:	02 17       	cp	r16, r18
     e48:	08 f4       	brcc	.+2      	; 0xe4c <__ftoa_engine+0x142>
     e4a:	20 2f       	mov	r18, r16
     e4c:	23 95       	inc	r18
     e4e:	02 2f       	mov	r16, r18
     e50:	7a 33       	cpi	r23, 0x3A	; 58
     e52:	28 f0       	brcs	.+10     	; 0xe5e <__ftoa_engine+0x154>
     e54:	79 e3       	ldi	r23, 0x39	; 57
     e56:	7d 93       	st	X+, r23
     e58:	2a 95       	dec	r18
     e5a:	e9 f7       	brne	.-6      	; 0xe56 <__ftoa_engine+0x14c>
     e5c:	10 c0       	rjmp	.+32     	; 0xe7e <__ftoa_engine+0x174>
     e5e:	7d 93       	st	X+, r23
     e60:	2a 95       	dec	r18
     e62:	89 f6       	brne	.-94     	; 0xe06 <__ftoa_engine+0xfc>
     e64:	06 94       	lsr	r0
     e66:	97 95       	ror	r25
     e68:	67 95       	ror	r22
     e6a:	37 95       	ror	r19
     e6c:	17 95       	ror	r17
     e6e:	17 94       	ror	r1
     e70:	e1 18       	sub	r14, r1
     e72:	f1 0a       	sbc	r15, r17
     e74:	43 0b       	sbc	r20, r19
     e76:	56 0b       	sbc	r21, r22
     e78:	c9 0b       	sbc	r28, r25
     e7a:	d0 09       	sbc	r29, r0
     e7c:	98 f0       	brcs	.+38     	; 0xea4 <__ftoa_engine+0x19a>
     e7e:	23 95       	inc	r18
     e80:	7e 91       	ld	r23, -X
     e82:	73 95       	inc	r23
     e84:	7a 33       	cpi	r23, 0x3A	; 58
     e86:	08 f0       	brcs	.+2      	; 0xe8a <__ftoa_engine+0x180>
     e88:	70 e3       	ldi	r23, 0x30	; 48
     e8a:	7c 93       	st	X, r23
     e8c:	20 13       	cpse	r18, r16
     e8e:	b8 f7       	brcc	.-18     	; 0xe7e <__ftoa_engine+0x174>
     e90:	7e 91       	ld	r23, -X
     e92:	70 61       	ori	r23, 0x10	; 16
     e94:	7d 93       	st	X+, r23
     e96:	30 f0       	brcs	.+12     	; 0xea4 <__ftoa_engine+0x19a>
     e98:	83 95       	inc	r24
     e9a:	71 e3       	ldi	r23, 0x31	; 49
     e9c:	7d 93       	st	X+, r23
     e9e:	70 e3       	ldi	r23, 0x30	; 48
     ea0:	2a 95       	dec	r18
     ea2:	e1 f7       	brne	.-8      	; 0xe9c <__ftoa_engine+0x192>
     ea4:	11 24       	eor	r1, r1
     ea6:	ef 90       	pop	r14
     ea8:	ff 90       	pop	r15
     eaa:	0f 91       	pop	r16
     eac:	1f 91       	pop	r17
     eae:	cf 91       	pop	r28
     eb0:	df 91       	pop	r29
     eb2:	99 27       	eor	r25, r25
     eb4:	87 fd       	sbrc	r24, 7
     eb6:	90 95       	com	r25
     eb8:	08 95       	ret

00000eba <strnlen_P>:
     eba:	fc 01       	movw	r30, r24
     ebc:	05 90       	lpm	r0, Z+
     ebe:	61 50       	subi	r22, 0x01	; 1
     ec0:	70 40       	sbci	r23, 0x00	; 0
     ec2:	01 10       	cpse	r0, r1
     ec4:	d8 f7       	brcc	.-10     	; 0xebc <strnlen_P+0x2>
     ec6:	80 95       	com	r24
     ec8:	90 95       	com	r25
     eca:	8e 0f       	add	r24, r30
     ecc:	9f 1f       	adc	r25, r31
     ece:	08 95       	ret

00000ed0 <strnlen>:
     ed0:	fc 01       	movw	r30, r24
     ed2:	61 50       	subi	r22, 0x01	; 1
     ed4:	70 40       	sbci	r23, 0x00	; 0
     ed6:	01 90       	ld	r0, Z+
     ed8:	01 10       	cpse	r0, r1
     eda:	d8 f7       	brcc	.-10     	; 0xed2 <strnlen+0x2>
     edc:	80 95       	com	r24
     ede:	90 95       	com	r25
     ee0:	8e 0f       	add	r24, r30
     ee2:	9f 1f       	adc	r25, r31
     ee4:	08 95       	ret

00000ee6 <fputc>:
     ee6:	0f 93       	push	r16
     ee8:	1f 93       	push	r17
     eea:	cf 93       	push	r28
     eec:	df 93       	push	r29
     eee:	fb 01       	movw	r30, r22
     ef0:	23 81       	ldd	r18, Z+3	; 0x03
     ef2:	21 fd       	sbrc	r18, 1
     ef4:	03 c0       	rjmp	.+6      	; 0xefc <fputc+0x16>
     ef6:	8f ef       	ldi	r24, 0xFF	; 255
     ef8:	9f ef       	ldi	r25, 0xFF	; 255
     efa:	2c c0       	rjmp	.+88     	; 0xf54 <fputc+0x6e>
     efc:	22 ff       	sbrs	r18, 2
     efe:	16 c0       	rjmp	.+44     	; 0xf2c <fputc+0x46>
     f00:	46 81       	ldd	r20, Z+6	; 0x06
     f02:	57 81       	ldd	r21, Z+7	; 0x07
     f04:	24 81       	ldd	r18, Z+4	; 0x04
     f06:	35 81       	ldd	r19, Z+5	; 0x05
     f08:	42 17       	cp	r20, r18
     f0a:	53 07       	cpc	r21, r19
     f0c:	44 f4       	brge	.+16     	; 0xf1e <fputc+0x38>
     f0e:	a0 81       	ld	r26, Z
     f10:	b1 81       	ldd	r27, Z+1	; 0x01
     f12:	9d 01       	movw	r18, r26
     f14:	2f 5f       	subi	r18, 0xFF	; 255
     f16:	3f 4f       	sbci	r19, 0xFF	; 255
     f18:	31 83       	std	Z+1, r19	; 0x01
     f1a:	20 83       	st	Z, r18
     f1c:	8c 93       	st	X, r24
     f1e:	26 81       	ldd	r18, Z+6	; 0x06
     f20:	37 81       	ldd	r19, Z+7	; 0x07
     f22:	2f 5f       	subi	r18, 0xFF	; 255
     f24:	3f 4f       	sbci	r19, 0xFF	; 255
     f26:	37 83       	std	Z+7, r19	; 0x07
     f28:	26 83       	std	Z+6, r18	; 0x06
     f2a:	14 c0       	rjmp	.+40     	; 0xf54 <fputc+0x6e>
     f2c:	8b 01       	movw	r16, r22
     f2e:	ec 01       	movw	r28, r24
     f30:	fb 01       	movw	r30, r22
     f32:	00 84       	ldd	r0, Z+8	; 0x08
     f34:	f1 85       	ldd	r31, Z+9	; 0x09
     f36:	e0 2d       	mov	r30, r0
     f38:	09 95       	icall
     f3a:	89 2b       	or	r24, r25
     f3c:	e1 f6       	brne	.-72     	; 0xef6 <fputc+0x10>
     f3e:	d8 01       	movw	r26, r16
     f40:	16 96       	adiw	r26, 0x06	; 6
     f42:	8d 91       	ld	r24, X+
     f44:	9c 91       	ld	r25, X
     f46:	17 97       	sbiw	r26, 0x07	; 7
     f48:	01 96       	adiw	r24, 0x01	; 1
     f4a:	17 96       	adiw	r26, 0x07	; 7
     f4c:	9c 93       	st	X, r25
     f4e:	8e 93       	st	-X, r24
     f50:	16 97       	sbiw	r26, 0x06	; 6
     f52:	ce 01       	movw	r24, r28
     f54:	df 91       	pop	r29
     f56:	cf 91       	pop	r28
     f58:	1f 91       	pop	r17
     f5a:	0f 91       	pop	r16
     f5c:	08 95       	ret

00000f5e <sprintf>:
     f5e:	ae e0       	ldi	r26, 0x0E	; 14
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	e5 eb       	ldi	r30, 0xB5	; 181
     f64:	f7 e0       	ldi	r31, 0x07	; 7
     f66:	0c 94 3c 06 	jmp	0xc78	; 0xc78 <__prologue_saves__+0x1c>
     f6a:	0d 89       	ldd	r16, Y+21	; 0x15
     f6c:	1e 89       	ldd	r17, Y+22	; 0x16
     f6e:	86 e0       	ldi	r24, 0x06	; 6
     f70:	8c 83       	std	Y+4, r24	; 0x04
     f72:	1a 83       	std	Y+2, r17	; 0x02
     f74:	09 83       	std	Y+1, r16	; 0x01
     f76:	8f ef       	ldi	r24, 0xFF	; 255
     f78:	9f e7       	ldi	r25, 0x7F	; 127
     f7a:	9e 83       	std	Y+6, r25	; 0x06
     f7c:	8d 83       	std	Y+5, r24	; 0x05
     f7e:	ae 01       	movw	r20, r28
     f80:	47 5e       	subi	r20, 0xE7	; 231
     f82:	5f 4f       	sbci	r21, 0xFF	; 255
     f84:	6f 89       	ldd	r22, Y+23	; 0x17
     f86:	78 8d       	ldd	r23, Y+24	; 0x18
     f88:	ce 01       	movw	r24, r28
     f8a:	01 96       	adiw	r24, 0x01	; 1
     f8c:	0e 94 8f 02 	call	0x51e	; 0x51e <vfprintf>
     f90:	ef 81       	ldd	r30, Y+7	; 0x07
     f92:	f8 85       	ldd	r31, Y+8	; 0x08
     f94:	e0 0f       	add	r30, r16
     f96:	f1 1f       	adc	r31, r17
     f98:	10 82       	st	Z, r1
     f9a:	2e 96       	adiw	r28, 0x0e	; 14
     f9c:	e4 e0       	ldi	r30, 0x04	; 4
     f9e:	0c 94 58 06 	jmp	0xcb0	; 0xcb0 <__epilogue_restores__+0x1c>

00000fa2 <__ultoa_invert>:
     fa2:	fa 01       	movw	r30, r20
     fa4:	aa 27       	eor	r26, r26
     fa6:	28 30       	cpi	r18, 0x08	; 8
     fa8:	51 f1       	breq	.+84     	; 0xffe <__ultoa_invert+0x5c>
     faa:	20 31       	cpi	r18, 0x10	; 16
     fac:	81 f1       	breq	.+96     	; 0x100e <__ultoa_invert+0x6c>
     fae:	e8 94       	clt
     fb0:	6f 93       	push	r22
     fb2:	6e 7f       	andi	r22, 0xFE	; 254
     fb4:	6e 5f       	subi	r22, 0xFE	; 254
     fb6:	7f 4f       	sbci	r23, 0xFF	; 255
     fb8:	8f 4f       	sbci	r24, 0xFF	; 255
     fba:	9f 4f       	sbci	r25, 0xFF	; 255
     fbc:	af 4f       	sbci	r26, 0xFF	; 255
     fbe:	b1 e0       	ldi	r27, 0x01	; 1
     fc0:	3e d0       	rcall	.+124    	; 0x103e <__ultoa_invert+0x9c>
     fc2:	b4 e0       	ldi	r27, 0x04	; 4
     fc4:	3c d0       	rcall	.+120    	; 0x103e <__ultoa_invert+0x9c>
     fc6:	67 0f       	add	r22, r23
     fc8:	78 1f       	adc	r23, r24
     fca:	89 1f       	adc	r24, r25
     fcc:	9a 1f       	adc	r25, r26
     fce:	a1 1d       	adc	r26, r1
     fd0:	68 0f       	add	r22, r24
     fd2:	79 1f       	adc	r23, r25
     fd4:	8a 1f       	adc	r24, r26
     fd6:	91 1d       	adc	r25, r1
     fd8:	a1 1d       	adc	r26, r1
     fda:	6a 0f       	add	r22, r26
     fdc:	71 1d       	adc	r23, r1
     fde:	81 1d       	adc	r24, r1
     fe0:	91 1d       	adc	r25, r1
     fe2:	a1 1d       	adc	r26, r1
     fe4:	20 d0       	rcall	.+64     	; 0x1026 <__ultoa_invert+0x84>
     fe6:	09 f4       	brne	.+2      	; 0xfea <__ultoa_invert+0x48>
     fe8:	68 94       	set
     fea:	3f 91       	pop	r19
     fec:	2a e0       	ldi	r18, 0x0A	; 10
     fee:	26 9f       	mul	r18, r22
     ff0:	11 24       	eor	r1, r1
     ff2:	30 19       	sub	r19, r0
     ff4:	30 5d       	subi	r19, 0xD0	; 208
     ff6:	31 93       	st	Z+, r19
     ff8:	de f6       	brtc	.-74     	; 0xfb0 <__ultoa_invert+0xe>
     ffa:	cf 01       	movw	r24, r30
     ffc:	08 95       	ret
     ffe:	46 2f       	mov	r20, r22
    1000:	47 70       	andi	r20, 0x07	; 7
    1002:	40 5d       	subi	r20, 0xD0	; 208
    1004:	41 93       	st	Z+, r20
    1006:	b3 e0       	ldi	r27, 0x03	; 3
    1008:	0f d0       	rcall	.+30     	; 0x1028 <__ultoa_invert+0x86>
    100a:	c9 f7       	brne	.-14     	; 0xffe <__ultoa_invert+0x5c>
    100c:	f6 cf       	rjmp	.-20     	; 0xffa <__ultoa_invert+0x58>
    100e:	46 2f       	mov	r20, r22
    1010:	4f 70       	andi	r20, 0x0F	; 15
    1012:	40 5d       	subi	r20, 0xD0	; 208
    1014:	4a 33       	cpi	r20, 0x3A	; 58
    1016:	18 f0       	brcs	.+6      	; 0x101e <__ultoa_invert+0x7c>
    1018:	49 5d       	subi	r20, 0xD9	; 217
    101a:	31 fd       	sbrc	r19, 1
    101c:	40 52       	subi	r20, 0x20	; 32
    101e:	41 93       	st	Z+, r20
    1020:	02 d0       	rcall	.+4      	; 0x1026 <__ultoa_invert+0x84>
    1022:	a9 f7       	brne	.-22     	; 0x100e <__ultoa_invert+0x6c>
    1024:	ea cf       	rjmp	.-44     	; 0xffa <__ultoa_invert+0x58>
    1026:	b4 e0       	ldi	r27, 0x04	; 4
    1028:	a6 95       	lsr	r26
    102a:	97 95       	ror	r25
    102c:	87 95       	ror	r24
    102e:	77 95       	ror	r23
    1030:	67 95       	ror	r22
    1032:	ba 95       	dec	r27
    1034:	c9 f7       	brne	.-14     	; 0x1028 <__ultoa_invert+0x86>
    1036:	00 97       	sbiw	r24, 0x00	; 0
    1038:	61 05       	cpc	r22, r1
    103a:	71 05       	cpc	r23, r1
    103c:	08 95       	ret
    103e:	9b 01       	movw	r18, r22
    1040:	ac 01       	movw	r20, r24
    1042:	0a 2e       	mov	r0, r26
    1044:	06 94       	lsr	r0
    1046:	57 95       	ror	r21
    1048:	47 95       	ror	r20
    104a:	37 95       	ror	r19
    104c:	27 95       	ror	r18
    104e:	ba 95       	dec	r27
    1050:	c9 f7       	brne	.-14     	; 0x1044 <__ultoa_invert+0xa2>
    1052:	62 0f       	add	r22, r18
    1054:	73 1f       	adc	r23, r19
    1056:	84 1f       	adc	r24, r20
    1058:	95 1f       	adc	r25, r21
    105a:	a0 1d       	adc	r26, r0
    105c:	08 95       	ret

0000105e <dtoa_prf>:
    105e:	a9 e0       	ldi	r26, 0x09	; 9
    1060:	b0 e0       	ldi	r27, 0x00	; 0
    1062:	e5 e3       	ldi	r30, 0x35	; 53
    1064:	f8 e0       	ldi	r31, 0x08	; 8
    1066:	0c 94 34 06 	jmp	0xc68	; 0xc68 <__prologue_saves__+0xc>
    106a:	6a 01       	movw	r12, r20
    106c:	12 2f       	mov	r17, r18
    106e:	b0 2e       	mov	r11, r16
    1070:	2b e3       	ldi	r18, 0x3B	; 59
    1072:	20 17       	cp	r18, r16
    1074:	20 f0       	brcs	.+8      	; 0x107e <dtoa_prf+0x20>
    1076:	ff 24       	eor	r15, r15
    1078:	f3 94       	inc	r15
    107a:	f0 0e       	add	r15, r16
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <dtoa_prf+0x24>
    107e:	2c e3       	ldi	r18, 0x3C	; 60
    1080:	f2 2e       	mov	r15, r18
    1082:	0f 2d       	mov	r16, r15
    1084:	27 e0       	ldi	r18, 0x07	; 7
    1086:	ae 01       	movw	r20, r28
    1088:	4f 5f       	subi	r20, 0xFF	; 255
    108a:	5f 4f       	sbci	r21, 0xFF	; 255
    108c:	0e 94 85 06 	call	0xd0a	; 0xd0a <__ftoa_engine>
    1090:	bc 01       	movw	r22, r24
    1092:	49 81       	ldd	r20, Y+1	; 0x01
    1094:	84 2f       	mov	r24, r20
    1096:	89 70       	andi	r24, 0x09	; 9
    1098:	81 30       	cpi	r24, 0x01	; 1
    109a:	31 f0       	breq	.+12     	; 0x10a8 <dtoa_prf+0x4a>
    109c:	e1 fc       	sbrc	r14, 1
    109e:	06 c0       	rjmp	.+12     	; 0x10ac <dtoa_prf+0x4e>
    10a0:	e0 fe       	sbrs	r14, 0
    10a2:	06 c0       	rjmp	.+12     	; 0x10b0 <dtoa_prf+0x52>
    10a4:	90 e2       	ldi	r25, 0x20	; 32
    10a6:	05 c0       	rjmp	.+10     	; 0x10b2 <dtoa_prf+0x54>
    10a8:	9d e2       	ldi	r25, 0x2D	; 45
    10aa:	03 c0       	rjmp	.+6      	; 0x10b2 <dtoa_prf+0x54>
    10ac:	9b e2       	ldi	r25, 0x2B	; 43
    10ae:	01 c0       	rjmp	.+2      	; 0x10b2 <dtoa_prf+0x54>
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	5e 2d       	mov	r21, r14
    10b4:	50 71       	andi	r21, 0x10	; 16
    10b6:	43 ff       	sbrs	r20, 3
    10b8:	3c c0       	rjmp	.+120    	; 0x1132 <dtoa_prf+0xd4>
    10ba:	91 11       	cpse	r25, r1
    10bc:	02 c0       	rjmp	.+4      	; 0x10c2 <dtoa_prf+0x64>
    10be:	83 e0       	ldi	r24, 0x03	; 3
    10c0:	01 c0       	rjmp	.+2      	; 0x10c4 <dtoa_prf+0x66>
    10c2:	84 e0       	ldi	r24, 0x04	; 4
    10c4:	81 17       	cp	r24, r17
    10c6:	18 f4       	brcc	.+6      	; 0x10ce <dtoa_prf+0x70>
    10c8:	21 2f       	mov	r18, r17
    10ca:	28 1b       	sub	r18, r24
    10cc:	01 c0       	rjmp	.+2      	; 0x10d0 <dtoa_prf+0x72>
    10ce:	20 e0       	ldi	r18, 0x00	; 0
    10d0:	51 11       	cpse	r21, r1
    10d2:	0b c0       	rjmp	.+22     	; 0x10ea <dtoa_prf+0x8c>
    10d4:	f6 01       	movw	r30, r12
    10d6:	82 2f       	mov	r24, r18
    10d8:	30 e2       	ldi	r19, 0x20	; 32
    10da:	88 23       	and	r24, r24
    10dc:	19 f0       	breq	.+6      	; 0x10e4 <dtoa_prf+0x86>
    10de:	31 93       	st	Z+, r19
    10e0:	81 50       	subi	r24, 0x01	; 1
    10e2:	fb cf       	rjmp	.-10     	; 0x10da <dtoa_prf+0x7c>
    10e4:	c2 0e       	add	r12, r18
    10e6:	d1 1c       	adc	r13, r1
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	99 23       	and	r25, r25
    10ec:	29 f0       	breq	.+10     	; 0x10f8 <dtoa_prf+0x9a>
    10ee:	d6 01       	movw	r26, r12
    10f0:	9c 93       	st	X, r25
    10f2:	f6 01       	movw	r30, r12
    10f4:	31 96       	adiw	r30, 0x01	; 1
    10f6:	6f 01       	movw	r12, r30
    10f8:	c6 01       	movw	r24, r12
    10fa:	03 96       	adiw	r24, 0x03	; 3
    10fc:	e2 fe       	sbrs	r14, 2
    10fe:	0a c0       	rjmp	.+20     	; 0x1114 <dtoa_prf+0xb6>
    1100:	3e e4       	ldi	r19, 0x4E	; 78
    1102:	d6 01       	movw	r26, r12
    1104:	3c 93       	st	X, r19
    1106:	41 e4       	ldi	r20, 0x41	; 65
    1108:	11 96       	adiw	r26, 0x01	; 1
    110a:	4c 93       	st	X, r20
    110c:	11 97       	sbiw	r26, 0x01	; 1
    110e:	12 96       	adiw	r26, 0x02	; 2
    1110:	3c 93       	st	X, r19
    1112:	06 c0       	rjmp	.+12     	; 0x1120 <dtoa_prf+0xc2>
    1114:	3e e6       	ldi	r19, 0x6E	; 110
    1116:	f6 01       	movw	r30, r12
    1118:	30 83       	st	Z, r19
    111a:	41 e6       	ldi	r20, 0x61	; 97
    111c:	41 83       	std	Z+1, r20	; 0x01
    111e:	32 83       	std	Z+2, r19	; 0x02
    1120:	fc 01       	movw	r30, r24
    1122:	32 2f       	mov	r19, r18
    1124:	40 e2       	ldi	r20, 0x20	; 32
    1126:	33 23       	and	r19, r19
    1128:	09 f4       	brne	.+2      	; 0x112c <dtoa_prf+0xce>
    112a:	42 c0       	rjmp	.+132    	; 0x11b0 <dtoa_prf+0x152>
    112c:	41 93       	st	Z+, r20
    112e:	31 50       	subi	r19, 0x01	; 1
    1130:	fa cf       	rjmp	.-12     	; 0x1126 <dtoa_prf+0xc8>
    1132:	42 ff       	sbrs	r20, 2
    1134:	44 c0       	rjmp	.+136    	; 0x11be <dtoa_prf+0x160>
    1136:	91 11       	cpse	r25, r1
    1138:	02 c0       	rjmp	.+4      	; 0x113e <dtoa_prf+0xe0>
    113a:	83 e0       	ldi	r24, 0x03	; 3
    113c:	01 c0       	rjmp	.+2      	; 0x1140 <dtoa_prf+0xe2>
    113e:	84 e0       	ldi	r24, 0x04	; 4
    1140:	81 17       	cp	r24, r17
    1142:	18 f4       	brcc	.+6      	; 0x114a <dtoa_prf+0xec>
    1144:	21 2f       	mov	r18, r17
    1146:	28 1b       	sub	r18, r24
    1148:	01 c0       	rjmp	.+2      	; 0x114c <dtoa_prf+0xee>
    114a:	20 e0       	ldi	r18, 0x00	; 0
    114c:	51 11       	cpse	r21, r1
    114e:	0b c0       	rjmp	.+22     	; 0x1166 <dtoa_prf+0x108>
    1150:	f6 01       	movw	r30, r12
    1152:	82 2f       	mov	r24, r18
    1154:	30 e2       	ldi	r19, 0x20	; 32
    1156:	88 23       	and	r24, r24
    1158:	19 f0       	breq	.+6      	; 0x1160 <dtoa_prf+0x102>
    115a:	31 93       	st	Z+, r19
    115c:	81 50       	subi	r24, 0x01	; 1
    115e:	fb cf       	rjmp	.-10     	; 0x1156 <dtoa_prf+0xf8>
    1160:	c2 0e       	add	r12, r18
    1162:	d1 1c       	adc	r13, r1
    1164:	20 e0       	ldi	r18, 0x00	; 0
    1166:	99 23       	and	r25, r25
    1168:	29 f0       	breq	.+10     	; 0x1174 <dtoa_prf+0x116>
    116a:	d6 01       	movw	r26, r12
    116c:	9c 93       	st	X, r25
    116e:	f6 01       	movw	r30, r12
    1170:	31 96       	adiw	r30, 0x01	; 1
    1172:	6f 01       	movw	r12, r30
    1174:	c6 01       	movw	r24, r12
    1176:	03 96       	adiw	r24, 0x03	; 3
    1178:	e2 fe       	sbrs	r14, 2
    117a:	0b c0       	rjmp	.+22     	; 0x1192 <dtoa_prf+0x134>
    117c:	39 e4       	ldi	r19, 0x49	; 73
    117e:	d6 01       	movw	r26, r12
    1180:	3c 93       	st	X, r19
    1182:	3e e4       	ldi	r19, 0x4E	; 78
    1184:	11 96       	adiw	r26, 0x01	; 1
    1186:	3c 93       	st	X, r19
    1188:	11 97       	sbiw	r26, 0x01	; 1
    118a:	36 e4       	ldi	r19, 0x46	; 70
    118c:	12 96       	adiw	r26, 0x02	; 2
    118e:	3c 93       	st	X, r19
    1190:	07 c0       	rjmp	.+14     	; 0x11a0 <dtoa_prf+0x142>
    1192:	39 e6       	ldi	r19, 0x69	; 105
    1194:	f6 01       	movw	r30, r12
    1196:	30 83       	st	Z, r19
    1198:	3e e6       	ldi	r19, 0x6E	; 110
    119a:	31 83       	std	Z+1, r19	; 0x01
    119c:	36 e6       	ldi	r19, 0x66	; 102
    119e:	32 83       	std	Z+2, r19	; 0x02
    11a0:	fc 01       	movw	r30, r24
    11a2:	32 2f       	mov	r19, r18
    11a4:	40 e2       	ldi	r20, 0x20	; 32
    11a6:	33 23       	and	r19, r19
    11a8:	19 f0       	breq	.+6      	; 0x11b0 <dtoa_prf+0x152>
    11aa:	41 93       	st	Z+, r20
    11ac:	31 50       	subi	r19, 0x01	; 1
    11ae:	fb cf       	rjmp	.-10     	; 0x11a6 <dtoa_prf+0x148>
    11b0:	fc 01       	movw	r30, r24
    11b2:	e2 0f       	add	r30, r18
    11b4:	f1 1d       	adc	r31, r1
    11b6:	10 82       	st	Z, r1
    11b8:	8e ef       	ldi	r24, 0xFE	; 254
    11ba:	9f ef       	ldi	r25, 0xFF	; 255
    11bc:	a6 c0       	rjmp	.+332    	; 0x130a <dtoa_prf+0x2ac>
    11be:	21 e0       	ldi	r18, 0x01	; 1
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	91 11       	cpse	r25, r1
    11c4:	02 c0       	rjmp	.+4      	; 0x11ca <dtoa_prf+0x16c>
    11c6:	20 e0       	ldi	r18, 0x00	; 0
    11c8:	30 e0       	ldi	r19, 0x00	; 0
    11ca:	16 16       	cp	r1, r22
    11cc:	17 06       	cpc	r1, r23
    11ce:	1c f4       	brge	.+6      	; 0x11d6 <dtoa_prf+0x178>
    11d0:	fb 01       	movw	r30, r22
    11d2:	31 96       	adiw	r30, 0x01	; 1
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <dtoa_prf+0x17c>
    11d6:	e1 e0       	ldi	r30, 0x01	; 1
    11d8:	f0 e0       	ldi	r31, 0x00	; 0
    11da:	2e 0f       	add	r18, r30
    11dc:	3f 1f       	adc	r19, r31
    11de:	bb 20       	and	r11, r11
    11e0:	21 f0       	breq	.+8      	; 0x11ea <dtoa_prf+0x18c>
    11e2:	eb 2d       	mov	r30, r11
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	31 96       	adiw	r30, 0x01	; 1
    11e8:	02 c0       	rjmp	.+4      	; 0x11ee <dtoa_prf+0x190>
    11ea:	e0 e0       	ldi	r30, 0x00	; 0
    11ec:	f0 e0       	ldi	r31, 0x00	; 0
    11ee:	2e 0f       	add	r18, r30
    11f0:	3f 1f       	adc	r19, r31
    11f2:	e1 2f       	mov	r30, r17
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	2e 17       	cp	r18, r30
    11f8:	3f 07       	cpc	r19, r31
    11fa:	1c f4       	brge	.+6      	; 0x1202 <dtoa_prf+0x1a4>
    11fc:	12 1b       	sub	r17, r18
    11fe:	21 2f       	mov	r18, r17
    1200:	01 c0       	rjmp	.+2      	; 0x1204 <dtoa_prf+0x1a6>
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	8e 2d       	mov	r24, r14
    1206:	88 71       	andi	r24, 0x18	; 24
    1208:	59 f4       	brne	.+22     	; 0x1220 <dtoa_prf+0x1c2>
    120a:	f6 01       	movw	r30, r12
    120c:	82 2f       	mov	r24, r18
    120e:	30 e2       	ldi	r19, 0x20	; 32
    1210:	88 23       	and	r24, r24
    1212:	19 f0       	breq	.+6      	; 0x121a <dtoa_prf+0x1bc>
    1214:	31 93       	st	Z+, r19
    1216:	81 50       	subi	r24, 0x01	; 1
    1218:	fb cf       	rjmp	.-10     	; 0x1210 <dtoa_prf+0x1b2>
    121a:	c2 0e       	add	r12, r18
    121c:	d1 1c       	adc	r13, r1
    121e:	20 e0       	ldi	r18, 0x00	; 0
    1220:	99 23       	and	r25, r25
    1222:	29 f0       	breq	.+10     	; 0x122e <dtoa_prf+0x1d0>
    1224:	d6 01       	movw	r26, r12
    1226:	9c 93       	st	X, r25
    1228:	f6 01       	movw	r30, r12
    122a:	31 96       	adiw	r30, 0x01	; 1
    122c:	6f 01       	movw	r12, r30
    122e:	51 11       	cpse	r21, r1
    1230:	0b c0       	rjmp	.+22     	; 0x1248 <dtoa_prf+0x1ea>
    1232:	f6 01       	movw	r30, r12
    1234:	82 2f       	mov	r24, r18
    1236:	90 e3       	ldi	r25, 0x30	; 48
    1238:	88 23       	and	r24, r24
    123a:	19 f0       	breq	.+6      	; 0x1242 <dtoa_prf+0x1e4>
    123c:	91 93       	st	Z+, r25
    123e:	81 50       	subi	r24, 0x01	; 1
    1240:	fb cf       	rjmp	.-10     	; 0x1238 <dtoa_prf+0x1da>
    1242:	c2 0e       	add	r12, r18
    1244:	d1 1c       	adc	r13, r1
    1246:	20 e0       	ldi	r18, 0x00	; 0
    1248:	0f 2d       	mov	r16, r15
    124a:	06 0f       	add	r16, r22
    124c:	9a 81       	ldd	r25, Y+2	; 0x02
    124e:	34 2f       	mov	r19, r20
    1250:	30 71       	andi	r19, 0x10	; 16
    1252:	44 ff       	sbrs	r20, 4
    1254:	03 c0       	rjmp	.+6      	; 0x125c <dtoa_prf+0x1fe>
    1256:	91 33       	cpi	r25, 0x31	; 49
    1258:	09 f4       	brne	.+2      	; 0x125c <dtoa_prf+0x1fe>
    125a:	01 50       	subi	r16, 0x01	; 1
    125c:	10 16       	cp	r1, r16
    125e:	24 f4       	brge	.+8      	; 0x1268 <dtoa_prf+0x20a>
    1260:	09 30       	cpi	r16, 0x09	; 9
    1262:	18 f0       	brcs	.+6      	; 0x126a <dtoa_prf+0x20c>
    1264:	08 e0       	ldi	r16, 0x08	; 8
    1266:	01 c0       	rjmp	.+2      	; 0x126a <dtoa_prf+0x20c>
    1268:	01 e0       	ldi	r16, 0x01	; 1
    126a:	ab 01       	movw	r20, r22
    126c:	77 ff       	sbrs	r23, 7
    126e:	02 c0       	rjmp	.+4      	; 0x1274 <dtoa_prf+0x216>
    1270:	40 e0       	ldi	r20, 0x00	; 0
    1272:	50 e0       	ldi	r21, 0x00	; 0
    1274:	fb 01       	movw	r30, r22
    1276:	e4 1b       	sub	r30, r20
    1278:	f5 0b       	sbc	r31, r21
    127a:	a1 e0       	ldi	r26, 0x01	; 1
    127c:	b0 e0       	ldi	r27, 0x00	; 0
    127e:	ac 0f       	add	r26, r28
    1280:	bd 1f       	adc	r27, r29
    1282:	ea 0f       	add	r30, r26
    1284:	fb 1f       	adc	r31, r27
    1286:	8e e2       	ldi	r24, 0x2E	; 46
    1288:	a8 2e       	mov	r10, r24
    128a:	4b 01       	movw	r8, r22
    128c:	80 1a       	sub	r8, r16
    128e:	91 08       	sbc	r9, r1
    1290:	0b 2d       	mov	r16, r11
    1292:	10 e0       	ldi	r17, 0x00	; 0
    1294:	11 95       	neg	r17
    1296:	01 95       	neg	r16
    1298:	11 09       	sbc	r17, r1
    129a:	4f 3f       	cpi	r20, 0xFF	; 255
    129c:	bf ef       	ldi	r27, 0xFF	; 255
    129e:	5b 07       	cpc	r21, r27
    12a0:	21 f4       	brne	.+8      	; 0x12aa <dtoa_prf+0x24c>
    12a2:	d6 01       	movw	r26, r12
    12a4:	ac 92       	st	X, r10
    12a6:	11 96       	adiw	r26, 0x01	; 1
    12a8:	6d 01       	movw	r12, r26
    12aa:	64 17       	cp	r22, r20
    12ac:	75 07       	cpc	r23, r21
    12ae:	2c f0       	brlt	.+10     	; 0x12ba <dtoa_prf+0x25c>
    12b0:	84 16       	cp	r8, r20
    12b2:	95 06       	cpc	r9, r21
    12b4:	14 f4       	brge	.+4      	; 0x12ba <dtoa_prf+0x25c>
    12b6:	81 81       	ldd	r24, Z+1	; 0x01
    12b8:	01 c0       	rjmp	.+2      	; 0x12bc <dtoa_prf+0x25e>
    12ba:	80 e3       	ldi	r24, 0x30	; 48
    12bc:	41 50       	subi	r20, 0x01	; 1
    12be:	51 09       	sbc	r21, r1
    12c0:	31 96       	adiw	r30, 0x01	; 1
    12c2:	d6 01       	movw	r26, r12
    12c4:	11 96       	adiw	r26, 0x01	; 1
    12c6:	7d 01       	movw	r14, r26
    12c8:	40 17       	cp	r20, r16
    12ca:	51 07       	cpc	r21, r17
    12cc:	24 f0       	brlt	.+8      	; 0x12d6 <dtoa_prf+0x278>
    12ce:	d6 01       	movw	r26, r12
    12d0:	8c 93       	st	X, r24
    12d2:	67 01       	movw	r12, r14
    12d4:	e2 cf       	rjmp	.-60     	; 0x129a <dtoa_prf+0x23c>
    12d6:	64 17       	cp	r22, r20
    12d8:	75 07       	cpc	r23, r21
    12da:	39 f4       	brne	.+14     	; 0x12ea <dtoa_prf+0x28c>
    12dc:	96 33       	cpi	r25, 0x36	; 54
    12de:	20 f4       	brcc	.+8      	; 0x12e8 <dtoa_prf+0x28a>
    12e0:	95 33       	cpi	r25, 0x35	; 53
    12e2:	19 f4       	brne	.+6      	; 0x12ea <dtoa_prf+0x28c>
    12e4:	31 11       	cpse	r19, r1
    12e6:	01 c0       	rjmp	.+2      	; 0x12ea <dtoa_prf+0x28c>
    12e8:	81 e3       	ldi	r24, 0x31	; 49
    12ea:	f6 01       	movw	r30, r12
    12ec:	80 83       	st	Z, r24
    12ee:	f7 01       	movw	r30, r14
    12f0:	82 2f       	mov	r24, r18
    12f2:	90 e2       	ldi	r25, 0x20	; 32
    12f4:	88 23       	and	r24, r24
    12f6:	19 f0       	breq	.+6      	; 0x12fe <dtoa_prf+0x2a0>
    12f8:	91 93       	st	Z+, r25
    12fa:	81 50       	subi	r24, 0x01	; 1
    12fc:	fb cf       	rjmp	.-10     	; 0x12f4 <dtoa_prf+0x296>
    12fe:	f7 01       	movw	r30, r14
    1300:	e2 0f       	add	r30, r18
    1302:	f1 1d       	adc	r31, r1
    1304:	10 82       	st	Z, r1
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	29 96       	adiw	r28, 0x09	; 9
    130c:	ec e0       	ldi	r30, 0x0C	; 12
    130e:	0c 94 50 06 	jmp	0xca0	; 0xca0 <__epilogue_restores__+0xc>

00001312 <_exit>:
    1312:	f8 94       	cli

00001314 <__stop_program>:
    1314:	ff cf       	rjmp	.-2      	; 0x1314 <__stop_program>
