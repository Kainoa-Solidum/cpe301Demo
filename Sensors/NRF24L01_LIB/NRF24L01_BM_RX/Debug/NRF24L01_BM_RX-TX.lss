
NRF24L01_BM_RX-TX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001a4  00800100  00000e1a  00000eae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e1a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000029  008002a4  008002a4  00001052  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001052  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  000010f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a5e  00000000  00000000  000011f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000be2  00000000  00000000  00002c56  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000afc  00000000  00000000  00003838  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000270  00000000  00000000  00004334  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000061a  00000000  00000000  000045a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008f0  00000000  00000000  00004bbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000054ae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e1       	ldi	r30, 0x1A	; 26
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 3a       	cpi	r26, 0xA4	; 164
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a4 ea       	ldi	r26, 0xA4	; 164
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 3c       	cpi	r26, 0xCD	; 205
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 97 03 	call	0x72e	; 0x72e <main>
  9e:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
  a6:	df 92       	push	r13
  a8:	ef 92       	push	r14
  aa:	ff 92       	push	r15
  ac:	0f 93       	push	r16
  ae:	1f 93       	push	r17
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
  b4:	7b 01       	movw	r14, r22
  b6:	8a 01       	movw	r16, r20
  b8:	2a 98       	cbi	0x05, 2	; 5
  ba:	0e 94 b2 02 	call	0x564	; 0x564 <spi_exchange>
  be:	d8 2e       	mov	r13, r24
  c0:	01 15       	cp	r16, r1
  c2:	11 05       	cpc	r17, r1
  c4:	51 f0       	breq	.+20     	; 0xda <nrf24_send_spi+0x34>
  c6:	e7 01       	movw	r28, r14
  c8:	0e 0d       	add	r16, r14
  ca:	1f 1d       	adc	r17, r15
  cc:	88 81       	ld	r24, Y
  ce:	0e 94 b2 02 	call	0x564	; 0x564 <spi_exchange>
  d2:	89 93       	st	Y+, r24
  d4:	c0 17       	cp	r28, r16
  d6:	d1 07       	cpc	r29, r17
  d8:	c9 f7       	brne	.-14     	; 0xcc <nrf24_send_spi+0x26>
  da:	2a 9a       	sbi	0x05, 2	; 5
  dc:	8d 2d       	mov	r24, r13
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	1f 91       	pop	r17
  e4:	0f 91       	pop	r16
  e6:	ff 90       	pop	r15
  e8:	ef 90       	pop	r14
  ea:	df 90       	pop	r13
  ec:	08 95       	ret

000000ee <nrf24_write>:
  ee:	80 62       	ori	r24, 0x20	; 32
  f0:	0e 94 53 00 	call	0xa6	; 0xa6 <nrf24_send_spi>
  f4:	08 95       	ret

000000f6 <nrf24_read>:
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <nrf24_send_spi>
  fa:	08 95       	ret

000000fc <nrf24_init>:
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	1f 92       	push	r1
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
 10a:	f8 94       	cli
 10c:	e9 e6       	ldi	r30, 0x69	; 105
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	82 60       	ori	r24, 0x02	; 2
 114:	80 83       	st	Z, r24
 116:	e8 9a       	sbi	0x1d, 0	; 29
 118:	78 94       	sei
 11a:	21 9a       	sbi	0x04, 1	; 4
 11c:	22 9a       	sbi	0x04, 2	; 4
 11e:	2a 9a       	sbi	0x05, 2	; 5
 120:	29 98       	cbi	0x05, 1	; 5
 122:	0e 94 a3 02 	call	0x546	; 0x546 <spi_master_init>
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	81 ee       	ldi	r24, 0xE1	; 225
 12a:	94 e0       	ldi	r25, 0x04	; 4
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <nrf24_init+0x30>
 134:	00 c0       	rjmp	.+0      	; 0x136 <nrf24_init+0x3a>
 136:	00 00       	nop
 138:	0f e3       	ldi	r16, 0x3F	; 63
 13a:	00 93 c6 02 	sts	0x02C6, r16	; 0x8002c6 <data>
 13e:	41 e0       	ldi	r20, 0x01	; 1
 140:	50 e0       	ldi	r21, 0x00	; 0
 142:	66 ec       	ldi	r22, 0xC6	; 198
 144:	72 e0       	ldi	r23, 0x02	; 2
 146:	80 e0       	ldi	r24, 0x00	; 0
 148:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 14c:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <data>
 150:	41 e0       	ldi	r20, 0x01	; 1
 152:	50 e0       	ldi	r21, 0x00	; 0
 154:	66 ec       	ldi	r22, 0xC6	; 198
 156:	72 e0       	ldi	r23, 0x02	; 2
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 15e:	80 ef       	ldi	r24, 0xF0	; 240
 160:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 164:	41 e0       	ldi	r20, 0x01	; 1
 166:	50 e0       	ldi	r21, 0x00	; 0
 168:	66 ec       	ldi	r22, 0xC6	; 198
 16a:	72 e0       	ldi	r23, 0x02	; 2
 16c:	84 e0       	ldi	r24, 0x04	; 4
 16e:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 172:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <data>
 176:	41 e0       	ldi	r20, 0x01	; 1
 178:	50 e0       	ldi	r21, 0x00	; 0
 17a:	66 ec       	ldi	r22, 0xC6	; 198
 17c:	72 e0       	ldi	r23, 0x02	; 2
 17e:	82 e0       	ldi	r24, 0x02	; 2
 180:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 184:	84 e7       	ldi	r24, 0x74	; 116
 186:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 18a:	41 e0       	ldi	r20, 0x01	; 1
 18c:	50 e0       	ldi	r21, 0x00	; 0
 18e:	66 ec       	ldi	r22, 0xC6	; 198
 190:	72 e0       	ldi	r23, 0x02	; 2
 192:	85 e0       	ldi	r24, 0x05	; 5
 194:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 198:	8e e0       	ldi	r24, 0x0E	; 14
 19a:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 19e:	41 e0       	ldi	r20, 0x01	; 1
 1a0:	50 e0       	ldi	r21, 0x00	; 0
 1a2:	66 ec       	ldi	r22, 0xC6	; 198
 1a4:	72 e0       	ldi	r23, 0x02	; 2
 1a6:	86 e0       	ldi	r24, 0x06	; 6
 1a8:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1ac:	10 e7       	ldi	r17, 0x70	; 112
 1ae:	10 93 c6 02 	sts	0x02C6, r17	; 0x8002c6 <data>
 1b2:	41 e0       	ldi	r20, 0x01	; 1
 1b4:	50 e0       	ldi	r21, 0x00	; 0
 1b6:	66 ec       	ldi	r22, 0xC6	; 198
 1b8:	72 e0       	ldi	r23, 0x02	; 2
 1ba:	87 e0       	ldi	r24, 0x07	; 7
 1bc:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1c0:	00 93 c6 02 	sts	0x02C6, r16	; 0x8002c6 <data>
 1c4:	41 e0       	ldi	r20, 0x01	; 1
 1c6:	50 e0       	ldi	r21, 0x00	; 0
 1c8:	66 ec       	ldi	r22, 0xC6	; 198
 1ca:	72 e0       	ldi	r23, 0x02	; 2
 1cc:	8c e1       	ldi	r24, 0x1C	; 28
 1ce:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1d2:	84 e0       	ldi	r24, 0x04	; 4
 1d4:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 1d8:	41 e0       	ldi	r20, 0x01	; 1
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	66 ec       	ldi	r22, 0xC6	; 198
 1de:	72 e0       	ldi	r23, 0x02	; 2
 1e0:	8d e1       	ldi	r24, 0x1D	; 29
 1e2:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1e6:	19 83       	std	Y+1, r17	; 0x01
 1e8:	40 e0       	ldi	r20, 0x00	; 0
 1ea:	50 e0       	ldi	r21, 0x00	; 0
 1ec:	60 e0       	ldi	r22, 0x00	; 0
 1ee:	70 e0       	ldi	r23, 0x00	; 0
 1f0:	82 ee       	ldi	r24, 0xE2	; 226
 1f2:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 1f6:	40 e0       	ldi	r20, 0x00	; 0
 1f8:	50 e0       	ldi	r21, 0x00	; 0
 1fa:	60 e0       	ldi	r22, 0x00	; 0
 1fc:	70 e0       	ldi	r23, 0x00	; 0
 1fe:	81 ee       	ldi	r24, 0xE1	; 225
 200:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 204:	45 e0       	ldi	r20, 0x05	; 5
 206:	50 e0       	ldi	r21, 0x00	; 0
 208:	65 e0       	ldi	r22, 0x05	; 5
 20a:	71 e0       	ldi	r23, 0x01	; 1
 20c:	8a e0       	ldi	r24, 0x0A	; 10
 20e:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 212:	45 e0       	ldi	r20, 0x05	; 5
 214:	50 e0       	ldi	r21, 0x00	; 0
 216:	60 e0       	ldi	r22, 0x00	; 0
 218:	71 e0       	ldi	r23, 0x01	; 1
 21a:	80 e1       	ldi	r24, 0x10	; 16
 21c:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 220:	41 e0       	ldi	r20, 0x01	; 1
 222:	50 e0       	ldi	r21, 0x00	; 0
 224:	be 01       	movw	r22, r28
 226:	6f 5f       	subi	r22, 0xFF	; 255
 228:	7f 4f       	sbci	r23, 0xFF	; 255
 22a:	82 e0       	ldi	r24, 0x02	; 2
 22c:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 230:	89 81       	ldd	r24, Y+1	; 0x01
 232:	81 60       	ori	r24, 0x01	; 1
 234:	89 83       	std	Y+1, r24	; 0x01
 236:	41 e0       	ldi	r20, 0x01	; 1
 238:	50 e0       	ldi	r21, 0x00	; 0
 23a:	be 01       	movw	r22, r28
 23c:	6f 5f       	subi	r22, 0xFF	; 255
 23e:	7f 4f       	sbci	r23, 0xFF	; 255
 240:	82 e0       	ldi	r24, 0x02	; 2
 242:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 246:	0f 90       	pop	r0
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	08 95       	ret

00000252 <nrf24_state>:
 252:	1f 93       	push	r17
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	1f 92       	push	r1
 25a:	cd b7       	in	r28, 0x3d	; 61
 25c:	de b7       	in	r29, 0x3e	; 62
 25e:	18 2f       	mov	r17, r24
 260:	41 e0       	ldi	r20, 0x01	; 1
 262:	50 e0       	ldi	r21, 0x00	; 0
 264:	be 01       	movw	r22, r28
 266:	6f 5f       	subi	r22, 0xFF	; 255
 268:	7f 4f       	sbci	r23, 0xFF	; 255
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 270:	13 30       	cpi	r17, 0x03	; 3
 272:	71 f1       	breq	.+92     	; 0x2d0 <nrf24_state+0x7e>
 274:	28 f4       	brcc	.+10     	; 0x280 <nrf24_state+0x2e>
 276:	11 30       	cpi	r17, 0x01	; 1
 278:	59 f0       	breq	.+22     	; 0x290 <nrf24_state+0x3e>
 27a:	12 30       	cpi	r17, 0x02	; 2
 27c:	e9 f0       	breq	.+58     	; 0x2b8 <nrf24_state+0x66>
 27e:	5e c0       	rjmp	.+188    	; 0x33c <nrf24_state+0xea>
 280:	15 30       	cpi	r17, 0x05	; 5
 282:	09 f4       	brne	.+2      	; 0x286 <nrf24_state+0x34>
 284:	47 c0       	rjmp	.+142    	; 0x314 <nrf24_state+0xc2>
 286:	d0 f1       	brcs	.+116    	; 0x2fc <nrf24_state+0xaa>
 288:	16 30       	cpi	r17, 0x06	; 6
 28a:	09 f4       	brne	.+2      	; 0x28e <nrf24_state+0x3c>
 28c:	45 c0       	rjmp	.+138    	; 0x318 <nrf24_state+0xc6>
 28e:	56 c0       	rjmp	.+172    	; 0x33c <nrf24_state+0xea>
 290:	89 81       	ldd	r24, Y+1	; 0x01
 292:	81 fd       	sbrc	r24, 1
 294:	53 c0       	rjmp	.+166    	; 0x33c <nrf24_state+0xea>
 296:	82 60       	ori	r24, 0x02	; 2
 298:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 29c:	41 e0       	ldi	r20, 0x01	; 1
 29e:	50 e0       	ldi	r21, 0x00	; 0
 2a0:	66 ec       	ldi	r22, 0xC6	; 198
 2a2:	72 e0       	ldi	r23, 0x02	; 2
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 2aa:	8f e3       	ldi	r24, 0x3F	; 63
 2ac:	9f e1       	ldi	r25, 0x1F	; 31
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <nrf24_state+0x5c>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <nrf24_state+0x62>
 2b4:	00 00       	nop
 2b6:	42 c0       	rjmp	.+132    	; 0x33c <nrf24_state+0xea>
 2b8:	89 81       	ldd	r24, Y+1	; 0x01
 2ba:	8d 7f       	andi	r24, 0xFD	; 253
 2bc:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 2c0:	41 e0       	ldi	r20, 0x01	; 1
 2c2:	50 e0       	ldi	r21, 0x00	; 0
 2c4:	66 ec       	ldi	r22, 0xC6	; 198
 2c6:	72 e0       	ldi	r23, 0x02	; 2
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 2ce:	36 c0       	rjmp	.+108    	; 0x33c <nrf24_state+0xea>
 2d0:	89 81       	ldd	r24, Y+1	; 0x01
 2d2:	81 60       	ori	r24, 0x01	; 1
 2d4:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 2d8:	41 e0       	ldi	r20, 0x01	; 1
 2da:	50 e0       	ldi	r21, 0x00	; 0
 2dc:	66 ec       	ldi	r22, 0xC6	; 198
 2de:	72 e0       	ldi	r23, 0x02	; 2
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 2e6:	80 e7       	ldi	r24, 0x70	; 112
 2e8:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 2ec:	41 e0       	ldi	r20, 0x01	; 1
 2ee:	50 e0       	ldi	r21, 0x00	; 0
 2f0:	66 ec       	ldi	r22, 0xC6	; 198
 2f2:	72 e0       	ldi	r23, 0x02	; 2
 2f4:	87 e0       	ldi	r24, 0x07	; 7
 2f6:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 2fa:	20 c0       	rjmp	.+64     	; 0x33c <nrf24_state+0xea>
 2fc:	89 81       	ldd	r24, Y+1	; 0x01
 2fe:	8e 7f       	andi	r24, 0xFE	; 254
 300:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 304:	41 e0       	ldi	r20, 0x01	; 1
 306:	50 e0       	ldi	r21, 0x00	; 0
 308:	66 ec       	ldi	r22, 0xC6	; 198
 30a:	72 e0       	ldi	r23, 0x02	; 2
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 312:	14 c0       	rjmp	.+40     	; 0x33c <nrf24_state+0xea>
 314:	29 98       	cbi	0x05, 1	; 5
 316:	12 c0       	rjmp	.+36     	; 0x33c <nrf24_state+0xea>
 318:	89 81       	ldd	r24, Y+1	; 0x01
 31a:	8e 7f       	andi	r24, 0xFE	; 254
 31c:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 320:	41 e0       	ldi	r20, 0x01	; 1
 322:	50 e0       	ldi	r21, 0x00	; 0
 324:	66 ec       	ldi	r22, 0xC6	; 198
 326:	72 e0       	ldi	r23, 0x02	; 2
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 32e:	29 9a       	sbi	0x05, 1	; 5
 330:	87 e5       	ldi	r24, 0x57	; 87
 332:	92 e0       	ldi	r25, 0x02	; 2
 334:	01 97       	sbiw	r24, 0x01	; 1
 336:	f1 f7       	brne	.-4      	; 0x334 <nrf24_state+0xe2>
 338:	00 c0       	rjmp	.+0      	; 0x33a <nrf24_state+0xe8>
 33a:	00 00       	nop
 33c:	0f 90       	pop	r0
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	1f 91       	pop	r17
 344:	08 95       	ret

00000346 <nrf24_start_listening>:
 346:	83 e0       	ldi	r24, 0x03	; 3
 348:	0e 94 29 01 	call	0x252	; 0x252 <nrf24_state>
 34c:	29 9a       	sbi	0x05, 1	; 5
 34e:	87 e5       	ldi	r24, 0x57	; 87
 350:	92 e0       	ldi	r25, 0x02	; 2
 352:	01 97       	sbiw	r24, 0x01	; 1
 354:	f1 f7       	brne	.-4      	; 0x352 <nrf24_start_listening+0xc>
 356:	00 c0       	rjmp	.+0      	; 0x358 <nrf24_start_listening+0x12>
 358:	00 00       	nop
 35a:	08 95       	ret

0000035c <nrf24_send_message>:
 35c:	cf 92       	push	r12
 35e:	df 92       	push	r13
 360:	ef 92       	push	r14
 362:	ff 92       	push	r15
 364:	0f 93       	push	r16
 366:	1f 93       	push	r17
 368:	cf 93       	push	r28
 36a:	df 93       	push	r29
 36c:	cd b7       	in	r28, 0x3d	; 61
 36e:	de b7       	in	r29, 0x3e	; 62
 370:	a0 97       	sbiw	r28, 0x20	; 32
 372:	0f b6       	in	r0, 0x3f	; 63
 374:	f8 94       	cli
 376:	de bf       	out	0x3e, r29	; 62
 378:	0f be       	out	0x3f, r0	; 63
 37a:	cd bf       	out	0x3d, r28	; 61
 37c:	6c 01       	movw	r12, r24
 37e:	68 94       	set
 380:	ff 24       	eor	r15, r15
 382:	f5 f8       	bld	r15, 5
 384:	ce 01       	movw	r24, r28
 386:	01 96       	adiw	r24, 0x01	; 1
 388:	fc 01       	movw	r30, r24
 38a:	2f 2d       	mov	r18, r15
 38c:	11 92       	st	Z+, r1
 38e:	2a 95       	dec	r18
 390:	e9 f7       	brne	.-6      	; 0x38c <nrf24_send_message+0x30>
 392:	b6 01       	movw	r22, r12
 394:	0e 94 f6 03 	call	0x7ec	; 0x7ec <strcpy>
 398:	f6 01       	movw	r30, r12
 39a:	01 90       	ld	r0, Z+
 39c:	00 20       	and	r0, r0
 39e:	e9 f7       	brne	.-6      	; 0x39a <nrf24_send_message+0x3e>
 3a0:	31 97       	sbiw	r30, 0x01	; 1
 3a2:	8f 01       	movw	r16, r30
 3a4:	0c 19       	sub	r16, r12
 3a6:	1d 09       	sbc	r17, r13
 3a8:	84 e0       	ldi	r24, 0x04	; 4
 3aa:	0e 94 29 01 	call	0x252	; 0x252 <nrf24_state>
 3ae:	40 e0       	ldi	r20, 0x00	; 0
 3b0:	50 e0       	ldi	r21, 0x00	; 0
 3b2:	60 e0       	ldi	r22, 0x00	; 0
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	82 ee       	ldi	r24, 0xE2	; 226
 3b8:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 3bc:	40 e0       	ldi	r20, 0x00	; 0
 3be:	50 e0       	ldi	r21, 0x00	; 0
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	81 ee       	ldi	r24, 0xE1	; 225
 3c6:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 3ca:	f0 92 c6 02 	sts	0x02C6, r15	; 0x8002c6 <data>
 3ce:	41 e0       	ldi	r20, 0x01	; 1
 3d0:	50 e0       	ldi	r21, 0x00	; 0
 3d2:	66 ec       	ldi	r22, 0xC6	; 198
 3d4:	72 e0       	ldi	r23, 0x02	; 2
 3d6:	87 e0       	ldi	r24, 0x07	; 7
 3d8:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 3dc:	41 e0       	ldi	r20, 0x01	; 1
 3de:	50 e0       	ldi	r21, 0x00	; 0
 3e0:	66 ec       	ldi	r22, 0xC6	; 198
 3e2:	72 e0       	ldi	r23, 0x02	; 2
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 3ea:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <data>
 3ee:	80 64       	ori	r24, 0x40	; 64
 3f0:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 3f4:	41 e0       	ldi	r20, 0x01	; 1
 3f6:	50 e0       	ldi	r21, 0x00	; 0
 3f8:	66 ec       	ldi	r22, 0xC6	; 198
 3fa:	72 e0       	ldi	r23, 0x02	; 2
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 402:	2a 98       	cbi	0x05, 2	; 5
 404:	80 eb       	ldi	r24, 0xB0	; 176
 406:	0e 94 ad 02 	call	0x55a	; 0x55a <spi_send>
 40a:	ef ef       	ldi	r30, 0xFF	; 255
 40c:	e0 0f       	add	r30, r16
 40e:	00 23       	and	r16, r16
 410:	81 f0       	breq	.+32     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 412:	86 01       	movw	r16, r12
 414:	ee 2e       	mov	r14, r30
 416:	f1 2c       	mov	r15, r1
 418:	f7 01       	movw	r30, r14
 41a:	31 96       	adiw	r30, 0x01	; 1
 41c:	76 01       	movw	r14, r12
 41e:	ee 0e       	add	r14, r30
 420:	ff 1e       	adc	r15, r31
 422:	f8 01       	movw	r30, r16
 424:	81 91       	ld	r24, Z+
 426:	8f 01       	movw	r16, r30
 428:	0e 94 ad 02 	call	0x55a	; 0x55a <spi_send>
 42c:	0e 15       	cp	r16, r14
 42e:	1f 05       	cpc	r17, r15
 430:	c1 f7       	brne	.-16     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	0e 94 ad 02 	call	0x55a	; 0x55a <spi_send>
 438:	2a 9a       	sbi	0x05, 2	; 5
 43a:	29 9a       	sbi	0x05, 1	; 5
 43c:	f0 e5       	ldi	r31, 0x50	; 80
 43e:	fa 95       	dec	r31
 440:	f1 f7       	brne	.-4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 442:	29 98       	cbi	0x05, 1	; 5
 444:	41 e0       	ldi	r20, 0x01	; 1
 446:	50 e0       	ldi	r21, 0x00	; 0
 448:	66 ec       	ldi	r22, 0xC6	; 198
 44a:	72 e0       	ldi	r23, 0x02	; 2
 44c:	87 e0       	ldi	r24, 0x07	; 7
 44e:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 452:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <data>
 456:	85 fd       	sbrc	r24, 5
 458:	0b c0       	rjmp	.+22     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 45a:	41 e0       	ldi	r20, 0x01	; 1
 45c:	50 e0       	ldi	r21, 0x00	; 0
 45e:	66 ec       	ldi	r22, 0xC6	; 198
 460:	72 e0       	ldi	r23, 0x02	; 2
 462:	87 e0       	ldi	r24, 0x07	; 7
 464:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 468:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <data>
 46c:	85 ff       	sbrs	r24, 5
 46e:	f5 cf       	rjmp	.-22     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 470:	ce 01       	movw	r24, r28
 472:	01 96       	adiw	r24, 0x01	; 1
 474:	9f 93       	push	r25
 476:	8f 93       	push	r24
 478:	86 e2       	ldi	r24, 0x26	; 38
 47a:	91 e0       	ldi	r25, 0x01	; 1
 47c:	9f 93       	push	r25
 47e:	8f 93       	push	r24
 480:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
 484:	41 e0       	ldi	r20, 0x01	; 1
 486:	50 e0       	ldi	r21, 0x00	; 0
 488:	66 ec       	ldi	r22, 0xC6	; 198
 48a:	72 e0       	ldi	r23, 0x02	; 2
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
 492:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <data>
 496:	8f 7b       	andi	r24, 0xBF	; 191
 498:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
 49c:	41 e0       	ldi	r20, 0x01	; 1
 49e:	50 e0       	ldi	r21, 0x00	; 0
 4a0:	66 ec       	ldi	r22, 0xC6	; 198
 4a2:	72 e0       	ldi	r23, 0x02	; 2
 4a4:	80 e0       	ldi	r24, 0x00	; 0
 4a6:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
 4aa:	0e 94 a3 01 	call	0x346	; 0x346 <nrf24_start_listening>
 4ae:	0f 90       	pop	r0
 4b0:	0f 90       	pop	r0
 4b2:	0f 90       	pop	r0
 4b4:	0f 90       	pop	r0
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	a0 96       	adiw	r28, 0x20	; 32
 4ba:	0f b6       	in	r0, 0x3f	; 63
 4bc:	f8 94       	cli
 4be:	de bf       	out	0x3e, r29	; 62
 4c0:	0f be       	out	0x3f, r0	; 63
 4c2:	cd bf       	out	0x3d, r28	; 61
 4c4:	df 91       	pop	r29
 4c6:	cf 91       	pop	r28
 4c8:	1f 91       	pop	r17
 4ca:	0f 91       	pop	r16
 4cc:	ff 90       	pop	r15
 4ce:	ef 90       	pop	r14
 4d0:	df 90       	pop	r13
 4d2:	cf 90       	pop	r12
 4d4:	08 95       	ret

000004d6 <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
 4d6:	80 e2       	ldi	r24, 0x20	; 32
 4d8:	e4 ea       	ldi	r30, 0xA4	; 164
 4da:	f2 e0       	ldi	r31, 0x02	; 2
 4dc:	df 01       	movw	r26, r30
 4de:	1d 92       	st	X+, r1
 4e0:	8a 95       	dec	r24
 4e2:	e9 f7       	brne	.-6      	; 0x4de <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
 4e4:	41 e0       	ldi	r20, 0x01	; 1
 4e6:	50 e0       	ldi	r21, 0x00	; 0
 4e8:	66 ec       	ldi	r22, 0xC6	; 198
 4ea:	72 e0       	ldi	r23, 0x02	; 2
 4ec:	80 e6       	ldi	r24, 0x60	; 96
 4ee:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
 4f2:	40 91 c6 02 	lds	r20, 0x02C6	; 0x8002c6 <data>
 4f6:	44 23       	and	r20, r20
 4f8:	41 f0       	breq	.+16     	; 0x50a <nrf24_read_message+0x34>
 4fa:	50 e0       	ldi	r21, 0x00	; 0
 4fc:	4f 5f       	subi	r20, 0xFF	; 255
 4fe:	5f 4f       	sbci	r21, 0xFF	; 255
 500:	64 ea       	ldi	r22, 0xA4	; 164
 502:	72 e0       	ldi	r23, 0x02	; 2
 504:	81 e6       	ldi	r24, 0x61	; 97
 506:	0e 94 53 00 	call	0xa6	; 0xa6 <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
 50a:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <__data_end>
 50e:	88 23       	and	r24, r24
 510:	69 f0       	breq	.+26     	; 0x52c <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
 512:	80 e4       	ldi	r24, 0x40	; 64
 514:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
		nrf24_write(STATUS,&data,1);
 518:	41 e0       	ldi	r20, 0x01	; 1
 51a:	50 e0       	ldi	r21, 0x00	; 0
 51c:	66 ec       	ldi	r22, 0xC6	; 198
 51e:	72 e0       	ldi	r23, 0x02	; 2
 520:	87 e0       	ldi	r24, 0x07	; 7
 522:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
		
		return rx_message;
 526:	84 ea       	ldi	r24, 0xA4	; 164
 528:	92 e0       	ldi	r25, 0x02	; 2
 52a:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
 52c:	80 e4       	ldi	r24, 0x40	; 64
 52e:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
	nrf24_write(STATUS,&data,1);
 532:	41 e0       	ldi	r20, 0x01	; 1
 534:	50 e0       	ldi	r21, 0x00	; 0
 536:	66 ec       	ldi	r22, 0xC6	; 198
 538:	72 e0       	ldi	r23, 0x02	; 2
 53a:	87 e0       	ldi	r24, 0x07	; 7
 53c:	0e 94 77 00 	call	0xee	; 0xee <nrf24_write>
	
	return "failed";
 540:	88 e3       	ldi	r24, 0x38	; 56
 542:	91 e0       	ldi	r25, 0x01	; 1
}
 544:	08 95       	ret

00000546 <spi_master_init>:
	loop_until_bit_is_set(SPSR, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
 546:	24 98       	cbi	0x04, 4	; 4
 548:	84 b1       	in	r24, 0x04	; 4
 54a:	88 62       	ori	r24, 0x28	; 40
 54c:	84 b9       	out	0x04, r24	; 4
 54e:	80 e5       	ldi	r24, 0x50	; 80
 550:	8c bd       	out	0x2c, r24	; 44
 552:	8d b5       	in	r24, 0x2d	; 45
 554:	81 60       	ori	r24, 0x01	; 1
 556:	8d bd       	out	0x2d, r24	; 45
 558:	08 95       	ret

0000055a <spi_send>:
 55a:	8e bd       	out	0x2e, r24	; 46
 55c:	0d b4       	in	r0, 0x2d	; 45
 55e:	07 fe       	sbrs	r0, 7
 560:	fd cf       	rjmp	.-6      	; 0x55c <spi_send+0x2>
 562:	08 95       	ret

00000564 <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR = send_data;
 564:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
 566:	0d b4       	in	r0, 0x2d	; 45
 568:	07 fe       	sbrs	r0, 7
 56a:	fd cf       	rjmp	.-6      	; 0x566 <spi_exchange+0x2>
	return SPDR;
 56c:	8e b5       	in	r24, 0x2e	; 46
}
 56e:	08 95       	ret

00000570 <uart_putchar>:
    stdout = &mystdout;
    stdin  = &mystdin; 
}

// Redirect stdout to UART
int uart_putchar(char c, FILE *stream) {
 570:	cf 93       	push	r28
 572:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 574:	8a 30       	cpi	r24, 0x0A	; 10
 576:	19 f4       	brne	.+6      	; 0x57e <uart_putchar+0xe>
		uart_putchar('\r', stream);
 578:	8d e0       	ldi	r24, 0x0D	; 13
 57a:	0e 94 b8 02 	call	0x570	; 0x570 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 57e:	e0 ec       	ldi	r30, 0xC0	; 192
 580:	f0 e0       	ldi	r31, 0x00	; 0
 582:	80 81       	ld	r24, Z
 584:	85 ff       	sbrs	r24, 5
 586:	fd cf       	rjmp	.-6      	; 0x582 <uart_putchar+0x12>
	UDR0 = c;
 588:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 58c:	80 e0       	ldi	r24, 0x00	; 0
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	cf 91       	pop	r28
 592:	08 95       	ret

00000594 <uart_getchar>:

// Redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
 594:	e0 ec       	ldi	r30, 0xC0	; 192
 596:	f0 e0       	ldi	r31, 0x00	; 0
 598:	80 81       	ld	r24, Z
 59a:	88 23       	and	r24, r24
 59c:	ec f7       	brge	.-6      	; 0x598 <uart_getchar+0x4>
	return UDR0;
 59e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	08 95       	ret

000005a6 <uart_init>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE); 
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

void uart_init(void)
{
    UBRR0H = MYUBRR >> 8;
 5a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = MYUBRR;
 5aa:	87 e6       	ldi	r24, 0x67	; 103
 5ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 5b0:	88 e1       	ldi	r24, 0x18	; 24
 5b2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    
    stdout = &mystdout;
 5b6:	e7 ec       	ldi	r30, 0xC7	; 199
 5b8:	f2 e0       	ldi	r31, 0x02	; 2
 5ba:	88 e1       	ldi	r24, 0x18	; 24
 5bc:	91 e0       	ldi	r25, 0x01	; 1
 5be:	93 83       	std	Z+3, r25	; 0x03
 5c0:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &mystdin; 
 5c2:	8a e0       	ldi	r24, 0x0A	; 10
 5c4:	91 e0       	ldi	r25, 0x01	; 1
 5c6:	91 83       	std	Z+1, r25	; 0x01
 5c8:	80 83       	st	Z, r24
 5ca:	08 95       	ret

000005cc <__vector_1>:
    }
}

//	Interrupt on IRQ pin
ISR(INT0_vect) 
{
 5cc:	1f 92       	push	r1
 5ce:	0f 92       	push	r0
 5d0:	0f b6       	in	r0, 0x3f	; 63
 5d2:	0f 92       	push	r0
 5d4:	11 24       	eor	r1, r1
 5d6:	8f 93       	push	r24
	message_received = true;
 5d8:	81 e0       	ldi	r24, 0x01	; 1
 5da:	80 93 c5 02 	sts	0x02C5, r24	; 0x8002c5 <message_received>
}
 5de:	8f 91       	pop	r24
 5e0:	0f 90       	pop	r0
 5e2:	0f be       	out	0x3f, r0	; 63
 5e4:	0f 90       	pop	r0
 5e6:	1f 90       	pop	r1
 5e8:	18 95       	reti

000005ea <print_config>:

void print_config(void)
{
 5ea:	cf 93       	push	r28
 5ec:	df 93       	push	r29
 5ee:	1f 92       	push	r1
 5f0:	cd b7       	in	r28, 0x3d	; 61
 5f2:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
 5f4:	8f e3       	ldi	r24, 0x3F	; 63
 5f6:	91 e0       	ldi	r25, 0x01	; 1
 5f8:	0e 94 13 04 	call	0x826	; 0x826 <puts>
	printf("-------------------------------------------\n");
 5fc:	8d e6       	ldi	r24, 0x6D	; 109
 5fe:	91 e0       	ldi	r25, 0x01	; 1
 600:	0e 94 13 04 	call	0x826	; 0x826 <puts>
	nrf24_read(CONFIG,&data,1);
 604:	41 e0       	ldi	r20, 0x01	; 1
 606:	50 e0       	ldi	r21, 0x00	; 0
 608:	be 01       	movw	r22, r28
 60a:	6f 5f       	subi	r22, 0xFF	; 255
 60c:	7f 4f       	sbci	r23, 0xFF	; 255
 60e:	80 e0       	ldi	r24, 0x00	; 0
 610:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("CONFIG		0x%x\n",data);
 614:	89 81       	ldd	r24, Y+1	; 0x01
 616:	1f 92       	push	r1
 618:	8f 93       	push	r24
 61a:	89 e9       	ldi	r24, 0x99	; 153
 61c:	91 e0       	ldi	r25, 0x01	; 1
 61e:	9f 93       	push	r25
 620:	8f 93       	push	r24
 622:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	nrf24_read(EN_AA,&data,1);
 626:	41 e0       	ldi	r20, 0x01	; 1
 628:	50 e0       	ldi	r21, 0x00	; 0
 62a:	be 01       	movw	r22, r28
 62c:	6f 5f       	subi	r22, 0xFF	; 255
 62e:	7f 4f       	sbci	r23, 0xFF	; 255
 630:	81 e0       	ldi	r24, 0x01	; 1
 632:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("EN_AA			0x%x\n",data);
 636:	89 81       	ldd	r24, Y+1	; 0x01
 638:	1f 92       	push	r1
 63a:	8f 93       	push	r24
 63c:	87 ea       	ldi	r24, 0xA7	; 167
 63e:	91 e0       	ldi	r25, 0x01	; 1
 640:	9f 93       	push	r25
 642:	8f 93       	push	r24
 644:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	nrf24_read(EN_RXADDR,&data,1);
 648:	41 e0       	ldi	r20, 0x01	; 1
 64a:	50 e0       	ldi	r21, 0x00	; 0
 64c:	be 01       	movw	r22, r28
 64e:	6f 5f       	subi	r22, 0xFF	; 255
 650:	7f 4f       	sbci	r23, 0xFF	; 255
 652:	82 e0       	ldi	r24, 0x02	; 2
 654:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("EN_RXADDR		0x%x\n",data);
 658:	89 81       	ldd	r24, Y+1	; 0x01
 65a:	1f 92       	push	r1
 65c:	8f 93       	push	r24
 65e:	85 eb       	ldi	r24, 0xB5	; 181
 660:	91 e0       	ldi	r25, 0x01	; 1
 662:	9f 93       	push	r25
 664:	8f 93       	push	r24
 666:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	nrf24_read(SETUP_RETR,&data,1);
 66a:	41 e0       	ldi	r20, 0x01	; 1
 66c:	50 e0       	ldi	r21, 0x00	; 0
 66e:	be 01       	movw	r22, r28
 670:	6f 5f       	subi	r22, 0xFF	; 255
 672:	7f 4f       	sbci	r23, 0xFF	; 255
 674:	84 e0       	ldi	r24, 0x04	; 4
 676:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("SETUP_RETR		0x%x\n",data);
 67a:	89 81       	ldd	r24, Y+1	; 0x01
 67c:	1f 92       	push	r1
 67e:	8f 93       	push	r24
 680:	86 ec       	ldi	r24, 0xC6	; 198
 682:	91 e0       	ldi	r25, 0x01	; 1
 684:	9f 93       	push	r25
 686:	8f 93       	push	r24
 688:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	nrf24_read(RF_CH,&data,1);
 68c:	41 e0       	ldi	r20, 0x01	; 1
 68e:	50 e0       	ldi	r21, 0x00	; 0
 690:	be 01       	movw	r22, r28
 692:	6f 5f       	subi	r22, 0xFF	; 255
 694:	7f 4f       	sbci	r23, 0xFF	; 255
 696:	85 e0       	ldi	r24, 0x05	; 5
 698:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("RF_CH			0x%x\n",data);
 69c:	89 81       	ldd	r24, Y+1	; 0x01
 69e:	1f 92       	push	r1
 6a0:	8f 93       	push	r24
 6a2:	88 ed       	ldi	r24, 0xD8	; 216
 6a4:	91 e0       	ldi	r25, 0x01	; 1
 6a6:	9f 93       	push	r25
 6a8:	8f 93       	push	r24
 6aa:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	nrf24_read(RF_SETUP,&data,1);
 6ae:	41 e0       	ldi	r20, 0x01	; 1
 6b0:	50 e0       	ldi	r21, 0x00	; 0
 6b2:	be 01       	movw	r22, r28
 6b4:	6f 5f       	subi	r22, 0xFF	; 255
 6b6:	7f 4f       	sbci	r23, 0xFF	; 255
 6b8:	86 e0       	ldi	r24, 0x06	; 6
 6ba:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("RF_SETUP		0x%x\n",data);
 6be:	89 81       	ldd	r24, Y+1	; 0x01
 6c0:	1f 92       	push	r1
 6c2:	8f 93       	push	r24
 6c4:	86 ee       	ldi	r24, 0xE6	; 230
 6c6:	91 e0       	ldi	r25, 0x01	; 1
 6c8:	9f 93       	push	r25
 6ca:	8f 93       	push	r24
 6cc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	nrf24_read(STATUS,&data,1);
 6d0:	41 e0       	ldi	r20, 0x01	; 1
 6d2:	50 e0       	ldi	r21, 0x00	; 0
 6d4:	be 01       	movw	r22, r28
 6d6:	6f 5f       	subi	r22, 0xFF	; 255
 6d8:	7f 4f       	sbci	r23, 0xFF	; 255
 6da:	87 e0       	ldi	r24, 0x07	; 7
 6dc:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("STATUS		0x%x\n",data);
 6e0:	89 81       	ldd	r24, Y+1	; 0x01
 6e2:	1f 92       	push	r1
 6e4:	8f 93       	push	r24
 6e6:	86 ef       	ldi	r24, 0xF6	; 246
 6e8:	91 e0       	ldi	r25, 0x01	; 1
 6ea:	9f 93       	push	r25
 6ec:	8f 93       	push	r24
 6ee:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	nrf24_read(FEATURE,&data,1);
 6f2:	41 e0       	ldi	r20, 0x01	; 1
 6f4:	50 e0       	ldi	r21, 0x00	; 0
 6f6:	be 01       	movw	r22, r28
 6f8:	6f 5f       	subi	r22, 0xFF	; 255
 6fa:	7f 4f       	sbci	r23, 0xFF	; 255
 6fc:	8d e1       	ldi	r24, 0x1D	; 29
 6fe:	0e 94 7b 00 	call	0xf6	; 0xf6 <nrf24_read>
	printf("FEATURE		0x%x\n",data);
 702:	89 81       	ldd	r24, Y+1	; 0x01
 704:	1f 92       	push	r1
 706:	8f 93       	push	r24
 708:	84 e0       	ldi	r24, 0x04	; 4
 70a:	92 e0       	ldi	r25, 0x02	; 2
 70c:	9f 93       	push	r25
 70e:	8f 93       	push	r24
 710:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	printf("-------------------------------------------\n\n");
 714:	0f b6       	in	r0, 0x3f	; 63
 716:	f8 94       	cli
 718:	de bf       	out	0x3e, r29	; 62
 71a:	0f be       	out	0x3f, r0	; 63
 71c:	cd bf       	out	0x3d, r28	; 61
 71e:	83 e1       	ldi	r24, 0x13	; 19
 720:	92 e0       	ldi	r25, 0x02	; 2
 722:	0e 94 13 04 	call	0x826	; 0x826 <puts>
}
 726:	0f 90       	pop	r0
 728:	df 91       	pop	r29
 72a:	cf 91       	pop	r28
 72c:	08 95       	ret

0000072e <main>:
//	Used in IRQ ISR
volatile bool message_received = false;
volatile bool status = false;

int main(void)
{	
 72e:	cf 93       	push	r28
 730:	df 93       	push	r29
 732:	cd b7       	in	r28, 0x3d	; 61
 734:	de b7       	in	r29, 0x3e	; 62
 736:	a0 97       	sbiw	r28, 0x20	; 32
 738:	0f b6       	in	r0, 0x3f	; 63
 73a:	f8 94       	cli
 73c:	de bf       	out	0x3e, r29	; 62
 73e:	0f be       	out	0x3f, r0	; 63
 740:	cd bf       	out	0x3d, r28	; 61
	//	Set cliche message to send (message cannot exceed 32 characters)
	char tx_message[32];				// Define string array
	strcpy(tx_message,"Hello from the Other Side!");	// Copy string into array
 742:	8b e1       	ldi	r24, 0x1B	; 27
 744:	e0 e4       	ldi	r30, 0x40	; 64
 746:	f2 e0       	ldi	r31, 0x02	; 2
 748:	de 01       	movw	r26, r28
 74a:	11 96       	adiw	r26, 0x01	; 1
 74c:	01 90       	ld	r0, Z+
 74e:	0d 92       	st	X+, r0
 750:	8a 95       	dec	r24
 752:	e1 f7       	brne	.-8      	; 0x74c <main+0x1e>
	
	//	Initialize UART
	uart_init();
 754:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <uart_init>
	
	//	Initialize nRF24L01+ and print configuration info
    nrf24_init();
 758:	0e 94 7e 00 	call	0xfc	; 0xfc <nrf24_init>
	print_config();
 75c:	0e 94 f5 02 	call	0x5ea	; 0x5ea <print_config>
	
	//	Start listening to incoming messages
	nrf24_start_listening();
 760:	0e 94 a3 01 	call	0x346	; 0x346 <nrf24_start_listening>
	status = nrf24_send_message(tx_message);
 764:	ce 01       	movw	r24, r28
 766:	01 96       	adiw	r24, 0x01	; 1
 768:	0e 94 ae 01 	call	0x35c	; 0x35c <nrf24_send_message>
 76c:	91 e0       	ldi	r25, 0x01	; 1
 76e:	81 11       	cpse	r24, r1
 770:	01 c0       	rjmp	.+2      	; 0x774 <main+0x46>
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	90 93 c4 02 	sts	0x02C4, r25	; 0x8002c4 <status>
	 if (status == true) printf("Connection Established\n");
 778:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <status>
 77c:	88 23       	and	r24, r24
 77e:	21 f0       	breq	.+8      	; 0x788 <main+0x5a>
 780:	8b e5       	ldi	r24, 0x5B	; 91
 782:	92 e0       	ldi	r25, 0x02	; 2
 784:	0e 94 13 04 	call	0x826	; 0x826 <puts>
    {
		if (message_received)
		{
			//	Message received, print it
			message_received = false;
			printf("Received Temperature: %s\n",nrf24_read_message());
 788:	02 e7       	ldi	r16, 0x72	; 114
 78a:	12 e0       	ldi	r17, 0x02	; 2
			//	Send message as response
			_delay_ms(500);
			// Perform ADC and store in tx_message
			status = nrf24_send_message(tx_message);
 78c:	ff 24       	eor	r15, r15
 78e:	f3 94       	inc	r15
	nrf24_start_listening();
	status = nrf24_send_message(tx_message);
	 if (status == true) printf("Connection Established\n");
    while (1) 
    {
		if (message_received)
 790:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <message_received>
 794:	88 23       	and	r24, r24
 796:	e1 f3       	breq	.-8      	; 0x790 <main+0x62>
		{
			//	Message received, print it
			message_received = false;
 798:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <message_received>
			printf("Received Temperature: %s\n",nrf24_read_message());
 79c:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <nrf24_read_message>
 7a0:	9f 93       	push	r25
 7a2:	8f 93       	push	r24
 7a4:	1f 93       	push	r17
 7a6:	0f 93       	push	r16
 7a8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7ac:	2f ef       	ldi	r18, 0xFF	; 255
 7ae:	89 e6       	ldi	r24, 0x69	; 105
 7b0:	98 e1       	ldi	r25, 0x18	; 24
 7b2:	21 50       	subi	r18, 0x01	; 1
 7b4:	80 40       	sbci	r24, 0x00	; 0
 7b6:	90 40       	sbci	r25, 0x00	; 0
 7b8:	e1 f7       	brne	.-8      	; 0x7b2 <main+0x84>
 7ba:	00 c0       	rjmp	.+0      	; 0x7bc <main+0x8e>
 7bc:	00 00       	nop
			//	Send message as response
			_delay_ms(500);
			// Perform ADC and store in tx_message
			status = nrf24_send_message(tx_message);
 7be:	ce 01       	movw	r24, r28
 7c0:	01 96       	adiw	r24, 0x01	; 1
 7c2:	0e 94 ae 01 	call	0x35c	; 0x35c <nrf24_send_message>
 7c6:	9f 2d       	mov	r25, r15
 7c8:	0f 90       	pop	r0
 7ca:	0f 90       	pop	r0
 7cc:	0f 90       	pop	r0
 7ce:	0f 90       	pop	r0
 7d0:	81 11       	cpse	r24, r1
 7d2:	01 c0       	rjmp	.+2      	; 0x7d6 <main+0xa8>
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	90 93 c4 02 	sts	0x02C4, r25	; 0x8002c4 <status>
			if (status == true) printf("Temperature Transmitted\n");
 7da:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <status>
 7de:	88 23       	and	r24, r24
 7e0:	b9 f2       	breq	.-82     	; 0x790 <main+0x62>
 7e2:	8c e8       	ldi	r24, 0x8C	; 140
 7e4:	92 e0       	ldi	r25, 0x02	; 2
 7e6:	0e 94 13 04 	call	0x826	; 0x826 <puts>
 7ea:	d2 cf       	rjmp	.-92     	; 0x790 <main+0x62>

000007ec <strcpy>:
 7ec:	fb 01       	movw	r30, r22
 7ee:	dc 01       	movw	r26, r24
 7f0:	01 90       	ld	r0, Z+
 7f2:	0d 92       	st	X+, r0
 7f4:	00 20       	and	r0, r0
 7f6:	e1 f7       	brne	.-8      	; 0x7f0 <strcpy+0x4>
 7f8:	08 95       	ret

000007fa <printf>:
 7fa:	a0 e0       	ldi	r26, 0x00	; 0
 7fc:	b0 e0       	ldi	r27, 0x00	; 0
 7fe:	e3 e0       	ldi	r30, 0x03	; 3
 800:	f4 e0       	ldi	r31, 0x04	; 4
 802:	0c 94 e4 06 	jmp	0xdc8	; 0xdc8 <__prologue_saves__+0x20>
 806:	ae 01       	movw	r20, r28
 808:	4b 5f       	subi	r20, 0xFB	; 251
 80a:	5f 4f       	sbci	r21, 0xFF	; 255
 80c:	fa 01       	movw	r30, r20
 80e:	61 91       	ld	r22, Z+
 810:	71 91       	ld	r23, Z+
 812:	af 01       	movw	r20, r30
 814:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <__iob+0x2>
 818:	90 91 ca 02 	lds	r25, 0x02CA	; 0x8002ca <__iob+0x3>
 81c:	0e 94 43 04 	call	0x886	; 0x886 <vfprintf>
 820:	e2 e0       	ldi	r30, 0x02	; 2
 822:	0c 94 00 07 	jmp	0xe00	; 0xe00 <__epilogue_restores__+0x20>

00000826 <puts>:
 826:	0f 93       	push	r16
 828:	1f 93       	push	r17
 82a:	cf 93       	push	r28
 82c:	df 93       	push	r29
 82e:	e0 91 c9 02 	lds	r30, 0x02C9	; 0x8002c9 <__iob+0x2>
 832:	f0 91 ca 02 	lds	r31, 0x02CA	; 0x8002ca <__iob+0x3>
 836:	23 81       	ldd	r18, Z+3	; 0x03
 838:	21 ff       	sbrs	r18, 1
 83a:	1b c0       	rjmp	.+54     	; 0x872 <puts+0x4c>
 83c:	8c 01       	movw	r16, r24
 83e:	d0 e0       	ldi	r29, 0x00	; 0
 840:	c0 e0       	ldi	r28, 0x00	; 0
 842:	f8 01       	movw	r30, r16
 844:	81 91       	ld	r24, Z+
 846:	8f 01       	movw	r16, r30
 848:	60 91 c9 02 	lds	r22, 0x02C9	; 0x8002c9 <__iob+0x2>
 84c:	70 91 ca 02 	lds	r23, 0x02CA	; 0x8002ca <__iob+0x3>
 850:	db 01       	movw	r26, r22
 852:	18 96       	adiw	r26, 0x08	; 8
 854:	ed 91       	ld	r30, X+
 856:	fc 91       	ld	r31, X
 858:	19 97       	sbiw	r26, 0x09	; 9
 85a:	88 23       	and	r24, r24
 85c:	31 f0       	breq	.+12     	; 0x86a <puts+0x44>
 85e:	09 95       	icall
 860:	89 2b       	or	r24, r25
 862:	79 f3       	breq	.-34     	; 0x842 <puts+0x1c>
 864:	df ef       	ldi	r29, 0xFF	; 255
 866:	cf ef       	ldi	r28, 0xFF	; 255
 868:	ec cf       	rjmp	.-40     	; 0x842 <puts+0x1c>
 86a:	8a e0       	ldi	r24, 0x0A	; 10
 86c:	09 95       	icall
 86e:	89 2b       	or	r24, r25
 870:	19 f0       	breq	.+6      	; 0x878 <puts+0x52>
 872:	8f ef       	ldi	r24, 0xFF	; 255
 874:	9f ef       	ldi	r25, 0xFF	; 255
 876:	02 c0       	rjmp	.+4      	; 0x87c <puts+0x56>
 878:	8d 2f       	mov	r24, r29
 87a:	9c 2f       	mov	r25, r28
 87c:	df 91       	pop	r29
 87e:	cf 91       	pop	r28
 880:	1f 91       	pop	r17
 882:	0f 91       	pop	r16
 884:	08 95       	ret

00000886 <vfprintf>:
 886:	ab e0       	ldi	r26, 0x0B	; 11
 888:	b0 e0       	ldi	r27, 0x00	; 0
 88a:	e9 e4       	ldi	r30, 0x49	; 73
 88c:	f4 e0       	ldi	r31, 0x04	; 4
 88e:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <__prologue_saves__>
 892:	6c 01       	movw	r12, r24
 894:	7b 01       	movw	r14, r22
 896:	8a 01       	movw	r16, r20
 898:	fc 01       	movw	r30, r24
 89a:	17 82       	std	Z+7, r1	; 0x07
 89c:	16 82       	std	Z+6, r1	; 0x06
 89e:	83 81       	ldd	r24, Z+3	; 0x03
 8a0:	81 ff       	sbrs	r24, 1
 8a2:	cc c1       	rjmp	.+920    	; 0xc3c <__stack+0x33d>
 8a4:	ce 01       	movw	r24, r28
 8a6:	01 96       	adiw	r24, 0x01	; 1
 8a8:	3c 01       	movw	r6, r24
 8aa:	f6 01       	movw	r30, r12
 8ac:	93 81       	ldd	r25, Z+3	; 0x03
 8ae:	f7 01       	movw	r30, r14
 8b0:	93 fd       	sbrc	r25, 3
 8b2:	85 91       	lpm	r24, Z+
 8b4:	93 ff       	sbrs	r25, 3
 8b6:	81 91       	ld	r24, Z+
 8b8:	7f 01       	movw	r14, r30
 8ba:	88 23       	and	r24, r24
 8bc:	09 f4       	brne	.+2      	; 0x8c0 <vfprintf+0x3a>
 8be:	ba c1       	rjmp	.+884    	; 0xc34 <__stack+0x335>
 8c0:	85 32       	cpi	r24, 0x25	; 37
 8c2:	39 f4       	brne	.+14     	; 0x8d2 <vfprintf+0x4c>
 8c4:	93 fd       	sbrc	r25, 3
 8c6:	85 91       	lpm	r24, Z+
 8c8:	93 ff       	sbrs	r25, 3
 8ca:	81 91       	ld	r24, Z+
 8cc:	7f 01       	movw	r14, r30
 8ce:	85 32       	cpi	r24, 0x25	; 37
 8d0:	29 f4       	brne	.+10     	; 0x8dc <vfprintf+0x56>
 8d2:	b6 01       	movw	r22, r12
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 8da:	e7 cf       	rjmp	.-50     	; 0x8aa <vfprintf+0x24>
 8dc:	91 2c       	mov	r9, r1
 8de:	21 2c       	mov	r2, r1
 8e0:	31 2c       	mov	r3, r1
 8e2:	ff e1       	ldi	r31, 0x1F	; 31
 8e4:	f3 15       	cp	r31, r3
 8e6:	d8 f0       	brcs	.+54     	; 0x91e <__stack+0x1f>
 8e8:	8b 32       	cpi	r24, 0x2B	; 43
 8ea:	79 f0       	breq	.+30     	; 0x90a <__stack+0xb>
 8ec:	38 f4       	brcc	.+14     	; 0x8fc <vfprintf+0x76>
 8ee:	80 32       	cpi	r24, 0x20	; 32
 8f0:	79 f0       	breq	.+30     	; 0x910 <__stack+0x11>
 8f2:	83 32       	cpi	r24, 0x23	; 35
 8f4:	a1 f4       	brne	.+40     	; 0x91e <__stack+0x1f>
 8f6:	23 2d       	mov	r18, r3
 8f8:	20 61       	ori	r18, 0x10	; 16
 8fa:	1d c0       	rjmp	.+58     	; 0x936 <__stack+0x37>
 8fc:	8d 32       	cpi	r24, 0x2D	; 45
 8fe:	61 f0       	breq	.+24     	; 0x918 <__stack+0x19>
 900:	80 33       	cpi	r24, 0x30	; 48
 902:	69 f4       	brne	.+26     	; 0x91e <__stack+0x1f>
 904:	23 2d       	mov	r18, r3
 906:	21 60       	ori	r18, 0x01	; 1
 908:	16 c0       	rjmp	.+44     	; 0x936 <__stack+0x37>
 90a:	83 2d       	mov	r24, r3
 90c:	82 60       	ori	r24, 0x02	; 2
 90e:	38 2e       	mov	r3, r24
 910:	e3 2d       	mov	r30, r3
 912:	e4 60       	ori	r30, 0x04	; 4
 914:	3e 2e       	mov	r3, r30
 916:	2a c0       	rjmp	.+84     	; 0x96c <__stack+0x6d>
 918:	f3 2d       	mov	r31, r3
 91a:	f8 60       	ori	r31, 0x08	; 8
 91c:	1d c0       	rjmp	.+58     	; 0x958 <__stack+0x59>
 91e:	37 fc       	sbrc	r3, 7
 920:	2d c0       	rjmp	.+90     	; 0x97c <__stack+0x7d>
 922:	20 ed       	ldi	r18, 0xD0	; 208
 924:	28 0f       	add	r18, r24
 926:	2a 30       	cpi	r18, 0x0A	; 10
 928:	40 f0       	brcs	.+16     	; 0x93a <__stack+0x3b>
 92a:	8e 32       	cpi	r24, 0x2E	; 46
 92c:	b9 f4       	brne	.+46     	; 0x95c <__stack+0x5d>
 92e:	36 fc       	sbrc	r3, 6
 930:	81 c1       	rjmp	.+770    	; 0xc34 <__stack+0x335>
 932:	23 2d       	mov	r18, r3
 934:	20 64       	ori	r18, 0x40	; 64
 936:	32 2e       	mov	r3, r18
 938:	19 c0       	rjmp	.+50     	; 0x96c <__stack+0x6d>
 93a:	36 fe       	sbrs	r3, 6
 93c:	06 c0       	rjmp	.+12     	; 0x94a <__stack+0x4b>
 93e:	8a e0       	ldi	r24, 0x0A	; 10
 940:	98 9e       	mul	r9, r24
 942:	20 0d       	add	r18, r0
 944:	11 24       	eor	r1, r1
 946:	92 2e       	mov	r9, r18
 948:	11 c0       	rjmp	.+34     	; 0x96c <__stack+0x6d>
 94a:	ea e0       	ldi	r30, 0x0A	; 10
 94c:	2e 9e       	mul	r2, r30
 94e:	20 0d       	add	r18, r0
 950:	11 24       	eor	r1, r1
 952:	22 2e       	mov	r2, r18
 954:	f3 2d       	mov	r31, r3
 956:	f0 62       	ori	r31, 0x20	; 32
 958:	3f 2e       	mov	r3, r31
 95a:	08 c0       	rjmp	.+16     	; 0x96c <__stack+0x6d>
 95c:	8c 36       	cpi	r24, 0x6C	; 108
 95e:	21 f4       	brne	.+8      	; 0x968 <__stack+0x69>
 960:	83 2d       	mov	r24, r3
 962:	80 68       	ori	r24, 0x80	; 128
 964:	38 2e       	mov	r3, r24
 966:	02 c0       	rjmp	.+4      	; 0x96c <__stack+0x6d>
 968:	88 36       	cpi	r24, 0x68	; 104
 96a:	41 f4       	brne	.+16     	; 0x97c <__stack+0x7d>
 96c:	f7 01       	movw	r30, r14
 96e:	93 fd       	sbrc	r25, 3
 970:	85 91       	lpm	r24, Z+
 972:	93 ff       	sbrs	r25, 3
 974:	81 91       	ld	r24, Z+
 976:	7f 01       	movw	r14, r30
 978:	81 11       	cpse	r24, r1
 97a:	b3 cf       	rjmp	.-154    	; 0x8e2 <vfprintf+0x5c>
 97c:	98 2f       	mov	r25, r24
 97e:	9f 7d       	andi	r25, 0xDF	; 223
 980:	95 54       	subi	r25, 0x45	; 69
 982:	93 30       	cpi	r25, 0x03	; 3
 984:	28 f4       	brcc	.+10     	; 0x990 <__stack+0x91>
 986:	0c 5f       	subi	r16, 0xFC	; 252
 988:	1f 4f       	sbci	r17, 0xFF	; 255
 98a:	9f e3       	ldi	r25, 0x3F	; 63
 98c:	99 83       	std	Y+1, r25	; 0x01
 98e:	0d c0       	rjmp	.+26     	; 0x9aa <__stack+0xab>
 990:	83 36       	cpi	r24, 0x63	; 99
 992:	31 f0       	breq	.+12     	; 0x9a0 <__stack+0xa1>
 994:	83 37       	cpi	r24, 0x73	; 115
 996:	71 f0       	breq	.+28     	; 0x9b4 <__stack+0xb5>
 998:	83 35       	cpi	r24, 0x53	; 83
 99a:	09 f0       	breq	.+2      	; 0x99e <__stack+0x9f>
 99c:	59 c0       	rjmp	.+178    	; 0xa50 <__stack+0x151>
 99e:	21 c0       	rjmp	.+66     	; 0x9e2 <__stack+0xe3>
 9a0:	f8 01       	movw	r30, r16
 9a2:	80 81       	ld	r24, Z
 9a4:	89 83       	std	Y+1, r24	; 0x01
 9a6:	0e 5f       	subi	r16, 0xFE	; 254
 9a8:	1f 4f       	sbci	r17, 0xFF	; 255
 9aa:	88 24       	eor	r8, r8
 9ac:	83 94       	inc	r8
 9ae:	91 2c       	mov	r9, r1
 9b0:	53 01       	movw	r10, r6
 9b2:	13 c0       	rjmp	.+38     	; 0x9da <__stack+0xdb>
 9b4:	28 01       	movw	r4, r16
 9b6:	f2 e0       	ldi	r31, 0x02	; 2
 9b8:	4f 0e       	add	r4, r31
 9ba:	51 1c       	adc	r5, r1
 9bc:	f8 01       	movw	r30, r16
 9be:	a0 80       	ld	r10, Z
 9c0:	b1 80       	ldd	r11, Z+1	; 0x01
 9c2:	36 fe       	sbrs	r3, 6
 9c4:	03 c0       	rjmp	.+6      	; 0x9cc <__stack+0xcd>
 9c6:	69 2d       	mov	r22, r9
 9c8:	70 e0       	ldi	r23, 0x00	; 0
 9ca:	02 c0       	rjmp	.+4      	; 0x9d0 <__stack+0xd1>
 9cc:	6f ef       	ldi	r22, 0xFF	; 255
 9ce:	7f ef       	ldi	r23, 0xFF	; 255
 9d0:	c5 01       	movw	r24, r10
 9d2:	0e 94 2f 06 	call	0xc5e	; 0xc5e <strnlen>
 9d6:	4c 01       	movw	r8, r24
 9d8:	82 01       	movw	r16, r4
 9da:	f3 2d       	mov	r31, r3
 9dc:	ff 77       	andi	r31, 0x7F	; 127
 9de:	3f 2e       	mov	r3, r31
 9e0:	16 c0       	rjmp	.+44     	; 0xa0e <__stack+0x10f>
 9e2:	28 01       	movw	r4, r16
 9e4:	22 e0       	ldi	r18, 0x02	; 2
 9e6:	42 0e       	add	r4, r18
 9e8:	51 1c       	adc	r5, r1
 9ea:	f8 01       	movw	r30, r16
 9ec:	a0 80       	ld	r10, Z
 9ee:	b1 80       	ldd	r11, Z+1	; 0x01
 9f0:	36 fe       	sbrs	r3, 6
 9f2:	03 c0       	rjmp	.+6      	; 0x9fa <__stack+0xfb>
 9f4:	69 2d       	mov	r22, r9
 9f6:	70 e0       	ldi	r23, 0x00	; 0
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <__stack+0xff>
 9fa:	6f ef       	ldi	r22, 0xFF	; 255
 9fc:	7f ef       	ldi	r23, 0xFF	; 255
 9fe:	c5 01       	movw	r24, r10
 a00:	0e 94 24 06 	call	0xc48	; 0xc48 <strnlen_P>
 a04:	4c 01       	movw	r8, r24
 a06:	f3 2d       	mov	r31, r3
 a08:	f0 68       	ori	r31, 0x80	; 128
 a0a:	3f 2e       	mov	r3, r31
 a0c:	82 01       	movw	r16, r4
 a0e:	33 fc       	sbrc	r3, 3
 a10:	1b c0       	rjmp	.+54     	; 0xa48 <__stack+0x149>
 a12:	82 2d       	mov	r24, r2
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	88 16       	cp	r8, r24
 a18:	99 06       	cpc	r9, r25
 a1a:	b0 f4       	brcc	.+44     	; 0xa48 <__stack+0x149>
 a1c:	b6 01       	movw	r22, r12
 a1e:	80 e2       	ldi	r24, 0x20	; 32
 a20:	90 e0       	ldi	r25, 0x00	; 0
 a22:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 a26:	2a 94       	dec	r2
 a28:	f4 cf       	rjmp	.-24     	; 0xa12 <__stack+0x113>
 a2a:	f5 01       	movw	r30, r10
 a2c:	37 fc       	sbrc	r3, 7
 a2e:	85 91       	lpm	r24, Z+
 a30:	37 fe       	sbrs	r3, 7
 a32:	81 91       	ld	r24, Z+
 a34:	5f 01       	movw	r10, r30
 a36:	b6 01       	movw	r22, r12
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 a3e:	21 10       	cpse	r2, r1
 a40:	2a 94       	dec	r2
 a42:	21 e0       	ldi	r18, 0x01	; 1
 a44:	82 1a       	sub	r8, r18
 a46:	91 08       	sbc	r9, r1
 a48:	81 14       	cp	r8, r1
 a4a:	91 04       	cpc	r9, r1
 a4c:	71 f7       	brne	.-36     	; 0xa2a <__stack+0x12b>
 a4e:	e8 c0       	rjmp	.+464    	; 0xc20 <__stack+0x321>
 a50:	84 36       	cpi	r24, 0x64	; 100
 a52:	11 f0       	breq	.+4      	; 0xa58 <__stack+0x159>
 a54:	89 36       	cpi	r24, 0x69	; 105
 a56:	41 f5       	brne	.+80     	; 0xaa8 <__stack+0x1a9>
 a58:	f8 01       	movw	r30, r16
 a5a:	37 fe       	sbrs	r3, 7
 a5c:	07 c0       	rjmp	.+14     	; 0xa6c <__stack+0x16d>
 a5e:	60 81       	ld	r22, Z
 a60:	71 81       	ldd	r23, Z+1	; 0x01
 a62:	82 81       	ldd	r24, Z+2	; 0x02
 a64:	93 81       	ldd	r25, Z+3	; 0x03
 a66:	0c 5f       	subi	r16, 0xFC	; 252
 a68:	1f 4f       	sbci	r17, 0xFF	; 255
 a6a:	08 c0       	rjmp	.+16     	; 0xa7c <__stack+0x17d>
 a6c:	60 81       	ld	r22, Z
 a6e:	71 81       	ldd	r23, Z+1	; 0x01
 a70:	07 2e       	mov	r0, r23
 a72:	00 0c       	add	r0, r0
 a74:	88 0b       	sbc	r24, r24
 a76:	99 0b       	sbc	r25, r25
 a78:	0e 5f       	subi	r16, 0xFE	; 254
 a7a:	1f 4f       	sbci	r17, 0xFF	; 255
 a7c:	f3 2d       	mov	r31, r3
 a7e:	ff 76       	andi	r31, 0x6F	; 111
 a80:	3f 2e       	mov	r3, r31
 a82:	97 ff       	sbrs	r25, 7
 a84:	09 c0       	rjmp	.+18     	; 0xa98 <__stack+0x199>
 a86:	90 95       	com	r25
 a88:	80 95       	com	r24
 a8a:	70 95       	com	r23
 a8c:	61 95       	neg	r22
 a8e:	7f 4f       	sbci	r23, 0xFF	; 255
 a90:	8f 4f       	sbci	r24, 0xFF	; 255
 a92:	9f 4f       	sbci	r25, 0xFF	; 255
 a94:	f0 68       	ori	r31, 0x80	; 128
 a96:	3f 2e       	mov	r3, r31
 a98:	2a e0       	ldi	r18, 0x0A	; 10
 a9a:	30 e0       	ldi	r19, 0x00	; 0
 a9c:	a3 01       	movw	r20, r6
 a9e:	0e 94 76 06 	call	0xcec	; 0xcec <__ultoa_invert>
 aa2:	88 2e       	mov	r8, r24
 aa4:	86 18       	sub	r8, r6
 aa6:	45 c0       	rjmp	.+138    	; 0xb32 <__stack+0x233>
 aa8:	85 37       	cpi	r24, 0x75	; 117
 aaa:	31 f4       	brne	.+12     	; 0xab8 <__stack+0x1b9>
 aac:	23 2d       	mov	r18, r3
 aae:	2f 7e       	andi	r18, 0xEF	; 239
 ab0:	b2 2e       	mov	r11, r18
 ab2:	2a e0       	ldi	r18, 0x0A	; 10
 ab4:	30 e0       	ldi	r19, 0x00	; 0
 ab6:	25 c0       	rjmp	.+74     	; 0xb02 <__stack+0x203>
 ab8:	93 2d       	mov	r25, r3
 aba:	99 7f       	andi	r25, 0xF9	; 249
 abc:	b9 2e       	mov	r11, r25
 abe:	8f 36       	cpi	r24, 0x6F	; 111
 ac0:	c1 f0       	breq	.+48     	; 0xaf2 <__stack+0x1f3>
 ac2:	18 f4       	brcc	.+6      	; 0xaca <__stack+0x1cb>
 ac4:	88 35       	cpi	r24, 0x58	; 88
 ac6:	79 f0       	breq	.+30     	; 0xae6 <__stack+0x1e7>
 ac8:	b5 c0       	rjmp	.+362    	; 0xc34 <__stack+0x335>
 aca:	80 37       	cpi	r24, 0x70	; 112
 acc:	19 f0       	breq	.+6      	; 0xad4 <__stack+0x1d5>
 ace:	88 37       	cpi	r24, 0x78	; 120
 ad0:	21 f0       	breq	.+8      	; 0xada <__stack+0x1db>
 ad2:	b0 c0       	rjmp	.+352    	; 0xc34 <__stack+0x335>
 ad4:	e9 2f       	mov	r30, r25
 ad6:	e0 61       	ori	r30, 0x10	; 16
 ad8:	be 2e       	mov	r11, r30
 ada:	b4 fe       	sbrs	r11, 4
 adc:	0d c0       	rjmp	.+26     	; 0xaf8 <__stack+0x1f9>
 ade:	fb 2d       	mov	r31, r11
 ae0:	f4 60       	ori	r31, 0x04	; 4
 ae2:	bf 2e       	mov	r11, r31
 ae4:	09 c0       	rjmp	.+18     	; 0xaf8 <__stack+0x1f9>
 ae6:	34 fe       	sbrs	r3, 4
 ae8:	0a c0       	rjmp	.+20     	; 0xafe <__stack+0x1ff>
 aea:	29 2f       	mov	r18, r25
 aec:	26 60       	ori	r18, 0x06	; 6
 aee:	b2 2e       	mov	r11, r18
 af0:	06 c0       	rjmp	.+12     	; 0xafe <__stack+0x1ff>
 af2:	28 e0       	ldi	r18, 0x08	; 8
 af4:	30 e0       	ldi	r19, 0x00	; 0
 af6:	05 c0       	rjmp	.+10     	; 0xb02 <__stack+0x203>
 af8:	20 e1       	ldi	r18, 0x10	; 16
 afa:	30 e0       	ldi	r19, 0x00	; 0
 afc:	02 c0       	rjmp	.+4      	; 0xb02 <__stack+0x203>
 afe:	20 e1       	ldi	r18, 0x10	; 16
 b00:	32 e0       	ldi	r19, 0x02	; 2
 b02:	f8 01       	movw	r30, r16
 b04:	b7 fe       	sbrs	r11, 7
 b06:	07 c0       	rjmp	.+14     	; 0xb16 <__stack+0x217>
 b08:	60 81       	ld	r22, Z
 b0a:	71 81       	ldd	r23, Z+1	; 0x01
 b0c:	82 81       	ldd	r24, Z+2	; 0x02
 b0e:	93 81       	ldd	r25, Z+3	; 0x03
 b10:	0c 5f       	subi	r16, 0xFC	; 252
 b12:	1f 4f       	sbci	r17, 0xFF	; 255
 b14:	06 c0       	rjmp	.+12     	; 0xb22 <__stack+0x223>
 b16:	60 81       	ld	r22, Z
 b18:	71 81       	ldd	r23, Z+1	; 0x01
 b1a:	80 e0       	ldi	r24, 0x00	; 0
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	0e 5f       	subi	r16, 0xFE	; 254
 b20:	1f 4f       	sbci	r17, 0xFF	; 255
 b22:	a3 01       	movw	r20, r6
 b24:	0e 94 76 06 	call	0xcec	; 0xcec <__ultoa_invert>
 b28:	88 2e       	mov	r8, r24
 b2a:	86 18       	sub	r8, r6
 b2c:	fb 2d       	mov	r31, r11
 b2e:	ff 77       	andi	r31, 0x7F	; 127
 b30:	3f 2e       	mov	r3, r31
 b32:	36 fe       	sbrs	r3, 6
 b34:	0d c0       	rjmp	.+26     	; 0xb50 <__stack+0x251>
 b36:	23 2d       	mov	r18, r3
 b38:	2e 7f       	andi	r18, 0xFE	; 254
 b3a:	a2 2e       	mov	r10, r18
 b3c:	89 14       	cp	r8, r9
 b3e:	58 f4       	brcc	.+22     	; 0xb56 <__stack+0x257>
 b40:	34 fe       	sbrs	r3, 4
 b42:	0b c0       	rjmp	.+22     	; 0xb5a <__stack+0x25b>
 b44:	32 fc       	sbrc	r3, 2
 b46:	09 c0       	rjmp	.+18     	; 0xb5a <__stack+0x25b>
 b48:	83 2d       	mov	r24, r3
 b4a:	8e 7e       	andi	r24, 0xEE	; 238
 b4c:	a8 2e       	mov	r10, r24
 b4e:	05 c0       	rjmp	.+10     	; 0xb5a <__stack+0x25b>
 b50:	b8 2c       	mov	r11, r8
 b52:	a3 2c       	mov	r10, r3
 b54:	03 c0       	rjmp	.+6      	; 0xb5c <__stack+0x25d>
 b56:	b8 2c       	mov	r11, r8
 b58:	01 c0       	rjmp	.+2      	; 0xb5c <__stack+0x25d>
 b5a:	b9 2c       	mov	r11, r9
 b5c:	a4 fe       	sbrs	r10, 4
 b5e:	0f c0       	rjmp	.+30     	; 0xb7e <__stack+0x27f>
 b60:	fe 01       	movw	r30, r28
 b62:	e8 0d       	add	r30, r8
 b64:	f1 1d       	adc	r31, r1
 b66:	80 81       	ld	r24, Z
 b68:	80 33       	cpi	r24, 0x30	; 48
 b6a:	21 f4       	brne	.+8      	; 0xb74 <__stack+0x275>
 b6c:	9a 2d       	mov	r25, r10
 b6e:	99 7e       	andi	r25, 0xE9	; 233
 b70:	a9 2e       	mov	r10, r25
 b72:	09 c0       	rjmp	.+18     	; 0xb86 <__stack+0x287>
 b74:	a2 fe       	sbrs	r10, 2
 b76:	06 c0       	rjmp	.+12     	; 0xb84 <__stack+0x285>
 b78:	b3 94       	inc	r11
 b7a:	b3 94       	inc	r11
 b7c:	04 c0       	rjmp	.+8      	; 0xb86 <__stack+0x287>
 b7e:	8a 2d       	mov	r24, r10
 b80:	86 78       	andi	r24, 0x86	; 134
 b82:	09 f0       	breq	.+2      	; 0xb86 <__stack+0x287>
 b84:	b3 94       	inc	r11
 b86:	a3 fc       	sbrc	r10, 3
 b88:	11 c0       	rjmp	.+34     	; 0xbac <__stack+0x2ad>
 b8a:	a0 fe       	sbrs	r10, 0
 b8c:	06 c0       	rjmp	.+12     	; 0xb9a <__stack+0x29b>
 b8e:	b2 14       	cp	r11, r2
 b90:	88 f4       	brcc	.+34     	; 0xbb4 <__stack+0x2b5>
 b92:	28 0c       	add	r2, r8
 b94:	92 2c       	mov	r9, r2
 b96:	9b 18       	sub	r9, r11
 b98:	0e c0       	rjmp	.+28     	; 0xbb6 <__stack+0x2b7>
 b9a:	b2 14       	cp	r11, r2
 b9c:	60 f4       	brcc	.+24     	; 0xbb6 <__stack+0x2b7>
 b9e:	b6 01       	movw	r22, r12
 ba0:	80 e2       	ldi	r24, 0x20	; 32
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 ba8:	b3 94       	inc	r11
 baa:	f7 cf       	rjmp	.-18     	; 0xb9a <__stack+0x29b>
 bac:	b2 14       	cp	r11, r2
 bae:	18 f4       	brcc	.+6      	; 0xbb6 <__stack+0x2b7>
 bb0:	2b 18       	sub	r2, r11
 bb2:	02 c0       	rjmp	.+4      	; 0xbb8 <__stack+0x2b9>
 bb4:	98 2c       	mov	r9, r8
 bb6:	21 2c       	mov	r2, r1
 bb8:	a4 fe       	sbrs	r10, 4
 bba:	10 c0       	rjmp	.+32     	; 0xbdc <__stack+0x2dd>
 bbc:	b6 01       	movw	r22, r12
 bbe:	80 e3       	ldi	r24, 0x30	; 48
 bc0:	90 e0       	ldi	r25, 0x00	; 0
 bc2:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 bc6:	a2 fe       	sbrs	r10, 2
 bc8:	17 c0       	rjmp	.+46     	; 0xbf8 <__stack+0x2f9>
 bca:	a1 fc       	sbrc	r10, 1
 bcc:	03 c0       	rjmp	.+6      	; 0xbd4 <__stack+0x2d5>
 bce:	88 e7       	ldi	r24, 0x78	; 120
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <__stack+0x2d9>
 bd4:	88 e5       	ldi	r24, 0x58	; 88
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	b6 01       	movw	r22, r12
 bda:	0c c0       	rjmp	.+24     	; 0xbf4 <__stack+0x2f5>
 bdc:	8a 2d       	mov	r24, r10
 bde:	86 78       	andi	r24, 0x86	; 134
 be0:	59 f0       	breq	.+22     	; 0xbf8 <__stack+0x2f9>
 be2:	a1 fe       	sbrs	r10, 1
 be4:	02 c0       	rjmp	.+4      	; 0xbea <__stack+0x2eb>
 be6:	8b e2       	ldi	r24, 0x2B	; 43
 be8:	01 c0       	rjmp	.+2      	; 0xbec <__stack+0x2ed>
 bea:	80 e2       	ldi	r24, 0x20	; 32
 bec:	a7 fc       	sbrc	r10, 7
 bee:	8d e2       	ldi	r24, 0x2D	; 45
 bf0:	b6 01       	movw	r22, r12
 bf2:	90 e0       	ldi	r25, 0x00	; 0
 bf4:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 bf8:	89 14       	cp	r8, r9
 bfa:	38 f4       	brcc	.+14     	; 0xc0a <__stack+0x30b>
 bfc:	b6 01       	movw	r22, r12
 bfe:	80 e3       	ldi	r24, 0x30	; 48
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 c06:	9a 94       	dec	r9
 c08:	f7 cf       	rjmp	.-18     	; 0xbf8 <__stack+0x2f9>
 c0a:	8a 94       	dec	r8
 c0c:	f3 01       	movw	r30, r6
 c0e:	e8 0d       	add	r30, r8
 c10:	f1 1d       	adc	r31, r1
 c12:	80 81       	ld	r24, Z
 c14:	b6 01       	movw	r22, r12
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 c1c:	81 10       	cpse	r8, r1
 c1e:	f5 cf       	rjmp	.-22     	; 0xc0a <__stack+0x30b>
 c20:	22 20       	and	r2, r2
 c22:	09 f4       	brne	.+2      	; 0xc26 <__stack+0x327>
 c24:	42 ce       	rjmp	.-892    	; 0x8aa <vfprintf+0x24>
 c26:	b6 01       	movw	r22, r12
 c28:	80 e2       	ldi	r24, 0x20	; 32
 c2a:	90 e0       	ldi	r25, 0x00	; 0
 c2c:	0e 94 3a 06 	call	0xc74	; 0xc74 <fputc>
 c30:	2a 94       	dec	r2
 c32:	f6 cf       	rjmp	.-20     	; 0xc20 <__stack+0x321>
 c34:	f6 01       	movw	r30, r12
 c36:	86 81       	ldd	r24, Z+6	; 0x06
 c38:	97 81       	ldd	r25, Z+7	; 0x07
 c3a:	02 c0       	rjmp	.+4      	; 0xc40 <__stack+0x341>
 c3c:	8f ef       	ldi	r24, 0xFF	; 255
 c3e:	9f ef       	ldi	r25, 0xFF	; 255
 c40:	2b 96       	adiw	r28, 0x0b	; 11
 c42:	e2 e1       	ldi	r30, 0x12	; 18
 c44:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__epilogue_restores__>

00000c48 <strnlen_P>:
 c48:	fc 01       	movw	r30, r24
 c4a:	05 90       	lpm	r0, Z+
 c4c:	61 50       	subi	r22, 0x01	; 1
 c4e:	70 40       	sbci	r23, 0x00	; 0
 c50:	01 10       	cpse	r0, r1
 c52:	d8 f7       	brcc	.-10     	; 0xc4a <strnlen_P+0x2>
 c54:	80 95       	com	r24
 c56:	90 95       	com	r25
 c58:	8e 0f       	add	r24, r30
 c5a:	9f 1f       	adc	r25, r31
 c5c:	08 95       	ret

00000c5e <strnlen>:
 c5e:	fc 01       	movw	r30, r24
 c60:	61 50       	subi	r22, 0x01	; 1
 c62:	70 40       	sbci	r23, 0x00	; 0
 c64:	01 90       	ld	r0, Z+
 c66:	01 10       	cpse	r0, r1
 c68:	d8 f7       	brcc	.-10     	; 0xc60 <strnlen+0x2>
 c6a:	80 95       	com	r24
 c6c:	90 95       	com	r25
 c6e:	8e 0f       	add	r24, r30
 c70:	9f 1f       	adc	r25, r31
 c72:	08 95       	ret

00000c74 <fputc>:
 c74:	0f 93       	push	r16
 c76:	1f 93       	push	r17
 c78:	cf 93       	push	r28
 c7a:	df 93       	push	r29
 c7c:	fb 01       	movw	r30, r22
 c7e:	23 81       	ldd	r18, Z+3	; 0x03
 c80:	21 fd       	sbrc	r18, 1
 c82:	03 c0       	rjmp	.+6      	; 0xc8a <fputc+0x16>
 c84:	8f ef       	ldi	r24, 0xFF	; 255
 c86:	9f ef       	ldi	r25, 0xFF	; 255
 c88:	2c c0       	rjmp	.+88     	; 0xce2 <fputc+0x6e>
 c8a:	22 ff       	sbrs	r18, 2
 c8c:	16 c0       	rjmp	.+44     	; 0xcba <fputc+0x46>
 c8e:	46 81       	ldd	r20, Z+6	; 0x06
 c90:	57 81       	ldd	r21, Z+7	; 0x07
 c92:	24 81       	ldd	r18, Z+4	; 0x04
 c94:	35 81       	ldd	r19, Z+5	; 0x05
 c96:	42 17       	cp	r20, r18
 c98:	53 07       	cpc	r21, r19
 c9a:	44 f4       	brge	.+16     	; 0xcac <fputc+0x38>
 c9c:	a0 81       	ld	r26, Z
 c9e:	b1 81       	ldd	r27, Z+1	; 0x01
 ca0:	9d 01       	movw	r18, r26
 ca2:	2f 5f       	subi	r18, 0xFF	; 255
 ca4:	3f 4f       	sbci	r19, 0xFF	; 255
 ca6:	31 83       	std	Z+1, r19	; 0x01
 ca8:	20 83       	st	Z, r18
 caa:	8c 93       	st	X, r24
 cac:	26 81       	ldd	r18, Z+6	; 0x06
 cae:	37 81       	ldd	r19, Z+7	; 0x07
 cb0:	2f 5f       	subi	r18, 0xFF	; 255
 cb2:	3f 4f       	sbci	r19, 0xFF	; 255
 cb4:	37 83       	std	Z+7, r19	; 0x07
 cb6:	26 83       	std	Z+6, r18	; 0x06
 cb8:	14 c0       	rjmp	.+40     	; 0xce2 <fputc+0x6e>
 cba:	8b 01       	movw	r16, r22
 cbc:	ec 01       	movw	r28, r24
 cbe:	fb 01       	movw	r30, r22
 cc0:	00 84       	ldd	r0, Z+8	; 0x08
 cc2:	f1 85       	ldd	r31, Z+9	; 0x09
 cc4:	e0 2d       	mov	r30, r0
 cc6:	09 95       	icall
 cc8:	89 2b       	or	r24, r25
 cca:	e1 f6       	brne	.-72     	; 0xc84 <fputc+0x10>
 ccc:	d8 01       	movw	r26, r16
 cce:	16 96       	adiw	r26, 0x06	; 6
 cd0:	8d 91       	ld	r24, X+
 cd2:	9c 91       	ld	r25, X
 cd4:	17 97       	sbiw	r26, 0x07	; 7
 cd6:	01 96       	adiw	r24, 0x01	; 1
 cd8:	17 96       	adiw	r26, 0x07	; 7
 cda:	9c 93       	st	X, r25
 cdc:	8e 93       	st	-X, r24
 cde:	16 97       	sbiw	r26, 0x06	; 6
 ce0:	ce 01       	movw	r24, r28
 ce2:	df 91       	pop	r29
 ce4:	cf 91       	pop	r28
 ce6:	1f 91       	pop	r17
 ce8:	0f 91       	pop	r16
 cea:	08 95       	ret

00000cec <__ultoa_invert>:
 cec:	fa 01       	movw	r30, r20
 cee:	aa 27       	eor	r26, r26
 cf0:	28 30       	cpi	r18, 0x08	; 8
 cf2:	51 f1       	breq	.+84     	; 0xd48 <__ultoa_invert+0x5c>
 cf4:	20 31       	cpi	r18, 0x10	; 16
 cf6:	81 f1       	breq	.+96     	; 0xd58 <__ultoa_invert+0x6c>
 cf8:	e8 94       	clt
 cfa:	6f 93       	push	r22
 cfc:	6e 7f       	andi	r22, 0xFE	; 254
 cfe:	6e 5f       	subi	r22, 0xFE	; 254
 d00:	7f 4f       	sbci	r23, 0xFF	; 255
 d02:	8f 4f       	sbci	r24, 0xFF	; 255
 d04:	9f 4f       	sbci	r25, 0xFF	; 255
 d06:	af 4f       	sbci	r26, 0xFF	; 255
 d08:	b1 e0       	ldi	r27, 0x01	; 1
 d0a:	3e d0       	rcall	.+124    	; 0xd88 <__ultoa_invert+0x9c>
 d0c:	b4 e0       	ldi	r27, 0x04	; 4
 d0e:	3c d0       	rcall	.+120    	; 0xd88 <__ultoa_invert+0x9c>
 d10:	67 0f       	add	r22, r23
 d12:	78 1f       	adc	r23, r24
 d14:	89 1f       	adc	r24, r25
 d16:	9a 1f       	adc	r25, r26
 d18:	a1 1d       	adc	r26, r1
 d1a:	68 0f       	add	r22, r24
 d1c:	79 1f       	adc	r23, r25
 d1e:	8a 1f       	adc	r24, r26
 d20:	91 1d       	adc	r25, r1
 d22:	a1 1d       	adc	r26, r1
 d24:	6a 0f       	add	r22, r26
 d26:	71 1d       	adc	r23, r1
 d28:	81 1d       	adc	r24, r1
 d2a:	91 1d       	adc	r25, r1
 d2c:	a1 1d       	adc	r26, r1
 d2e:	20 d0       	rcall	.+64     	; 0xd70 <__ultoa_invert+0x84>
 d30:	09 f4       	brne	.+2      	; 0xd34 <__ultoa_invert+0x48>
 d32:	68 94       	set
 d34:	3f 91       	pop	r19
 d36:	2a e0       	ldi	r18, 0x0A	; 10
 d38:	26 9f       	mul	r18, r22
 d3a:	11 24       	eor	r1, r1
 d3c:	30 19       	sub	r19, r0
 d3e:	30 5d       	subi	r19, 0xD0	; 208
 d40:	31 93       	st	Z+, r19
 d42:	de f6       	brtc	.-74     	; 0xcfa <__ultoa_invert+0xe>
 d44:	cf 01       	movw	r24, r30
 d46:	08 95       	ret
 d48:	46 2f       	mov	r20, r22
 d4a:	47 70       	andi	r20, 0x07	; 7
 d4c:	40 5d       	subi	r20, 0xD0	; 208
 d4e:	41 93       	st	Z+, r20
 d50:	b3 e0       	ldi	r27, 0x03	; 3
 d52:	0f d0       	rcall	.+30     	; 0xd72 <__ultoa_invert+0x86>
 d54:	c9 f7       	brne	.-14     	; 0xd48 <__ultoa_invert+0x5c>
 d56:	f6 cf       	rjmp	.-20     	; 0xd44 <__ultoa_invert+0x58>
 d58:	46 2f       	mov	r20, r22
 d5a:	4f 70       	andi	r20, 0x0F	; 15
 d5c:	40 5d       	subi	r20, 0xD0	; 208
 d5e:	4a 33       	cpi	r20, 0x3A	; 58
 d60:	18 f0       	brcs	.+6      	; 0xd68 <__ultoa_invert+0x7c>
 d62:	49 5d       	subi	r20, 0xD9	; 217
 d64:	31 fd       	sbrc	r19, 1
 d66:	40 52       	subi	r20, 0x20	; 32
 d68:	41 93       	st	Z+, r20
 d6a:	02 d0       	rcall	.+4      	; 0xd70 <__ultoa_invert+0x84>
 d6c:	a9 f7       	brne	.-22     	; 0xd58 <__ultoa_invert+0x6c>
 d6e:	ea cf       	rjmp	.-44     	; 0xd44 <__ultoa_invert+0x58>
 d70:	b4 e0       	ldi	r27, 0x04	; 4
 d72:	a6 95       	lsr	r26
 d74:	97 95       	ror	r25
 d76:	87 95       	ror	r24
 d78:	77 95       	ror	r23
 d7a:	67 95       	ror	r22
 d7c:	ba 95       	dec	r27
 d7e:	c9 f7       	brne	.-14     	; 0xd72 <__ultoa_invert+0x86>
 d80:	00 97       	sbiw	r24, 0x00	; 0
 d82:	61 05       	cpc	r22, r1
 d84:	71 05       	cpc	r23, r1
 d86:	08 95       	ret
 d88:	9b 01       	movw	r18, r22
 d8a:	ac 01       	movw	r20, r24
 d8c:	0a 2e       	mov	r0, r26
 d8e:	06 94       	lsr	r0
 d90:	57 95       	ror	r21
 d92:	47 95       	ror	r20
 d94:	37 95       	ror	r19
 d96:	27 95       	ror	r18
 d98:	ba 95       	dec	r27
 d9a:	c9 f7       	brne	.-14     	; 0xd8e <__ultoa_invert+0xa2>
 d9c:	62 0f       	add	r22, r18
 d9e:	73 1f       	adc	r23, r19
 da0:	84 1f       	adc	r24, r20
 da2:	95 1f       	adc	r25, r21
 da4:	a0 1d       	adc	r26, r0
 da6:	08 95       	ret

00000da8 <__prologue_saves__>:
 da8:	2f 92       	push	r2
 daa:	3f 92       	push	r3
 dac:	4f 92       	push	r4
 dae:	5f 92       	push	r5
 db0:	6f 92       	push	r6
 db2:	7f 92       	push	r7
 db4:	8f 92       	push	r8
 db6:	9f 92       	push	r9
 db8:	af 92       	push	r10
 dba:	bf 92       	push	r11
 dbc:	cf 92       	push	r12
 dbe:	df 92       	push	r13
 dc0:	ef 92       	push	r14
 dc2:	ff 92       	push	r15
 dc4:	0f 93       	push	r16
 dc6:	1f 93       	push	r17
 dc8:	cf 93       	push	r28
 dca:	df 93       	push	r29
 dcc:	cd b7       	in	r28, 0x3d	; 61
 dce:	de b7       	in	r29, 0x3e	; 62
 dd0:	ca 1b       	sub	r28, r26
 dd2:	db 0b       	sbc	r29, r27
 dd4:	0f b6       	in	r0, 0x3f	; 63
 dd6:	f8 94       	cli
 dd8:	de bf       	out	0x3e, r29	; 62
 dda:	0f be       	out	0x3f, r0	; 63
 ddc:	cd bf       	out	0x3d, r28	; 61
 dde:	09 94       	ijmp

00000de0 <__epilogue_restores__>:
 de0:	2a 88       	ldd	r2, Y+18	; 0x12
 de2:	39 88       	ldd	r3, Y+17	; 0x11
 de4:	48 88       	ldd	r4, Y+16	; 0x10
 de6:	5f 84       	ldd	r5, Y+15	; 0x0f
 de8:	6e 84       	ldd	r6, Y+14	; 0x0e
 dea:	7d 84       	ldd	r7, Y+13	; 0x0d
 dec:	8c 84       	ldd	r8, Y+12	; 0x0c
 dee:	9b 84       	ldd	r9, Y+11	; 0x0b
 df0:	aa 84       	ldd	r10, Y+10	; 0x0a
 df2:	b9 84       	ldd	r11, Y+9	; 0x09
 df4:	c8 84       	ldd	r12, Y+8	; 0x08
 df6:	df 80       	ldd	r13, Y+7	; 0x07
 df8:	ee 80       	ldd	r14, Y+6	; 0x06
 dfa:	fd 80       	ldd	r15, Y+5	; 0x05
 dfc:	0c 81       	ldd	r16, Y+4	; 0x04
 dfe:	1b 81       	ldd	r17, Y+3	; 0x03
 e00:	aa 81       	ldd	r26, Y+2	; 0x02
 e02:	b9 81       	ldd	r27, Y+1	; 0x01
 e04:	ce 0f       	add	r28, r30
 e06:	d1 1d       	adc	r29, r1
 e08:	0f b6       	in	r0, 0x3f	; 63
 e0a:	f8 94       	cli
 e0c:	de bf       	out	0x3e, r29	; 62
 e0e:	0f be       	out	0x3f, r0	; 63
 e10:	cd bf       	out	0x3d, r28	; 61
 e12:	ed 01       	movw	r28, r26
 e14:	08 95       	ret

00000e16 <_exit>:
 e16:	f8 94       	cli

00000e18 <__stop_program>:
 e18:	ff cf       	rjmp	.-2      	; 0xe18 <__stop_program>
