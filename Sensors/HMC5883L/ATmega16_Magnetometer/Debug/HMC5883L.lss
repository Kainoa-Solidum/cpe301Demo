
HMC5883L.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  0000165a  000016ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000165a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000016fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000175c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  0000179c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cc0  00000000  00000000  00001834  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008cc  00000000  00000000  000024f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006f0  00000000  00000000  00002dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000017c  00000000  00000000  000034b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f5  00000000  00000000  0000362c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004b6  00000000  00000000  00003b21  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00003fd7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cc 00 	jmp	0x198	; 0x198 <__ctors_end>
       4:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
       8:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
       c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      10:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      14:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      18:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      1c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      20:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      24:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      28:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      2c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      30:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      34:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      38:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      3c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      40:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      44:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      48:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      4c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      50:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      54:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      58:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      5c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      60:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      64:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 00       	.word	0x003f	; ????

00000096 <__trampolines_end>:
      96:	6e 61       	ori	r22, 0x1E	; 30
      98:	6e 00       	.word	0x006e	; ????

0000009a <__c.2332>:
      9a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      aa:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      ba:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      ca:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      da:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      ea:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      fa:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     10a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     11a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     12a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     13a:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     14a:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     15a:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     16a:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     17a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     18a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000198 <__ctors_end>:
     198:	11 24       	eor	r1, r1
     19a:	1f be       	out	0x3f, r1	; 63
     19c:	cf ef       	ldi	r28, 0xFF	; 255
     19e:	d8 e0       	ldi	r29, 0x08	; 8
     1a0:	de bf       	out	0x3e, r29	; 62
     1a2:	cd bf       	out	0x3d, r28	; 61

000001a4 <__do_copy_data>:
     1a4:	11 e0       	ldi	r17, 0x01	; 1
     1a6:	a0 e0       	ldi	r26, 0x00	; 0
     1a8:	b1 e0       	ldi	r27, 0x01	; 1
     1aa:	ea e5       	ldi	r30, 0x5A	; 90
     1ac:	f6 e1       	ldi	r31, 0x16	; 22
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <__do_copy_data+0x10>
     1b0:	05 90       	lpm	r0, Z+
     1b2:	0d 92       	st	X+, r0
     1b4:	a0 33       	cpi	r26, 0x30	; 48
     1b6:	b1 07       	cpc	r27, r17
     1b8:	d9 f7       	brne	.-10     	; 0x1b0 <__do_copy_data+0xc>
     1ba:	0e 94 a2 01 	call	0x344	; 0x344 <main>
     1be:	0c 94 2b 0b 	jmp	0x1656	; 0x1656 <_exit>

000001c2 <__bad_interrupt>:
     1c2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c6 <Magneto_init>:
void USART_init( unsigned int ubrr );
void USART_tx_string( char *data );

void Magneto_init()										/* Magneto initialize function */
{
	I2C_Start(0x3C);									/* Start and write SLA+W */
     1c6:	8c e3       	ldi	r24, 0x3C	; 60
     1c8:	0e 94 f7 01 	call	0x3ee	; 0x3ee <I2C_Start>
	I2C_Write(0x00);									/* Write memory location address */
     1cc:	80 e0       	ldi	r24, 0x00	; 0
     1ce:	0e 94 88 02 	call	0x510	; 0x510 <I2C_Write>
	I2C_Write(0x70);									/* Configure register A as 8-average, 15 Hz default, normal measurement */
     1d2:	80 e7       	ldi	r24, 0x70	; 112
     1d4:	0e 94 88 02 	call	0x510	; 0x510 <I2C_Write>
	I2C_Write(0xA0);									/* Configure register B for gain */
     1d8:	80 ea       	ldi	r24, 0xA0	; 160
     1da:	0e 94 88 02 	call	0x510	; 0x510 <I2C_Write>
	I2C_Write(0x00);									/* Configure continuous measurement mode in mode register */
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	0e 94 88 02 	call	0x510	; 0x510 <I2C_Write>
	I2C_Stop();											/* Stop I2C */
     1e4:	0e 94 43 02 	call	0x486	; 0x486 <I2C_Stop>
     1e8:	08 95       	ret

000001ea <Magneto_GetHeading>:
}

int Magneto_GetHeading()
{
     1ea:	8f 92       	push	r8
     1ec:	9f 92       	push	r9
     1ee:	af 92       	push	r10
     1f0:	bf 92       	push	r11
     1f2:	cf 92       	push	r12
     1f4:	df 92       	push	r13
     1f6:	ef 92       	push	r14
     1f8:	ff 92       	push	r15
     1fa:	1f 93       	push	r17
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
	int x, y, z;
	double Heading;
	I2C_Start_Wait(0x3C);								/* Start and wait for acknowledgment */
     200:	8c e3       	ldi	r24, 0x3C	; 60
     202:	0e 94 4c 02 	call	0x498	; 0x498 <I2C_Start_Wait>
	I2C_Write(0x03);									/* Write X register address */
     206:	83 e0       	ldi	r24, 0x03	; 3
     208:	0e 94 88 02 	call	0x510	; 0x510 <I2C_Write>
	I2C_Repeated_Start(0x3D);							/* Generate repeat start condition with SLA+R */
     20c:	8d e3       	ldi	r24, 0x3D	; 61
     20e:	0e 94 1d 02 	call	0x43a	; 0x43a <I2C_Repeated_Start>
	/* Read 16 bit x,y,z value (2’s complement form) */
	x = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     212:	0e 94 9f 02 	call	0x53e	; 0x53e <I2C_Read_Ack>
     216:	c8 2f       	mov	r28, r24
     218:	0e 94 9f 02 	call	0x53e	; 0x53e <I2C_Read_Ack>
     21c:	6c 2f       	mov	r22, r28
     21e:	70 e0       	ldi	r23, 0x00	; 0
     220:	76 2f       	mov	r23, r22
     222:	66 27       	eor	r22, r22
     224:	eb 01       	movw	r28, r22
     226:	c8 2b       	or	r28, r24
	z = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     228:	0e 94 9f 02 	call	0x53e	; 0x53e <I2C_Read_Ack>
     22c:	0e 94 9f 02 	call	0x53e	; 0x53e <I2C_Read_Ack>
	y = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Nack());
     230:	0e 94 9f 02 	call	0x53e	; 0x53e <I2C_Read_Ack>
     234:	18 2f       	mov	r17, r24
     236:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_Read_Nack>
     23a:	61 2f       	mov	r22, r17
     23c:	70 e0       	ldi	r23, 0x00	; 0
     23e:	76 2f       	mov	r23, r22
     240:	66 27       	eor	r22, r22
     242:	7b 01       	movw	r14, r22
     244:	e8 2a       	or	r14, r24
	I2C_Stop();											/* Stop I2C */
     246:	0e 94 43 02 	call	0x486	; 0x486 <I2C_Stop>
	Heading = atan2((double)y,(double)x) + Declination;
     24a:	be 01       	movw	r22, r28
     24c:	dd 0f       	add	r29, r29
     24e:	88 0b       	sbc	r24, r24
     250:	99 0b       	sbc	r25, r25
     252:	0e 94 43 04 	call	0x886	; 0x886 <__floatsisf>
     256:	4b 01       	movw	r8, r22
     258:	5c 01       	movw	r10, r24
     25a:	b7 01       	movw	r22, r14
     25c:	ff 0c       	add	r15, r15
     25e:	88 0b       	sbc	r24, r24
     260:	99 0b       	sbc	r25, r25
     262:	0e 94 43 04 	call	0x886	; 0x886 <__floatsisf>
     266:	a5 01       	movw	r20, r10
     268:	94 01       	movw	r18, r8
     26a:	0e 94 35 03 	call	0x66a	; 0x66a <atan2>
     26e:	2a ec       	ldi	r18, 0xCA	; 202
     270:	37 e3       	ldi	r19, 0x37	; 55
     272:	4b ed       	ldi	r20, 0xDB	; 219
     274:	5b e3       	ldi	r21, 0x3B	; 59
     276:	0e 94 b5 02 	call	0x56a	; 0x56a <__subsf3>
     27a:	6b 01       	movw	r12, r22
     27c:	7c 01       	movw	r14, r24
	if (Heading>2*PI)									/* Due to declination check for >360 degree */
     27e:	2b ed       	ldi	r18, 0xDB	; 219
     280:	3f e0       	ldi	r19, 0x0F	; 15
     282:	49 ec       	ldi	r20, 0xC9	; 201
     284:	50 e4       	ldi	r21, 0x40	; 64
     286:	0e 94 1a 05 	call	0xa34	; 0xa34 <__gesf2>
     28a:	18 16       	cp	r1, r24
     28c:	54 f4       	brge	.+20     	; 0x2a2 <Magneto_GetHeading+0xb8>
		Heading = Heading - 2*PI;
     28e:	2b ed       	ldi	r18, 0xDB	; 219
     290:	3f e0       	ldi	r19, 0x0F	; 15
     292:	49 ec       	ldi	r20, 0xC9	; 201
     294:	50 e4       	ldi	r21, 0x40	; 64
     296:	c7 01       	movw	r24, r14
     298:	b6 01       	movw	r22, r12
     29a:	0e 94 b5 02 	call	0x56a	; 0x56a <__subsf3>
     29e:	6b 01       	movw	r12, r22
     2a0:	7c 01       	movw	r14, r24
	if (Heading<0)										/* Check for sign */
     2a2:	20 e0       	ldi	r18, 0x00	; 0
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	a9 01       	movw	r20, r18
     2a8:	c7 01       	movw	r24, r14
     2aa:	b6 01       	movw	r22, r12
     2ac:	0e 94 94 03 	call	0x728	; 0x728 <__cmpsf2>
     2b0:	88 23       	and	r24, r24
     2b2:	54 f4       	brge	.+20     	; 0x2c8 <Magneto_GetHeading+0xde>
		Heading = Heading + 2*PI;
     2b4:	2b ed       	ldi	r18, 0xDB	; 219
     2b6:	3f e0       	ldi	r19, 0x0F	; 15
     2b8:	49 ec       	ldi	r20, 0xC9	; 201
     2ba:	50 e4       	ldi	r21, 0x40	; 64
     2bc:	c7 01       	movw	r24, r14
     2be:	b6 01       	movw	r22, r12
     2c0:	0e 94 b6 02 	call	0x56c	; 0x56c <__addsf3>
     2c4:	6b 01       	movw	r12, r22
     2c6:	7c 01       	movw	r14, r24
	return (Heading* 180 / PI);							/* Convert into angle and return */
     2c8:	20 e0       	ldi	r18, 0x00	; 0
     2ca:	30 e0       	ldi	r19, 0x00	; 0
     2cc:	44 e3       	ldi	r20, 0x34	; 52
     2ce:	53 e4       	ldi	r21, 0x43	; 67
     2d0:	c7 01       	movw	r24, r14
     2d2:	b6 01       	movw	r22, r12
     2d4:	0e 94 27 05 	call	0xa4e	; 0xa4e <__mulsf3>
     2d8:	2b ed       	ldi	r18, 0xDB	; 219
     2da:	3f e0       	ldi	r19, 0x0F	; 15
     2dc:	49 e4       	ldi	r20, 0x49	; 73
     2de:	50 e4       	ldi	r21, 0x40	; 64
     2e0:	0e 94 99 03 	call	0x732	; 0x732 <__divsf3>
     2e4:	0e 94 0b 04 	call	0x816	; 0x816 <__fixsfsi>
}
     2e8:	cb 01       	movw	r24, r22
     2ea:	df 91       	pop	r29
     2ec:	cf 91       	pop	r28
     2ee:	1f 91       	pop	r17
     2f0:	ff 90       	pop	r15
     2f2:	ef 90       	pop	r14
     2f4:	df 90       	pop	r13
     2f6:	cf 90       	pop	r12
     2f8:	bf 90       	pop	r11
     2fa:	af 90       	pop	r10
     2fc:	9f 90       	pop	r9
     2fe:	8f 90       	pop	r8
     300:	08 95       	ret

00000302 <USART_init>:

/* INIT USART (RS-232)  */
void USART_init( unsigned int ubrr )
{
	UBRR0H = (unsigned char)(ubrr>>8);
     302:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
     306:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0);     // Enable RX, TX & RX interrupt
     30a:	88 e0       	ldi	r24, 0x08	; 8
     30c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (3 << UCSZ00);    //asynchronous 8 N 1
     310:	86 e0       	ldi	r24, 0x06	; 6
     312:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     316:	08 95       	ret

00000318 <USART_tx_string>:
}
/* SEND A STRING TO THE RS-232 */
void USART_tx_string( char *data )
{
     318:	cf 93       	push	r28
     31a:	df 93       	push	r29
	while ((*data != '\0'))
     31c:	fc 01       	movw	r30, r24
     31e:	20 81       	ld	r18, Z
     320:	22 23       	and	r18, r18
     322:	69 f0       	breq	.+26     	; 0x33e <USART_tx_string+0x26>
     324:	dc 01       	movw	r26, r24
     326:	11 96       	adiw	r26, 0x01	; 1
	{
		while (!(UCSR0A & (1 <<UDRE0)));
     328:	e0 ec       	ldi	r30, 0xC0	; 192
     32a:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
     32c:	c6 ec       	ldi	r28, 0xC6	; 198
     32e:	d0 e0       	ldi	r29, 0x00	; 0
/* SEND A STRING TO THE RS-232 */
void USART_tx_string( char *data )
{
	while ((*data != '\0'))
	{
		while (!(UCSR0A & (1 <<UDRE0)));
     330:	90 81       	ld	r25, Z
     332:	95 ff       	sbrs	r25, 5
     334:	fd cf       	rjmp	.-6      	; 0x330 <USART_tx_string+0x18>
		UDR0 = *data;
     336:	28 83       	st	Y, r18
	UCSR0C = (3 << UCSZ00);    //asynchronous 8 N 1
}
/* SEND A STRING TO THE RS-232 */
void USART_tx_string( char *data )
{
	while ((*data != '\0'))
     338:	2d 91       	ld	r18, X+
     33a:	21 11       	cpse	r18, r1
     33c:	f9 cf       	rjmp	.-14     	; 0x330 <USART_tx_string+0x18>
	{
		while (!(UCSR0A & (1 <<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
     33e:	df 91       	pop	r29
     340:	cf 91       	pop	r28
     342:	08 95       	ret

00000344 <main>:

#define degree_sysmbol 0xdf

int main(void)
{
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	cd b7       	in	r28, 0x3d	; 61
     34a:	de b7       	in	r29, 0x3e	; 62
     34c:	2a 97       	sbiw	r28, 0x0a	; 10
     34e:	0f b6       	in	r0, 0x3f	; 63
     350:	f8 94       	cli
     352:	de bf       	out	0x3e, r29	; 62
     354:	0f be       	out	0x3f, r0	; 63
     356:	cd bf       	out	0x3d, r28	; 61
	char buffer[10];
   USART_init(BAUD_PRESCALLER);  // Initialize the USART
     358:	87 e6       	ldi	r24, 0x67	; 103
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	0e 94 81 01 	call	0x302	; 0x302 <USART_init>
   USART_tx_string("Connected!\r\n");    // we're alive!
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	91 e0       	ldi	r25, 0x01	; 1
     364:	0e 94 8c 01 	call	0x318	; 0x318 <USART_tx_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     368:	2f e7       	ldi	r18, 0x7F	; 127
     36a:	8a e1       	ldi	r24, 0x1A	; 26
     36c:	96 e0       	ldi	r25, 0x06	; 6
     36e:	21 50       	subi	r18, 0x01	; 1
     370:	80 40       	sbci	r24, 0x00	; 0
     372:	90 40       	sbci	r25, 0x00	; 0
     374:	e1 f7       	brne	.-8      	; 0x36e <main+0x2a>
     376:	00 c0       	rjmp	.+0      	; 0x378 <main+0x34>
     378:	00 00       	nop
   _delay_ms(125);         // wait a bit
	I2C_Init();											/* Initialize I2C */
     37a:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <I2C_Init>
	Magneto_init();										/* Initialize magneto */
     37e:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <Magneto_init>
	USART_tx_string("Magnetometer");							/* Print title on LCD */
     382:	8d e0       	ldi	r24, 0x0D	; 13
     384:	91 e0       	ldi	r25, 0x01	; 1
     386:	0e 94 8c 01 	call	0x318	; 0x318 <USART_tx_string>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     38a:	8e 01       	movw	r16, r28
     38c:	0f 5f       	subi	r16, 0xFF	; 255
     38e:	1f 4f       	sbci	r17, 0xFF	; 255
	while (1)
	{
		itoa (Magneto_GetHeading(),buffer,10);
		USART_tx_string("Heading = ");				/* Print Heading on 2nd row of LCD */
		sprintf(buffer,"%d%cC  \r\n", (int)Magneto_GetHeading(), degree_sysmbol);               /* convert integer value to ASCII string */
     390:	0f 2e       	mov	r0, r31
     392:	ff ed       	ldi	r31, 0xDF	; 223
     394:	df 2e       	mov	r13, r31
     396:	f0 2d       	mov	r31, r0
     398:	0f 2e       	mov	r0, r31
     39a:	f5 e2       	ldi	r31, 0x25	; 37
     39c:	ef 2e       	mov	r14, r31
     39e:	f1 e0       	ldi	r31, 0x01	; 1
     3a0:	ff 2e       	mov	r15, r31
     3a2:	f0 2d       	mov	r31, r0
	I2C_Init();											/* Initialize I2C */
	Magneto_init();										/* Initialize magneto */
	USART_tx_string("Magnetometer");							/* Print title on LCD */
	while (1)
	{
		itoa (Magneto_GetHeading(),buffer,10);
     3a4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <Magneto_GetHeading>
     3a8:	4a e0       	ldi	r20, 0x0A	; 10
     3aa:	b8 01       	movw	r22, r16
     3ac:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__itoa_ncheck>
		USART_tx_string("Heading = ");				/* Print Heading on 2nd row of LCD */
     3b0:	8a e1       	ldi	r24, 0x1A	; 26
     3b2:	91 e0       	ldi	r25, 0x01	; 1
     3b4:	0e 94 8c 01 	call	0x318	; 0x318 <USART_tx_string>
		sprintf(buffer,"%d%cC  \r\n", (int)Magneto_GetHeading(), degree_sysmbol);               /* convert integer value to ASCII string */
     3b8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <Magneto_GetHeading>
     3bc:	1f 92       	push	r1
     3be:	df 92       	push	r13
     3c0:	9f 93       	push	r25
     3c2:	8f 93       	push	r24
     3c4:	ff 92       	push	r15
     3c6:	ef 92       	push	r14
     3c8:	1f 93       	push	r17
     3ca:	0f 93       	push	r16
     3cc:	0e 94 9b 0a 	call	0x1536	; 0x1536 <sprintf>
		USART_tx_string(buffer);
     3d0:	c8 01       	movw	r24, r16
     3d2:	0e 94 8c 01 	call	0x318	; 0x318 <USART_tx_string>
     3d6:	0f b6       	in	r0, 0x3f	; 63
     3d8:	f8 94       	cli
     3da:	de bf       	out	0x3e, r29	; 62
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	cd bf       	out	0x3d, r28	; 61
     3e0:	e1 cf       	rjmp	.-62     	; 0x3a4 <main+0x60>

000003e2 <I2C_Init>:

#include "i2c_master.h"								/* Include I2C header file */

void I2C_Init()												/* I2C initialize function */
{
	TWBR = BITRATE(TWSR = 0x00);							/* Get bit rate register value by formula */
     3e2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     3e6:	88 e4       	ldi	r24, 0x48	; 72
     3e8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     3ec:	08 95       	ret

000003ee <I2C_Start>:


uint8_t I2C_Start(char slave_write_address)					/* I2C start function */
{
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
     3ee:	94 ea       	ldi	r25, 0xA4	; 164
     3f0:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
     3f4:	ec eb       	ldi	r30, 0xBC	; 188
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	90 81       	ld	r25, Z
     3fa:	99 23       	and	r25, r25
     3fc:	ec f7       	brge	.-6      	; 0x3f8 <I2C_Start+0xa>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     3fe:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	if (status != 0x08)										/* Check weather start condition transmitted successfully or not? */
     402:	98 7f       	andi	r25, 0xF8	; 248
     404:	98 30       	cpi	r25, 0x08	; 8
     406:	99 f4       	brne	.+38     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
	return 0;												/* If not then return 0 to indicate start condition fail */
	TWDR = slave_write_address;								/* If yes then write SLA+W in TWI data register */
     408:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     40c:	84 e8       	ldi	r24, 0x84	; 132
     40e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     412:	ec eb       	ldi	r30, 0xBC	; 188
     414:	f0 e0       	ldi	r31, 0x00	; 0
     416:	80 81       	ld	r24, Z
     418:	88 23       	and	r24, r24
     41a:	ec f7       	brge	.-6      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */	
     41c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     420:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x18)										/* Check weather SLA+W transmitted & ack received or not? */
     422:	88 31       	cpi	r24, 0x18	; 24
     424:	31 f0       	breq	.+12     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
	return 1;												/* If yes then return 1 to indicate ack received i.e. ready to accept data byte */
	if (status == 0x20)										/* Check weather SLA+W transmitted & nack received or not? */
     426:	80 32       	cpi	r24, 0x20	; 32
     428:	31 f0       	breq	.+12     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
     42a:	83 e0       	ldi	r24, 0x03	; 3
     42c:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x08)										/* Check weather start condition transmitted successfully or not? */
	return 0;												/* If not then return 0 to indicate start condition fail */
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	08 95       	ret
	TWDR = slave_write_address;								/* If yes then write SLA+W in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */	
	if (status == 0x18)										/* Check weather SLA+W transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received i.e. ready to accept data byte */
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+W transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
     436:	82 e0       	ldi	r24, 0x02	; 2
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
     438:	08 95       	ret

0000043a <I2C_Repeated_Start>:

uint8_t I2C_Repeated_Start(char slave_read_address)			/* I2C repeated start function */
{
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
     43a:	94 ea       	ldi	r25, 0xA4	; 164
     43c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
     440:	ec eb       	ldi	r30, 0xBC	; 188
     442:	f0 e0       	ldi	r31, 0x00	; 0
     444:	90 81       	ld	r25, Z
     446:	99 23       	and	r25, r25
     448:	ec f7       	brge	.-6      	; 0x444 <I2C_Repeated_Start+0xa>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     44a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
     44e:	98 7f       	andi	r25, 0xF8	; 248
     450:	90 31       	cpi	r25, 0x10	; 16
     452:	99 f4       	brne	.+38     	; 0x47a <I2C_Repeated_Start+0x40>
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
     454:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     458:	84 e8       	ldi	r24, 0x84	; 132
     45a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     45e:	ec eb       	ldi	r30, 0xBC	; 188
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	80 81       	ld	r24, Z
     464:	88 23       	and	r24, r24
     466:	ec f7       	brge	.-6      	; 0x462 <I2C_Repeated_Start+0x28>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     468:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     46c:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
     46e:	80 34       	cpi	r24, 0x40	; 64
     470:	31 f0       	breq	.+12     	; 0x47e <I2C_Repeated_Start+0x44>
	return 1;												/* If yes then return 1 to indicate ack received */ 
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
     472:	80 32       	cpi	r24, 0x20	; 32
     474:	31 f0       	breq	.+12     	; 0x482 <I2C_Repeated_Start+0x48>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
     476:	83 e0       	ldi	r24, 0x03	; 3
     478:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	08 95       	ret
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received */ 
     47e:	81 e0       	ldi	r24, 0x01	; 1
     480:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
     482:	82 e0       	ldi	r24, 0x02	; 2
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
     484:	08 95       	ret

00000486 <I2C_Stop>:

void I2C_Stop()												/* I2C stop function */
{
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);					/* Enable TWI, generate stop condition and clear interrupt flag */
     486:	84 e9       	ldi	r24, 0x94	; 148
     488:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1<<TWSTO));								/* Wait until stop condition execution */ 
     48c:	ec eb       	ldi	r30, 0xBC	; 188
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	80 81       	ld	r24, Z
     492:	84 fd       	sbrc	r24, 4
     494:	fd cf       	rjmp	.-6      	; 0x490 <I2C_Stop+0xa>
}
     496:	08 95       	ret

00000498 <I2C_Start_Wait>:

void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
     498:	bf 92       	push	r11
     49a:	cf 92       	push	r12
     49c:	df 92       	push	r13
     49e:	ef 92       	push	r14
     4a0:	ff 92       	push	r15
     4a2:	0f 93       	push	r16
     4a4:	1f 93       	push	r17
     4a6:	cf 93       	push	r28
     4a8:	df 93       	push	r29
     4aa:	b8 2e       	mov	r11, r24
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
     4ac:	cc eb       	ldi	r28, 0xBC	; 188
     4ae:	d0 e0       	ldi	r29, 0x00	; 0
     4b0:	0f 2e       	mov	r0, r31
     4b2:	f4 ea       	ldi	r31, 0xA4	; 164
     4b4:	df 2e       	mov	r13, r31
     4b6:	f0 2d       	mov	r31, r0
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     4b8:	09 eb       	ldi	r16, 0xB9	; 185
     4ba:	10 e0       	ldi	r17, 0x00	; 0
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
		continue;											/* If no then continue with start loop again */
		TWDR = slave_write_address;							/* If yes then write SLA+W in TWI data register */
     4bc:	0f 2e       	mov	r0, r31
     4be:	fb eb       	ldi	r31, 0xBB	; 187
     4c0:	ef 2e       	mov	r14, r31
     4c2:	f1 2c       	mov	r15, r1
     4c4:	f0 2d       	mov	r31, r0
		TWCR = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
     4c6:	0f 2e       	mov	r0, r31
     4c8:	f4 e8       	ldi	r31, 0x84	; 132
     4ca:	cf 2e       	mov	r12, r31
     4cc:	f0 2d       	mov	r31, r0
void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
     4ce:	d8 82       	st	Y, r13
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
     4d0:	88 81       	ld	r24, Y
     4d2:	88 23       	and	r24, r24
     4d4:	ec f7       	brge	.-6      	; 0x4d0 <I2C_Start_Wait+0x38>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     4d6:	f8 01       	movw	r30, r16
     4d8:	80 81       	ld	r24, Z
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
     4da:	88 7f       	andi	r24, 0xF8	; 248
     4dc:	88 30       	cpi	r24, 0x08	; 8
     4de:	b9 f7       	brne	.-18     	; 0x4ce <I2C_Start_Wait+0x36>
		continue;											/* If no then continue with start loop again */
		TWDR = slave_write_address;							/* If yes then write SLA+W in TWI data register */
     4e0:	f7 01       	movw	r30, r14
     4e2:	b0 82       	st	Z, r11
		TWCR = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
     4e4:	c8 82       	st	Y, r12
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (Write operation) */
     4e6:	88 81       	ld	r24, Y
     4e8:	88 23       	and	r24, r24
     4ea:	ec f7       	brge	.-6      	; 0x4e6 <I2C_Start_Wait+0x4e>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     4ec:	f8 01       	movw	r30, r16
     4ee:	80 81       	ld	r24, Z
		if (status != 0x18 )								/* Check weather SLA+W transmitted & ack received or not? */
     4f0:	88 7f       	andi	r24, 0xF8	; 248
     4f2:	88 31       	cpi	r24, 0x18	; 24
     4f4:	19 f0       	breq	.+6      	; 0x4fc <I2C_Start_Wait+0x64>
		{
			I2C_Stop();										/* If not then generate stop condition */
     4f6:	0e 94 43 02 	call	0x486	; 0x486 <I2C_Stop>
			continue;										/* continue with start loop again */
     4fa:	e9 cf       	rjmp	.-46     	; 0x4ce <I2C_Start_Wait+0x36>
		}
		break;												/* If yes then break loop */
	}
}
     4fc:	df 91       	pop	r29
     4fe:	cf 91       	pop	r28
     500:	1f 91       	pop	r17
     502:	0f 91       	pop	r16
     504:	ff 90       	pop	r15
     506:	ef 90       	pop	r14
     508:	df 90       	pop	r13
     50a:	cf 90       	pop	r12
     50c:	bf 90       	pop	r11
     50e:	08 95       	ret

00000510 <I2C_Write>:

uint8_t I2C_Write(char data)								/* I2C write function */
{
	uint8_t status;											/* Declare variable */
	TWDR = data;											/* Copy data in TWI data register */
     510:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     514:	84 e8       	ldi	r24, 0x84	; 132
     516:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     51a:	ec eb       	ldi	r30, 0xBC	; 188
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	80 81       	ld	r24, Z
     520:	88 23       	and	r24, r24
     522:	ec f7       	brge	.-6      	; 0x51e <I2C_Write+0xe>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     524:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     528:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
     52a:	88 32       	cpi	r24, 0x28	; 40
     52c:	21 f0       	breq	.+8      	; 0x536 <I2C_Write+0x26>
	return 0;												/* If yes then return 0 to indicate ack received */
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
     52e:	80 33       	cpi	r24, 0x30	; 48
     530:	21 f0       	breq	.+8      	; 0x53a <I2C_Write+0x2a>
	return 1;												/* If yes then return 1 to indicate nack received */
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
     532:	82 e0       	ldi	r24, 0x02	; 2
     534:	08 95       	ret
	TWDR = data;											/* Copy data in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
	return 0;												/* If yes then return 0 to indicate ack received */
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	08 95       	ret
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
	return 1;												/* If yes then return 1 to indicate nack received */
     53a:	81 e0       	ldi	r24, 0x01	; 1
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
}
     53c:	08 95       	ret

0000053e <I2C_Read_Ack>:

char I2C_Read_Ack()											/* I2C read ack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);					/* Enable TWI, generation of ack and clear interrupt flag */
     53e:	84 ec       	ldi	r24, 0xC4	; 196
     540:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     544:	ec eb       	ldi	r30, 0xBC	; 188
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	80 81       	ld	r24, Z
     54a:	88 23       	and	r24, r24
     54c:	ec f7       	brge	.-6      	; 0x548 <I2C_Read_Ack+0xa>
	return TWDR;											/* Return received data */
     54e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}	
     552:	08 95       	ret

00000554 <I2C_Read_Nack>:

char I2C_Read_Nack()										/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);								/* Enable TWI and clear interrupt flag */
     554:	84 e8       	ldi	r24, 0x84	; 132
     556:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     55a:	ec eb       	ldi	r30, 0xBC	; 188
     55c:	f0 e0       	ldi	r31, 0x00	; 0
     55e:	80 81       	ld	r24, Z
     560:	88 23       	and	r24, r24
     562:	ec f7       	brge	.-6      	; 0x55e <I2C_Read_Nack+0xa>
	return TWDR;											/* Return received data */
     564:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}	
     568:	08 95       	ret

0000056a <__subsf3>:
     56a:	50 58       	subi	r21, 0x80	; 128

0000056c <__addsf3>:
     56c:	bb 27       	eor	r27, r27
     56e:	aa 27       	eor	r26, r26
     570:	0e 94 cd 02 	call	0x59a	; 0x59a <__addsf3x>
     574:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_round>
     578:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fp_pscA>
     57c:	38 f0       	brcs	.+14     	; 0x58c <__addsf3+0x20>
     57e:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscB>
     582:	20 f0       	brcs	.+8      	; 0x58c <__addsf3+0x20>
     584:	39 f4       	brne	.+14     	; 0x594 <__addsf3+0x28>
     586:	9f 3f       	cpi	r25, 0xFF	; 255
     588:	19 f4       	brne	.+6      	; 0x590 <__addsf3+0x24>
     58a:	26 f4       	brtc	.+8      	; 0x594 <__addsf3+0x28>
     58c:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_nan>
     590:	0e f4       	brtc	.+2      	; 0x594 <__addsf3+0x28>
     592:	e0 95       	com	r30
     594:	e7 fb       	bst	r30, 7
     596:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_inf>

0000059a <__addsf3x>:
     59a:	e9 2f       	mov	r30, r25
     59c:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_split3>
     5a0:	58 f3       	brcs	.-42     	; 0x578 <__addsf3+0xc>
     5a2:	ba 17       	cp	r27, r26
     5a4:	62 07       	cpc	r22, r18
     5a6:	73 07       	cpc	r23, r19
     5a8:	84 07       	cpc	r24, r20
     5aa:	95 07       	cpc	r25, r21
     5ac:	20 f0       	brcs	.+8      	; 0x5b6 <__addsf3x+0x1c>
     5ae:	79 f4       	brne	.+30     	; 0x5ce <__addsf3x+0x34>
     5b0:	a6 f5       	brtc	.+104    	; 0x61a <__addsf3x+0x80>
     5b2:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_zero>
     5b6:	0e f4       	brtc	.+2      	; 0x5ba <__addsf3x+0x20>
     5b8:	e0 95       	com	r30
     5ba:	0b 2e       	mov	r0, r27
     5bc:	ba 2f       	mov	r27, r26
     5be:	a0 2d       	mov	r26, r0
     5c0:	0b 01       	movw	r0, r22
     5c2:	b9 01       	movw	r22, r18
     5c4:	90 01       	movw	r18, r0
     5c6:	0c 01       	movw	r0, r24
     5c8:	ca 01       	movw	r24, r20
     5ca:	a0 01       	movw	r20, r0
     5cc:	11 24       	eor	r1, r1
     5ce:	ff 27       	eor	r31, r31
     5d0:	59 1b       	sub	r21, r25
     5d2:	99 f0       	breq	.+38     	; 0x5fa <__addsf3x+0x60>
     5d4:	59 3f       	cpi	r21, 0xF9	; 249
     5d6:	50 f4       	brcc	.+20     	; 0x5ec <__addsf3x+0x52>
     5d8:	50 3e       	cpi	r21, 0xE0	; 224
     5da:	68 f1       	brcs	.+90     	; 0x636 <__addsf3x+0x9c>
     5dc:	1a 16       	cp	r1, r26
     5de:	f0 40       	sbci	r31, 0x00	; 0
     5e0:	a2 2f       	mov	r26, r18
     5e2:	23 2f       	mov	r18, r19
     5e4:	34 2f       	mov	r19, r20
     5e6:	44 27       	eor	r20, r20
     5e8:	58 5f       	subi	r21, 0xF8	; 248
     5ea:	f3 cf       	rjmp	.-26     	; 0x5d2 <__addsf3x+0x38>
     5ec:	46 95       	lsr	r20
     5ee:	37 95       	ror	r19
     5f0:	27 95       	ror	r18
     5f2:	a7 95       	ror	r26
     5f4:	f0 40       	sbci	r31, 0x00	; 0
     5f6:	53 95       	inc	r21
     5f8:	c9 f7       	brne	.-14     	; 0x5ec <__addsf3x+0x52>
     5fa:	7e f4       	brtc	.+30     	; 0x61a <__addsf3x+0x80>
     5fc:	1f 16       	cp	r1, r31
     5fe:	ba 0b       	sbc	r27, r26
     600:	62 0b       	sbc	r22, r18
     602:	73 0b       	sbc	r23, r19
     604:	84 0b       	sbc	r24, r20
     606:	ba f0       	brmi	.+46     	; 0x636 <__addsf3x+0x9c>
     608:	91 50       	subi	r25, 0x01	; 1
     60a:	a1 f0       	breq	.+40     	; 0x634 <__addsf3x+0x9a>
     60c:	ff 0f       	add	r31, r31
     60e:	bb 1f       	adc	r27, r27
     610:	66 1f       	adc	r22, r22
     612:	77 1f       	adc	r23, r23
     614:	88 1f       	adc	r24, r24
     616:	c2 f7       	brpl	.-16     	; 0x608 <__addsf3x+0x6e>
     618:	0e c0       	rjmp	.+28     	; 0x636 <__addsf3x+0x9c>
     61a:	ba 0f       	add	r27, r26
     61c:	62 1f       	adc	r22, r18
     61e:	73 1f       	adc	r23, r19
     620:	84 1f       	adc	r24, r20
     622:	48 f4       	brcc	.+18     	; 0x636 <__addsf3x+0x9c>
     624:	87 95       	ror	r24
     626:	77 95       	ror	r23
     628:	67 95       	ror	r22
     62a:	b7 95       	ror	r27
     62c:	f7 95       	ror	r31
     62e:	9e 3f       	cpi	r25, 0xFE	; 254
     630:	08 f0       	brcs	.+2      	; 0x634 <__addsf3x+0x9a>
     632:	b0 cf       	rjmp	.-160    	; 0x594 <__addsf3+0x28>
     634:	93 95       	inc	r25
     636:	88 0f       	add	r24, r24
     638:	08 f0       	brcs	.+2      	; 0x63c <__addsf3x+0xa2>
     63a:	99 27       	eor	r25, r25
     63c:	ee 0f       	add	r30, r30
     63e:	97 95       	ror	r25
     640:	87 95       	ror	r24
     642:	08 95       	ret
     644:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fp_pscA>
     648:	60 f0       	brcs	.+24     	; 0x662 <__addsf3x+0xc8>
     64a:	80 e8       	ldi	r24, 0x80	; 128
     64c:	91 e0       	ldi	r25, 0x01	; 1
     64e:	09 f4       	brne	.+2      	; 0x652 <__addsf3x+0xb8>
     650:	9e ef       	ldi	r25, 0xFE	; 254
     652:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscB>
     656:	28 f0       	brcs	.+10     	; 0x662 <__addsf3x+0xc8>
     658:	40 e8       	ldi	r20, 0x80	; 128
     65a:	51 e0       	ldi	r21, 0x01	; 1
     65c:	71 f4       	brne	.+28     	; 0x67a <atan2+0x10>
     65e:	5e ef       	ldi	r21, 0xFE	; 254
     660:	0c c0       	rjmp	.+24     	; 0x67a <atan2+0x10>
     662:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_nan>
     666:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_zero>

0000066a <atan2>:
     66a:	e9 2f       	mov	r30, r25
     66c:	e0 78       	andi	r30, 0x80	; 128
     66e:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_split3>
     672:	40 f3       	brcs	.-48     	; 0x644 <__addsf3x+0xaa>
     674:	09 2e       	mov	r0, r25
     676:	05 2a       	or	r0, r21
     678:	b1 f3       	breq	.-20     	; 0x666 <__addsf3x+0xcc>
     67a:	26 17       	cp	r18, r22
     67c:	37 07       	cpc	r19, r23
     67e:	48 07       	cpc	r20, r24
     680:	59 07       	cpc	r21, r25
     682:	38 f0       	brcs	.+14     	; 0x692 <atan2+0x28>
     684:	0e 2e       	mov	r0, r30
     686:	07 f8       	bld	r0, 7
     688:	e0 25       	eor	r30, r0
     68a:	69 f0       	breq	.+26     	; 0x6a6 <atan2+0x3c>
     68c:	e0 25       	eor	r30, r0
     68e:	e0 64       	ori	r30, 0x40	; 64
     690:	0a c0       	rjmp	.+20     	; 0x6a6 <atan2+0x3c>
     692:	ef 63       	ori	r30, 0x3F	; 63
     694:	07 f8       	bld	r0, 7
     696:	00 94       	com	r0
     698:	07 fa       	bst	r0, 7
     69a:	db 01       	movw	r26, r22
     69c:	b9 01       	movw	r22, r18
     69e:	9d 01       	movw	r18, r26
     6a0:	dc 01       	movw	r26, r24
     6a2:	ca 01       	movw	r24, r20
     6a4:	ad 01       	movw	r20, r26
     6a6:	ef 93       	push	r30
     6a8:	0e 94 b0 03 	call	0x760	; 0x760 <__divsf3_pse>
     6ac:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fp_round>
     6b0:	0e 94 65 03 	call	0x6ca	; 0x6ca <atan>
     6b4:	5f 91       	pop	r21
     6b6:	55 23       	and	r21, r21
     6b8:	39 f0       	breq	.+14     	; 0x6c8 <atan2+0x5e>
     6ba:	2b ed       	ldi	r18, 0xDB	; 219
     6bc:	3f e0       	ldi	r19, 0x0F	; 15
     6be:	49 e4       	ldi	r20, 0x49	; 73
     6c0:	50 fd       	sbrc	r21, 0
     6c2:	49 ec       	ldi	r20, 0xC9	; 201
     6c4:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__addsf3>
     6c8:	08 95       	ret

000006ca <atan>:
     6ca:	df 93       	push	r29
     6cc:	dd 27       	eor	r29, r29
     6ce:	b9 2f       	mov	r27, r25
     6d0:	bf 77       	andi	r27, 0x7F	; 127
     6d2:	40 e8       	ldi	r20, 0x80	; 128
     6d4:	5f e3       	ldi	r21, 0x3F	; 63
     6d6:	16 16       	cp	r1, r22
     6d8:	17 06       	cpc	r1, r23
     6da:	48 07       	cpc	r20, r24
     6dc:	5b 07       	cpc	r21, r27
     6de:	18 f4       	brcc	.+6      	; 0x6e6 <atan+0x1c>
     6e0:	d9 2f       	mov	r29, r25
     6e2:	0e 94 1f 05 	call	0xa3e	; 0xa3e <inverse>
     6e6:	9f 93       	push	r25
     6e8:	8f 93       	push	r24
     6ea:	7f 93       	push	r23
     6ec:	6f 93       	push	r22
     6ee:	0e 94 94 05 	call	0xb28	; 0xb28 <square>
     6f2:	e8 e6       	ldi	r30, 0x68	; 104
     6f4:	f0 e0       	ldi	r31, 0x00	; 0
     6f6:	0e 94 ab 04 	call	0x956	; 0x956 <__fp_powser>
     6fa:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fp_round>
     6fe:	2f 91       	pop	r18
     700:	3f 91       	pop	r19
     702:	4f 91       	pop	r20
     704:	5f 91       	pop	r21
     706:	0e 94 3a 05 	call	0xa74	; 0xa74 <__mulsf3x>
     70a:	dd 23       	and	r29, r29
     70c:	51 f0       	breq	.+20     	; 0x722 <atan+0x58>
     70e:	90 58       	subi	r25, 0x80	; 128
     710:	a2 ea       	ldi	r26, 0xA2	; 162
     712:	2a ed       	ldi	r18, 0xDA	; 218
     714:	3f e0       	ldi	r19, 0x0F	; 15
     716:	49 ec       	ldi	r20, 0xC9	; 201
     718:	5f e3       	ldi	r21, 0x3F	; 63
     71a:	d0 78       	andi	r29, 0x80	; 128
     71c:	5d 27       	eor	r21, r29
     71e:	0e 94 cd 02 	call	0x59a	; 0x59a <__addsf3x>
     722:	df 91       	pop	r29
     724:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_round>

00000728 <__cmpsf2>:
     728:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__fp_cmp>
     72c:	08 f4       	brcc	.+2      	; 0x730 <__cmpsf2+0x8>
     72e:	81 e0       	ldi	r24, 0x01	; 1
     730:	08 95       	ret

00000732 <__divsf3>:
     732:	0e 94 ad 03 	call	0x75a	; 0x75a <__divsf3x>
     736:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_round>
     73a:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscB>
     73e:	58 f0       	brcs	.+22     	; 0x756 <__divsf3+0x24>
     740:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fp_pscA>
     744:	40 f0       	brcs	.+16     	; 0x756 <__divsf3+0x24>
     746:	29 f4       	brne	.+10     	; 0x752 <__divsf3+0x20>
     748:	5f 3f       	cpi	r21, 0xFF	; 255
     74a:	29 f0       	breq	.+10     	; 0x756 <__divsf3+0x24>
     74c:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_inf>
     750:	51 11       	cpse	r21, r1
     752:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__fp_szero>
     756:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_nan>

0000075a <__divsf3x>:
     75a:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_split3>
     75e:	68 f3       	brcs	.-38     	; 0x73a <__divsf3+0x8>

00000760 <__divsf3_pse>:
     760:	99 23       	and	r25, r25
     762:	b1 f3       	breq	.-20     	; 0x750 <__divsf3+0x1e>
     764:	55 23       	and	r21, r21
     766:	91 f3       	breq	.-28     	; 0x74c <__divsf3+0x1a>
     768:	95 1b       	sub	r25, r21
     76a:	55 0b       	sbc	r21, r21
     76c:	bb 27       	eor	r27, r27
     76e:	aa 27       	eor	r26, r26
     770:	62 17       	cp	r22, r18
     772:	73 07       	cpc	r23, r19
     774:	84 07       	cpc	r24, r20
     776:	38 f0       	brcs	.+14     	; 0x786 <__divsf3_pse+0x26>
     778:	9f 5f       	subi	r25, 0xFF	; 255
     77a:	5f 4f       	sbci	r21, 0xFF	; 255
     77c:	22 0f       	add	r18, r18
     77e:	33 1f       	adc	r19, r19
     780:	44 1f       	adc	r20, r20
     782:	aa 1f       	adc	r26, r26
     784:	a9 f3       	breq	.-22     	; 0x770 <__divsf3_pse+0x10>
     786:	35 d0       	rcall	.+106    	; 0x7f2 <__divsf3_pse+0x92>
     788:	0e 2e       	mov	r0, r30
     78a:	3a f0       	brmi	.+14     	; 0x79a <__divsf3_pse+0x3a>
     78c:	e0 e8       	ldi	r30, 0x80	; 128
     78e:	32 d0       	rcall	.+100    	; 0x7f4 <__divsf3_pse+0x94>
     790:	91 50       	subi	r25, 0x01	; 1
     792:	50 40       	sbci	r21, 0x00	; 0
     794:	e6 95       	lsr	r30
     796:	00 1c       	adc	r0, r0
     798:	ca f7       	brpl	.-14     	; 0x78c <__divsf3_pse+0x2c>
     79a:	2b d0       	rcall	.+86     	; 0x7f2 <__divsf3_pse+0x92>
     79c:	fe 2f       	mov	r31, r30
     79e:	29 d0       	rcall	.+82     	; 0x7f2 <__divsf3_pse+0x92>
     7a0:	66 0f       	add	r22, r22
     7a2:	77 1f       	adc	r23, r23
     7a4:	88 1f       	adc	r24, r24
     7a6:	bb 1f       	adc	r27, r27
     7a8:	26 17       	cp	r18, r22
     7aa:	37 07       	cpc	r19, r23
     7ac:	48 07       	cpc	r20, r24
     7ae:	ab 07       	cpc	r26, r27
     7b0:	b0 e8       	ldi	r27, 0x80	; 128
     7b2:	09 f0       	breq	.+2      	; 0x7b6 <__divsf3_pse+0x56>
     7b4:	bb 0b       	sbc	r27, r27
     7b6:	80 2d       	mov	r24, r0
     7b8:	bf 01       	movw	r22, r30
     7ba:	ff 27       	eor	r31, r31
     7bc:	93 58       	subi	r25, 0x83	; 131
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	3a f0       	brmi	.+14     	; 0x7d0 <__divsf3_pse+0x70>
     7c2:	9e 3f       	cpi	r25, 0xFE	; 254
     7c4:	51 05       	cpc	r21, r1
     7c6:	78 f0       	brcs	.+30     	; 0x7e6 <__divsf3_pse+0x86>
     7c8:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_inf>
     7cc:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__fp_szero>
     7d0:	5f 3f       	cpi	r21, 0xFF	; 255
     7d2:	e4 f3       	brlt	.-8      	; 0x7cc <__divsf3_pse+0x6c>
     7d4:	98 3e       	cpi	r25, 0xE8	; 232
     7d6:	d4 f3       	brlt	.-12     	; 0x7cc <__divsf3_pse+0x6c>
     7d8:	86 95       	lsr	r24
     7da:	77 95       	ror	r23
     7dc:	67 95       	ror	r22
     7de:	b7 95       	ror	r27
     7e0:	f7 95       	ror	r31
     7e2:	9f 5f       	subi	r25, 0xFF	; 255
     7e4:	c9 f7       	brne	.-14     	; 0x7d8 <__divsf3_pse+0x78>
     7e6:	88 0f       	add	r24, r24
     7e8:	91 1d       	adc	r25, r1
     7ea:	96 95       	lsr	r25
     7ec:	87 95       	ror	r24
     7ee:	97 f9       	bld	r25, 7
     7f0:	08 95       	ret
     7f2:	e1 e0       	ldi	r30, 0x01	; 1
     7f4:	66 0f       	add	r22, r22
     7f6:	77 1f       	adc	r23, r23
     7f8:	88 1f       	adc	r24, r24
     7fa:	bb 1f       	adc	r27, r27
     7fc:	62 17       	cp	r22, r18
     7fe:	73 07       	cpc	r23, r19
     800:	84 07       	cpc	r24, r20
     802:	ba 07       	cpc	r27, r26
     804:	20 f0       	brcs	.+8      	; 0x80e <__divsf3_pse+0xae>
     806:	62 1b       	sub	r22, r18
     808:	73 0b       	sbc	r23, r19
     80a:	84 0b       	sbc	r24, r20
     80c:	ba 0b       	sbc	r27, r26
     80e:	ee 1f       	adc	r30, r30
     810:	88 f7       	brcc	.-30     	; 0x7f4 <__divsf3_pse+0x94>
     812:	e0 95       	com	r30
     814:	08 95       	ret

00000816 <__fixsfsi>:
     816:	0e 94 12 04 	call	0x824	; 0x824 <__fixunssfsi>
     81a:	68 94       	set
     81c:	b1 11       	cpse	r27, r1
     81e:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__fp_szero>
     822:	08 95       	ret

00000824 <__fixunssfsi>:
     824:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__fp_splitA>
     828:	88 f0       	brcs	.+34     	; 0x84c <__fixunssfsi+0x28>
     82a:	9f 57       	subi	r25, 0x7F	; 127
     82c:	98 f0       	brcs	.+38     	; 0x854 <__fixunssfsi+0x30>
     82e:	b9 2f       	mov	r27, r25
     830:	99 27       	eor	r25, r25
     832:	b7 51       	subi	r27, 0x17	; 23
     834:	b0 f0       	brcs	.+44     	; 0x862 <__fixunssfsi+0x3e>
     836:	e1 f0       	breq	.+56     	; 0x870 <__fixunssfsi+0x4c>
     838:	66 0f       	add	r22, r22
     83a:	77 1f       	adc	r23, r23
     83c:	88 1f       	adc	r24, r24
     83e:	99 1f       	adc	r25, r25
     840:	1a f0       	brmi	.+6      	; 0x848 <__fixunssfsi+0x24>
     842:	ba 95       	dec	r27
     844:	c9 f7       	brne	.-14     	; 0x838 <__fixunssfsi+0x14>
     846:	14 c0       	rjmp	.+40     	; 0x870 <__fixunssfsi+0x4c>
     848:	b1 30       	cpi	r27, 0x01	; 1
     84a:	91 f0       	breq	.+36     	; 0x870 <__fixunssfsi+0x4c>
     84c:	0e 94 13 05 	call	0xa26	; 0xa26 <__fp_zero>
     850:	b1 e0       	ldi	r27, 0x01	; 1
     852:	08 95       	ret
     854:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_zero>
     858:	67 2f       	mov	r22, r23
     85a:	78 2f       	mov	r23, r24
     85c:	88 27       	eor	r24, r24
     85e:	b8 5f       	subi	r27, 0xF8	; 248
     860:	39 f0       	breq	.+14     	; 0x870 <__fixunssfsi+0x4c>
     862:	b9 3f       	cpi	r27, 0xF9	; 249
     864:	cc f3       	brlt	.-14     	; 0x858 <__fixunssfsi+0x34>
     866:	86 95       	lsr	r24
     868:	77 95       	ror	r23
     86a:	67 95       	ror	r22
     86c:	b3 95       	inc	r27
     86e:	d9 f7       	brne	.-10     	; 0x866 <__fixunssfsi+0x42>
     870:	3e f4       	brtc	.+14     	; 0x880 <__fixunssfsi+0x5c>
     872:	90 95       	com	r25
     874:	80 95       	com	r24
     876:	70 95       	com	r23
     878:	61 95       	neg	r22
     87a:	7f 4f       	sbci	r23, 0xFF	; 255
     87c:	8f 4f       	sbci	r24, 0xFF	; 255
     87e:	9f 4f       	sbci	r25, 0xFF	; 255
     880:	08 95       	ret

00000882 <__floatunsisf>:
     882:	e8 94       	clt
     884:	09 c0       	rjmp	.+18     	; 0x898 <__floatsisf+0x12>

00000886 <__floatsisf>:
     886:	97 fb       	bst	r25, 7
     888:	3e f4       	brtc	.+14     	; 0x898 <__floatsisf+0x12>
     88a:	90 95       	com	r25
     88c:	80 95       	com	r24
     88e:	70 95       	com	r23
     890:	61 95       	neg	r22
     892:	7f 4f       	sbci	r23, 0xFF	; 255
     894:	8f 4f       	sbci	r24, 0xFF	; 255
     896:	9f 4f       	sbci	r25, 0xFF	; 255
     898:	99 23       	and	r25, r25
     89a:	a9 f0       	breq	.+42     	; 0x8c6 <__floatsisf+0x40>
     89c:	f9 2f       	mov	r31, r25
     89e:	96 e9       	ldi	r25, 0x96	; 150
     8a0:	bb 27       	eor	r27, r27
     8a2:	93 95       	inc	r25
     8a4:	f6 95       	lsr	r31
     8a6:	87 95       	ror	r24
     8a8:	77 95       	ror	r23
     8aa:	67 95       	ror	r22
     8ac:	b7 95       	ror	r27
     8ae:	f1 11       	cpse	r31, r1
     8b0:	f8 cf       	rjmp	.-16     	; 0x8a2 <__floatsisf+0x1c>
     8b2:	fa f4       	brpl	.+62     	; 0x8f2 <__floatsisf+0x6c>
     8b4:	bb 0f       	add	r27, r27
     8b6:	11 f4       	brne	.+4      	; 0x8bc <__floatsisf+0x36>
     8b8:	60 ff       	sbrs	r22, 0
     8ba:	1b c0       	rjmp	.+54     	; 0x8f2 <__floatsisf+0x6c>
     8bc:	6f 5f       	subi	r22, 0xFF	; 255
     8be:	7f 4f       	sbci	r23, 0xFF	; 255
     8c0:	8f 4f       	sbci	r24, 0xFF	; 255
     8c2:	9f 4f       	sbci	r25, 0xFF	; 255
     8c4:	16 c0       	rjmp	.+44     	; 0x8f2 <__floatsisf+0x6c>
     8c6:	88 23       	and	r24, r24
     8c8:	11 f0       	breq	.+4      	; 0x8ce <__floatsisf+0x48>
     8ca:	96 e9       	ldi	r25, 0x96	; 150
     8cc:	11 c0       	rjmp	.+34     	; 0x8f0 <__floatsisf+0x6a>
     8ce:	77 23       	and	r23, r23
     8d0:	21 f0       	breq	.+8      	; 0x8da <__floatsisf+0x54>
     8d2:	9e e8       	ldi	r25, 0x8E	; 142
     8d4:	87 2f       	mov	r24, r23
     8d6:	76 2f       	mov	r23, r22
     8d8:	05 c0       	rjmp	.+10     	; 0x8e4 <__floatsisf+0x5e>
     8da:	66 23       	and	r22, r22
     8dc:	71 f0       	breq	.+28     	; 0x8fa <__floatsisf+0x74>
     8de:	96 e8       	ldi	r25, 0x86	; 134
     8e0:	86 2f       	mov	r24, r22
     8e2:	70 e0       	ldi	r23, 0x00	; 0
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	2a f0       	brmi	.+10     	; 0x8f2 <__floatsisf+0x6c>
     8e8:	9a 95       	dec	r25
     8ea:	66 0f       	add	r22, r22
     8ec:	77 1f       	adc	r23, r23
     8ee:	88 1f       	adc	r24, r24
     8f0:	da f7       	brpl	.-10     	; 0x8e8 <__floatsisf+0x62>
     8f2:	88 0f       	add	r24, r24
     8f4:	96 95       	lsr	r25
     8f6:	87 95       	ror	r24
     8f8:	97 f9       	bld	r25, 7
     8fa:	08 95       	ret

000008fc <__fp_cmp>:
     8fc:	99 0f       	add	r25, r25
     8fe:	00 08       	sbc	r0, r0
     900:	55 0f       	add	r21, r21
     902:	aa 0b       	sbc	r26, r26
     904:	e0 e8       	ldi	r30, 0x80	; 128
     906:	fe ef       	ldi	r31, 0xFE	; 254
     908:	16 16       	cp	r1, r22
     90a:	17 06       	cpc	r1, r23
     90c:	e8 07       	cpc	r30, r24
     90e:	f9 07       	cpc	r31, r25
     910:	c0 f0       	brcs	.+48     	; 0x942 <__stack+0x43>
     912:	12 16       	cp	r1, r18
     914:	13 06       	cpc	r1, r19
     916:	e4 07       	cpc	r30, r20
     918:	f5 07       	cpc	r31, r21
     91a:	98 f0       	brcs	.+38     	; 0x942 <__stack+0x43>
     91c:	62 1b       	sub	r22, r18
     91e:	73 0b       	sbc	r23, r19
     920:	84 0b       	sbc	r24, r20
     922:	95 0b       	sbc	r25, r21
     924:	39 f4       	brne	.+14     	; 0x934 <__stack+0x35>
     926:	0a 26       	eor	r0, r26
     928:	61 f0       	breq	.+24     	; 0x942 <__stack+0x43>
     92a:	23 2b       	or	r18, r19
     92c:	24 2b       	or	r18, r20
     92e:	25 2b       	or	r18, r21
     930:	21 f4       	brne	.+8      	; 0x93a <__stack+0x3b>
     932:	08 95       	ret
     934:	0a 26       	eor	r0, r26
     936:	09 f4       	brne	.+2      	; 0x93a <__stack+0x3b>
     938:	a1 40       	sbci	r26, 0x01	; 1
     93a:	a6 95       	lsr	r26
     93c:	8f ef       	ldi	r24, 0xFF	; 255
     93e:	81 1d       	adc	r24, r1
     940:	81 1d       	adc	r24, r1
     942:	08 95       	ret

00000944 <__fp_inf>:
     944:	97 f9       	bld	r25, 7
     946:	9f 67       	ori	r25, 0x7F	; 127
     948:	80 e8       	ldi	r24, 0x80	; 128
     94a:	70 e0       	ldi	r23, 0x00	; 0
     94c:	60 e0       	ldi	r22, 0x00	; 0
     94e:	08 95       	ret

00000950 <__fp_nan>:
     950:	9f ef       	ldi	r25, 0xFF	; 255
     952:	80 ec       	ldi	r24, 0xC0	; 192
     954:	08 95       	ret

00000956 <__fp_powser>:
     956:	df 93       	push	r29
     958:	cf 93       	push	r28
     95a:	1f 93       	push	r17
     95c:	0f 93       	push	r16
     95e:	ff 92       	push	r15
     960:	ef 92       	push	r14
     962:	df 92       	push	r13
     964:	7b 01       	movw	r14, r22
     966:	8c 01       	movw	r16, r24
     968:	68 94       	set
     96a:	06 c0       	rjmp	.+12     	; 0x978 <__fp_powser+0x22>
     96c:	da 2e       	mov	r13, r26
     96e:	ef 01       	movw	r28, r30
     970:	0e 94 3a 05 	call	0xa74	; 0xa74 <__mulsf3x>
     974:	fe 01       	movw	r30, r28
     976:	e8 94       	clt
     978:	a5 91       	lpm	r26, Z+
     97a:	25 91       	lpm	r18, Z+
     97c:	35 91       	lpm	r19, Z+
     97e:	45 91       	lpm	r20, Z+
     980:	55 91       	lpm	r21, Z+
     982:	a6 f3       	brts	.-24     	; 0x96c <__fp_powser+0x16>
     984:	ef 01       	movw	r28, r30
     986:	0e 94 cd 02 	call	0x59a	; 0x59a <__addsf3x>
     98a:	fe 01       	movw	r30, r28
     98c:	97 01       	movw	r18, r14
     98e:	a8 01       	movw	r20, r16
     990:	da 94       	dec	r13
     992:	69 f7       	brne	.-38     	; 0x96e <__fp_powser+0x18>
     994:	df 90       	pop	r13
     996:	ef 90       	pop	r14
     998:	ff 90       	pop	r15
     99a:	0f 91       	pop	r16
     99c:	1f 91       	pop	r17
     99e:	cf 91       	pop	r28
     9a0:	df 91       	pop	r29
     9a2:	08 95       	ret

000009a4 <__fp_pscA>:
     9a4:	00 24       	eor	r0, r0
     9a6:	0a 94       	dec	r0
     9a8:	16 16       	cp	r1, r22
     9aa:	17 06       	cpc	r1, r23
     9ac:	18 06       	cpc	r1, r24
     9ae:	09 06       	cpc	r0, r25
     9b0:	08 95       	ret

000009b2 <__fp_pscB>:
     9b2:	00 24       	eor	r0, r0
     9b4:	0a 94       	dec	r0
     9b6:	12 16       	cp	r1, r18
     9b8:	13 06       	cpc	r1, r19
     9ba:	14 06       	cpc	r1, r20
     9bc:	05 06       	cpc	r0, r21
     9be:	08 95       	ret

000009c0 <__fp_round>:
     9c0:	09 2e       	mov	r0, r25
     9c2:	03 94       	inc	r0
     9c4:	00 0c       	add	r0, r0
     9c6:	11 f4       	brne	.+4      	; 0x9cc <__fp_round+0xc>
     9c8:	88 23       	and	r24, r24
     9ca:	52 f0       	brmi	.+20     	; 0x9e0 <__fp_round+0x20>
     9cc:	bb 0f       	add	r27, r27
     9ce:	40 f4       	brcc	.+16     	; 0x9e0 <__fp_round+0x20>
     9d0:	bf 2b       	or	r27, r31
     9d2:	11 f4       	brne	.+4      	; 0x9d8 <__fp_round+0x18>
     9d4:	60 ff       	sbrs	r22, 0
     9d6:	04 c0       	rjmp	.+8      	; 0x9e0 <__fp_round+0x20>
     9d8:	6f 5f       	subi	r22, 0xFF	; 255
     9da:	7f 4f       	sbci	r23, 0xFF	; 255
     9dc:	8f 4f       	sbci	r24, 0xFF	; 255
     9de:	9f 4f       	sbci	r25, 0xFF	; 255
     9e0:	08 95       	ret

000009e2 <__fp_split3>:
     9e2:	57 fd       	sbrc	r21, 7
     9e4:	90 58       	subi	r25, 0x80	; 128
     9e6:	44 0f       	add	r20, r20
     9e8:	55 1f       	adc	r21, r21
     9ea:	59 f0       	breq	.+22     	; 0xa02 <__fp_splitA+0x10>
     9ec:	5f 3f       	cpi	r21, 0xFF	; 255
     9ee:	71 f0       	breq	.+28     	; 0xa0c <__fp_splitA+0x1a>
     9f0:	47 95       	ror	r20

000009f2 <__fp_splitA>:
     9f2:	88 0f       	add	r24, r24
     9f4:	97 fb       	bst	r25, 7
     9f6:	99 1f       	adc	r25, r25
     9f8:	61 f0       	breq	.+24     	; 0xa12 <__fp_splitA+0x20>
     9fa:	9f 3f       	cpi	r25, 0xFF	; 255
     9fc:	79 f0       	breq	.+30     	; 0xa1c <__fp_splitA+0x2a>
     9fe:	87 95       	ror	r24
     a00:	08 95       	ret
     a02:	12 16       	cp	r1, r18
     a04:	13 06       	cpc	r1, r19
     a06:	14 06       	cpc	r1, r20
     a08:	55 1f       	adc	r21, r21
     a0a:	f2 cf       	rjmp	.-28     	; 0x9f0 <__fp_split3+0xe>
     a0c:	46 95       	lsr	r20
     a0e:	f1 df       	rcall	.-30     	; 0x9f2 <__fp_splitA>
     a10:	08 c0       	rjmp	.+16     	; 0xa22 <__fp_splitA+0x30>
     a12:	16 16       	cp	r1, r22
     a14:	17 06       	cpc	r1, r23
     a16:	18 06       	cpc	r1, r24
     a18:	99 1f       	adc	r25, r25
     a1a:	f1 cf       	rjmp	.-30     	; 0x9fe <__fp_splitA+0xc>
     a1c:	86 95       	lsr	r24
     a1e:	71 05       	cpc	r23, r1
     a20:	61 05       	cpc	r22, r1
     a22:	08 94       	sec
     a24:	08 95       	ret

00000a26 <__fp_zero>:
     a26:	e8 94       	clt

00000a28 <__fp_szero>:
     a28:	bb 27       	eor	r27, r27
     a2a:	66 27       	eor	r22, r22
     a2c:	77 27       	eor	r23, r23
     a2e:	cb 01       	movw	r24, r22
     a30:	97 f9       	bld	r25, 7
     a32:	08 95       	ret

00000a34 <__gesf2>:
     a34:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__fp_cmp>
     a38:	08 f4       	brcc	.+2      	; 0xa3c <__gesf2+0x8>
     a3a:	8f ef       	ldi	r24, 0xFF	; 255
     a3c:	08 95       	ret

00000a3e <inverse>:
     a3e:	9b 01       	movw	r18, r22
     a40:	ac 01       	movw	r20, r24
     a42:	60 e0       	ldi	r22, 0x00	; 0
     a44:	70 e0       	ldi	r23, 0x00	; 0
     a46:	80 e8       	ldi	r24, 0x80	; 128
     a48:	9f e3       	ldi	r25, 0x3F	; 63
     a4a:	0c 94 99 03 	jmp	0x732	; 0x732 <__divsf3>

00000a4e <__mulsf3>:
     a4e:	0e 94 3a 05 	call	0xa74	; 0xa74 <__mulsf3x>
     a52:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_round>
     a56:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fp_pscA>
     a5a:	38 f0       	brcs	.+14     	; 0xa6a <__mulsf3+0x1c>
     a5c:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscB>
     a60:	20 f0       	brcs	.+8      	; 0xa6a <__mulsf3+0x1c>
     a62:	95 23       	and	r25, r21
     a64:	11 f0       	breq	.+4      	; 0xa6a <__mulsf3+0x1c>
     a66:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_inf>
     a6a:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_nan>
     a6e:	11 24       	eor	r1, r1
     a70:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__fp_szero>

00000a74 <__mulsf3x>:
     a74:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_split3>
     a78:	70 f3       	brcs	.-36     	; 0xa56 <__mulsf3+0x8>

00000a7a <__mulsf3_pse>:
     a7a:	95 9f       	mul	r25, r21
     a7c:	c1 f3       	breq	.-16     	; 0xa6e <__mulsf3+0x20>
     a7e:	95 0f       	add	r25, r21
     a80:	50 e0       	ldi	r21, 0x00	; 0
     a82:	55 1f       	adc	r21, r21
     a84:	62 9f       	mul	r22, r18
     a86:	f0 01       	movw	r30, r0
     a88:	72 9f       	mul	r23, r18
     a8a:	bb 27       	eor	r27, r27
     a8c:	f0 0d       	add	r31, r0
     a8e:	b1 1d       	adc	r27, r1
     a90:	63 9f       	mul	r22, r19
     a92:	aa 27       	eor	r26, r26
     a94:	f0 0d       	add	r31, r0
     a96:	b1 1d       	adc	r27, r1
     a98:	aa 1f       	adc	r26, r26
     a9a:	64 9f       	mul	r22, r20
     a9c:	66 27       	eor	r22, r22
     a9e:	b0 0d       	add	r27, r0
     aa0:	a1 1d       	adc	r26, r1
     aa2:	66 1f       	adc	r22, r22
     aa4:	82 9f       	mul	r24, r18
     aa6:	22 27       	eor	r18, r18
     aa8:	b0 0d       	add	r27, r0
     aaa:	a1 1d       	adc	r26, r1
     aac:	62 1f       	adc	r22, r18
     aae:	73 9f       	mul	r23, r19
     ab0:	b0 0d       	add	r27, r0
     ab2:	a1 1d       	adc	r26, r1
     ab4:	62 1f       	adc	r22, r18
     ab6:	83 9f       	mul	r24, r19
     ab8:	a0 0d       	add	r26, r0
     aba:	61 1d       	adc	r22, r1
     abc:	22 1f       	adc	r18, r18
     abe:	74 9f       	mul	r23, r20
     ac0:	33 27       	eor	r19, r19
     ac2:	a0 0d       	add	r26, r0
     ac4:	61 1d       	adc	r22, r1
     ac6:	23 1f       	adc	r18, r19
     ac8:	84 9f       	mul	r24, r20
     aca:	60 0d       	add	r22, r0
     acc:	21 1d       	adc	r18, r1
     ace:	82 2f       	mov	r24, r18
     ad0:	76 2f       	mov	r23, r22
     ad2:	6a 2f       	mov	r22, r26
     ad4:	11 24       	eor	r1, r1
     ad6:	9f 57       	subi	r25, 0x7F	; 127
     ad8:	50 40       	sbci	r21, 0x00	; 0
     ada:	9a f0       	brmi	.+38     	; 0xb02 <__mulsf3_pse+0x88>
     adc:	f1 f0       	breq	.+60     	; 0xb1a <__mulsf3_pse+0xa0>
     ade:	88 23       	and	r24, r24
     ae0:	4a f0       	brmi	.+18     	; 0xaf4 <__mulsf3_pse+0x7a>
     ae2:	ee 0f       	add	r30, r30
     ae4:	ff 1f       	adc	r31, r31
     ae6:	bb 1f       	adc	r27, r27
     ae8:	66 1f       	adc	r22, r22
     aea:	77 1f       	adc	r23, r23
     aec:	88 1f       	adc	r24, r24
     aee:	91 50       	subi	r25, 0x01	; 1
     af0:	50 40       	sbci	r21, 0x00	; 0
     af2:	a9 f7       	brne	.-22     	; 0xade <__mulsf3_pse+0x64>
     af4:	9e 3f       	cpi	r25, 0xFE	; 254
     af6:	51 05       	cpc	r21, r1
     af8:	80 f0       	brcs	.+32     	; 0xb1a <__mulsf3_pse+0xa0>
     afa:	0c 94 a2 04 	jmp	0x944	; 0x944 <__fp_inf>
     afe:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__fp_szero>
     b02:	5f 3f       	cpi	r21, 0xFF	; 255
     b04:	e4 f3       	brlt	.-8      	; 0xafe <__mulsf3_pse+0x84>
     b06:	98 3e       	cpi	r25, 0xE8	; 232
     b08:	d4 f3       	brlt	.-12     	; 0xafe <__mulsf3_pse+0x84>
     b0a:	86 95       	lsr	r24
     b0c:	77 95       	ror	r23
     b0e:	67 95       	ror	r22
     b10:	b7 95       	ror	r27
     b12:	f7 95       	ror	r31
     b14:	e7 95       	ror	r30
     b16:	9f 5f       	subi	r25, 0xFF	; 255
     b18:	c1 f7       	brne	.-16     	; 0xb0a <__mulsf3_pse+0x90>
     b1a:	fe 2b       	or	r31, r30
     b1c:	88 0f       	add	r24, r24
     b1e:	91 1d       	adc	r25, r1
     b20:	96 95       	lsr	r25
     b22:	87 95       	ror	r24
     b24:	97 f9       	bld	r25, 7
     b26:	08 95       	ret

00000b28 <square>:
     b28:	9b 01       	movw	r18, r22
     b2a:	ac 01       	movw	r20, r24
     b2c:	0c 94 27 05 	jmp	0xa4e	; 0xa4e <__mulsf3>

00000b30 <vfprintf>:
     b30:	a0 e1       	ldi	r26, 0x10	; 16
     b32:	b0 e0       	ldi	r27, 0x00	; 0
     b34:	ee e9       	ldi	r30, 0x9E	; 158
     b36:	f5 e0       	ldi	r31, 0x05	; 5
     b38:	0c 94 15 09 	jmp	0x122a	; 0x122a <__prologue_saves__>
     b3c:	7c 01       	movw	r14, r24
     b3e:	1b 01       	movw	r2, r22
     b40:	6a 01       	movw	r12, r20
     b42:	fc 01       	movw	r30, r24
     b44:	17 82       	std	Z+7, r1	; 0x07
     b46:	16 82       	std	Z+6, r1	; 0x06
     b48:	83 81       	ldd	r24, Z+3	; 0x03
     b4a:	81 ff       	sbrs	r24, 1
     b4c:	44 c3       	rjmp	.+1672   	; 0x11d6 <vfprintf+0x6a6>
     b4e:	9e 01       	movw	r18, r28
     b50:	2f 5f       	subi	r18, 0xFF	; 255
     b52:	3f 4f       	sbci	r19, 0xFF	; 255
     b54:	39 01       	movw	r6, r18
     b56:	f7 01       	movw	r30, r14
     b58:	93 81       	ldd	r25, Z+3	; 0x03
     b5a:	f1 01       	movw	r30, r2
     b5c:	93 fd       	sbrc	r25, 3
     b5e:	85 91       	lpm	r24, Z+
     b60:	93 ff       	sbrs	r25, 3
     b62:	81 91       	ld	r24, Z+
     b64:	1f 01       	movw	r2, r30
     b66:	88 23       	and	r24, r24
     b68:	09 f4       	brne	.+2      	; 0xb6c <vfprintf+0x3c>
     b6a:	31 c3       	rjmp	.+1634   	; 0x11ce <vfprintf+0x69e>
     b6c:	85 32       	cpi	r24, 0x25	; 37
     b6e:	39 f4       	brne	.+14     	; 0xb7e <vfprintf+0x4e>
     b70:	93 fd       	sbrc	r25, 3
     b72:	85 91       	lpm	r24, Z+
     b74:	93 ff       	sbrs	r25, 3
     b76:	81 91       	ld	r24, Z+
     b78:	1f 01       	movw	r2, r30
     b7a:	85 32       	cpi	r24, 0x25	; 37
     b7c:	39 f4       	brne	.+14     	; 0xb8c <vfprintf+0x5c>
     b7e:	b7 01       	movw	r22, r14
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     b86:	56 01       	movw	r10, r12
     b88:	65 01       	movw	r12, r10
     b8a:	e5 cf       	rjmp	.-54     	; 0xb56 <vfprintf+0x26>
     b8c:	10 e0       	ldi	r17, 0x00	; 0
     b8e:	51 2c       	mov	r5, r1
     b90:	91 2c       	mov	r9, r1
     b92:	ff e1       	ldi	r31, 0x1F	; 31
     b94:	f9 15       	cp	r31, r9
     b96:	d8 f0       	brcs	.+54     	; 0xbce <vfprintf+0x9e>
     b98:	8b 32       	cpi	r24, 0x2B	; 43
     b9a:	79 f0       	breq	.+30     	; 0xbba <vfprintf+0x8a>
     b9c:	38 f4       	brcc	.+14     	; 0xbac <vfprintf+0x7c>
     b9e:	80 32       	cpi	r24, 0x20	; 32
     ba0:	79 f0       	breq	.+30     	; 0xbc0 <vfprintf+0x90>
     ba2:	83 32       	cpi	r24, 0x23	; 35
     ba4:	a1 f4       	brne	.+40     	; 0xbce <vfprintf+0x9e>
     ba6:	f9 2d       	mov	r31, r9
     ba8:	f0 61       	ori	r31, 0x10	; 16
     baa:	2e c0       	rjmp	.+92     	; 0xc08 <vfprintf+0xd8>
     bac:	8d 32       	cpi	r24, 0x2D	; 45
     bae:	61 f0       	breq	.+24     	; 0xbc8 <vfprintf+0x98>
     bb0:	80 33       	cpi	r24, 0x30	; 48
     bb2:	69 f4       	brne	.+26     	; 0xbce <vfprintf+0x9e>
     bb4:	29 2d       	mov	r18, r9
     bb6:	21 60       	ori	r18, 0x01	; 1
     bb8:	2d c0       	rjmp	.+90     	; 0xc14 <vfprintf+0xe4>
     bba:	39 2d       	mov	r19, r9
     bbc:	32 60       	ori	r19, 0x02	; 2
     bbe:	93 2e       	mov	r9, r19
     bc0:	89 2d       	mov	r24, r9
     bc2:	84 60       	ori	r24, 0x04	; 4
     bc4:	98 2e       	mov	r9, r24
     bc6:	2a c0       	rjmp	.+84     	; 0xc1c <vfprintf+0xec>
     bc8:	e9 2d       	mov	r30, r9
     bca:	e8 60       	ori	r30, 0x08	; 8
     bcc:	15 c0       	rjmp	.+42     	; 0xbf8 <vfprintf+0xc8>
     bce:	97 fc       	sbrc	r9, 7
     bd0:	2d c0       	rjmp	.+90     	; 0xc2c <vfprintf+0xfc>
     bd2:	20 ed       	ldi	r18, 0xD0	; 208
     bd4:	28 0f       	add	r18, r24
     bd6:	2a 30       	cpi	r18, 0x0A	; 10
     bd8:	88 f4       	brcc	.+34     	; 0xbfc <vfprintf+0xcc>
     bda:	96 fe       	sbrs	r9, 6
     bdc:	06 c0       	rjmp	.+12     	; 0xbea <vfprintf+0xba>
     bde:	3a e0       	ldi	r19, 0x0A	; 10
     be0:	13 9f       	mul	r17, r19
     be2:	20 0d       	add	r18, r0
     be4:	11 24       	eor	r1, r1
     be6:	12 2f       	mov	r17, r18
     be8:	19 c0       	rjmp	.+50     	; 0xc1c <vfprintf+0xec>
     bea:	8a e0       	ldi	r24, 0x0A	; 10
     bec:	58 9e       	mul	r5, r24
     bee:	20 0d       	add	r18, r0
     bf0:	11 24       	eor	r1, r1
     bf2:	52 2e       	mov	r5, r18
     bf4:	e9 2d       	mov	r30, r9
     bf6:	e0 62       	ori	r30, 0x20	; 32
     bf8:	9e 2e       	mov	r9, r30
     bfa:	10 c0       	rjmp	.+32     	; 0xc1c <vfprintf+0xec>
     bfc:	8e 32       	cpi	r24, 0x2E	; 46
     bfe:	31 f4       	brne	.+12     	; 0xc0c <vfprintf+0xdc>
     c00:	96 fc       	sbrc	r9, 6
     c02:	e5 c2       	rjmp	.+1482   	; 0x11ce <vfprintf+0x69e>
     c04:	f9 2d       	mov	r31, r9
     c06:	f0 64       	ori	r31, 0x40	; 64
     c08:	9f 2e       	mov	r9, r31
     c0a:	08 c0       	rjmp	.+16     	; 0xc1c <vfprintf+0xec>
     c0c:	8c 36       	cpi	r24, 0x6C	; 108
     c0e:	21 f4       	brne	.+8      	; 0xc18 <vfprintf+0xe8>
     c10:	29 2d       	mov	r18, r9
     c12:	20 68       	ori	r18, 0x80	; 128
     c14:	92 2e       	mov	r9, r18
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <vfprintf+0xec>
     c18:	88 36       	cpi	r24, 0x68	; 104
     c1a:	41 f4       	brne	.+16     	; 0xc2c <vfprintf+0xfc>
     c1c:	f1 01       	movw	r30, r2
     c1e:	93 fd       	sbrc	r25, 3
     c20:	85 91       	lpm	r24, Z+
     c22:	93 ff       	sbrs	r25, 3
     c24:	81 91       	ld	r24, Z+
     c26:	1f 01       	movw	r2, r30
     c28:	81 11       	cpse	r24, r1
     c2a:	b3 cf       	rjmp	.-154    	; 0xb92 <vfprintf+0x62>
     c2c:	9b eb       	ldi	r25, 0xBB	; 187
     c2e:	98 0f       	add	r25, r24
     c30:	93 30       	cpi	r25, 0x03	; 3
     c32:	20 f4       	brcc	.+8      	; 0xc3c <vfprintf+0x10c>
     c34:	99 2d       	mov	r25, r9
     c36:	90 61       	ori	r25, 0x10	; 16
     c38:	80 5e       	subi	r24, 0xE0	; 224
     c3a:	07 c0       	rjmp	.+14     	; 0xc4a <vfprintf+0x11a>
     c3c:	9b e9       	ldi	r25, 0x9B	; 155
     c3e:	98 0f       	add	r25, r24
     c40:	93 30       	cpi	r25, 0x03	; 3
     c42:	08 f0       	brcs	.+2      	; 0xc46 <vfprintf+0x116>
     c44:	66 c1       	rjmp	.+716    	; 0xf12 <vfprintf+0x3e2>
     c46:	99 2d       	mov	r25, r9
     c48:	9f 7e       	andi	r25, 0xEF	; 239
     c4a:	96 ff       	sbrs	r25, 6
     c4c:	16 e0       	ldi	r17, 0x06	; 6
     c4e:	9f 73       	andi	r25, 0x3F	; 63
     c50:	99 2e       	mov	r9, r25
     c52:	85 36       	cpi	r24, 0x65	; 101
     c54:	19 f4       	brne	.+6      	; 0xc5c <vfprintf+0x12c>
     c56:	90 64       	ori	r25, 0x40	; 64
     c58:	99 2e       	mov	r9, r25
     c5a:	08 c0       	rjmp	.+16     	; 0xc6c <vfprintf+0x13c>
     c5c:	86 36       	cpi	r24, 0x66	; 102
     c5e:	21 f4       	brne	.+8      	; 0xc68 <vfprintf+0x138>
     c60:	39 2f       	mov	r19, r25
     c62:	30 68       	ori	r19, 0x80	; 128
     c64:	93 2e       	mov	r9, r19
     c66:	02 c0       	rjmp	.+4      	; 0xc6c <vfprintf+0x13c>
     c68:	11 11       	cpse	r17, r1
     c6a:	11 50       	subi	r17, 0x01	; 1
     c6c:	97 fe       	sbrs	r9, 7
     c6e:	07 c0       	rjmp	.+14     	; 0xc7e <vfprintf+0x14e>
     c70:	1c 33       	cpi	r17, 0x3C	; 60
     c72:	50 f4       	brcc	.+20     	; 0xc88 <vfprintf+0x158>
     c74:	44 24       	eor	r4, r4
     c76:	43 94       	inc	r4
     c78:	41 0e       	add	r4, r17
     c7a:	27 e0       	ldi	r18, 0x07	; 7
     c7c:	0b c0       	rjmp	.+22     	; 0xc94 <vfprintf+0x164>
     c7e:	18 30       	cpi	r17, 0x08	; 8
     c80:	38 f0       	brcs	.+14     	; 0xc90 <vfprintf+0x160>
     c82:	27 e0       	ldi	r18, 0x07	; 7
     c84:	17 e0       	ldi	r17, 0x07	; 7
     c86:	05 c0       	rjmp	.+10     	; 0xc92 <vfprintf+0x162>
     c88:	27 e0       	ldi	r18, 0x07	; 7
     c8a:	9c e3       	ldi	r25, 0x3C	; 60
     c8c:	49 2e       	mov	r4, r25
     c8e:	02 c0       	rjmp	.+4      	; 0xc94 <vfprintf+0x164>
     c90:	21 2f       	mov	r18, r17
     c92:	41 2c       	mov	r4, r1
     c94:	56 01       	movw	r10, r12
     c96:	84 e0       	ldi	r24, 0x04	; 4
     c98:	a8 0e       	add	r10, r24
     c9a:	b1 1c       	adc	r11, r1
     c9c:	f6 01       	movw	r30, r12
     c9e:	60 81       	ld	r22, Z
     ca0:	71 81       	ldd	r23, Z+1	; 0x01
     ca2:	82 81       	ldd	r24, Z+2	; 0x02
     ca4:	93 81       	ldd	r25, Z+3	; 0x03
     ca6:	04 2d       	mov	r16, r4
     ca8:	a3 01       	movw	r20, r6
     caa:	0e 94 4c 09 	call	0x1298	; 0x1298 <__ftoa_engine>
     cae:	6c 01       	movw	r12, r24
     cb0:	f9 81       	ldd	r31, Y+1	; 0x01
     cb2:	fc 87       	std	Y+12, r31	; 0x0c
     cb4:	f0 ff       	sbrs	r31, 0
     cb6:	02 c0       	rjmp	.+4      	; 0xcbc <vfprintf+0x18c>
     cb8:	f3 ff       	sbrs	r31, 3
     cba:	06 c0       	rjmp	.+12     	; 0xcc8 <vfprintf+0x198>
     cbc:	91 fc       	sbrc	r9, 1
     cbe:	06 c0       	rjmp	.+12     	; 0xccc <vfprintf+0x19c>
     cc0:	92 fe       	sbrs	r9, 2
     cc2:	06 c0       	rjmp	.+12     	; 0xcd0 <vfprintf+0x1a0>
     cc4:	00 e2       	ldi	r16, 0x20	; 32
     cc6:	05 c0       	rjmp	.+10     	; 0xcd2 <vfprintf+0x1a2>
     cc8:	0d e2       	ldi	r16, 0x2D	; 45
     cca:	03 c0       	rjmp	.+6      	; 0xcd2 <vfprintf+0x1a2>
     ccc:	0b e2       	ldi	r16, 0x2B	; 43
     cce:	01 c0       	rjmp	.+2      	; 0xcd2 <vfprintf+0x1a2>
     cd0:	00 e0       	ldi	r16, 0x00	; 0
     cd2:	8c 85       	ldd	r24, Y+12	; 0x0c
     cd4:	8c 70       	andi	r24, 0x0C	; 12
     cd6:	19 f0       	breq	.+6      	; 0xcde <vfprintf+0x1ae>
     cd8:	01 11       	cpse	r16, r1
     cda:	5a c2       	rjmp	.+1204   	; 0x1190 <vfprintf+0x660>
     cdc:	9b c2       	rjmp	.+1334   	; 0x1214 <vfprintf+0x6e4>
     cde:	97 fe       	sbrs	r9, 7
     ce0:	10 c0       	rjmp	.+32     	; 0xd02 <vfprintf+0x1d2>
     ce2:	4c 0c       	add	r4, r12
     ce4:	fc 85       	ldd	r31, Y+12	; 0x0c
     ce6:	f4 ff       	sbrs	r31, 4
     ce8:	04 c0       	rjmp	.+8      	; 0xcf2 <vfprintf+0x1c2>
     cea:	8a 81       	ldd	r24, Y+2	; 0x02
     cec:	81 33       	cpi	r24, 0x31	; 49
     cee:	09 f4       	brne	.+2      	; 0xcf2 <vfprintf+0x1c2>
     cf0:	4a 94       	dec	r4
     cf2:	14 14       	cp	r1, r4
     cf4:	74 f5       	brge	.+92     	; 0xd52 <vfprintf+0x222>
     cf6:	28 e0       	ldi	r18, 0x08	; 8
     cf8:	24 15       	cp	r18, r4
     cfa:	78 f5       	brcc	.+94     	; 0xd5a <vfprintf+0x22a>
     cfc:	88 e0       	ldi	r24, 0x08	; 8
     cfe:	48 2e       	mov	r4, r24
     d00:	2c c0       	rjmp	.+88     	; 0xd5a <vfprintf+0x22a>
     d02:	96 fc       	sbrc	r9, 6
     d04:	2a c0       	rjmp	.+84     	; 0xd5a <vfprintf+0x22a>
     d06:	81 2f       	mov	r24, r17
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	8c 15       	cp	r24, r12
     d0c:	9d 05       	cpc	r25, r13
     d0e:	9c f0       	brlt	.+38     	; 0xd36 <vfprintf+0x206>
     d10:	3c ef       	ldi	r19, 0xFC	; 252
     d12:	c3 16       	cp	r12, r19
     d14:	3f ef       	ldi	r19, 0xFF	; 255
     d16:	d3 06       	cpc	r13, r19
     d18:	74 f0       	brlt	.+28     	; 0xd36 <vfprintf+0x206>
     d1a:	89 2d       	mov	r24, r9
     d1c:	80 68       	ori	r24, 0x80	; 128
     d1e:	98 2e       	mov	r9, r24
     d20:	0a c0       	rjmp	.+20     	; 0xd36 <vfprintf+0x206>
     d22:	e2 e0       	ldi	r30, 0x02	; 2
     d24:	f0 e0       	ldi	r31, 0x00	; 0
     d26:	ec 0f       	add	r30, r28
     d28:	fd 1f       	adc	r31, r29
     d2a:	e1 0f       	add	r30, r17
     d2c:	f1 1d       	adc	r31, r1
     d2e:	80 81       	ld	r24, Z
     d30:	80 33       	cpi	r24, 0x30	; 48
     d32:	19 f4       	brne	.+6      	; 0xd3a <vfprintf+0x20a>
     d34:	11 50       	subi	r17, 0x01	; 1
     d36:	11 11       	cpse	r17, r1
     d38:	f4 cf       	rjmp	.-24     	; 0xd22 <vfprintf+0x1f2>
     d3a:	97 fe       	sbrs	r9, 7
     d3c:	0e c0       	rjmp	.+28     	; 0xd5a <vfprintf+0x22a>
     d3e:	44 24       	eor	r4, r4
     d40:	43 94       	inc	r4
     d42:	41 0e       	add	r4, r17
     d44:	81 2f       	mov	r24, r17
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	c8 16       	cp	r12, r24
     d4a:	d9 06       	cpc	r13, r25
     d4c:	2c f4       	brge	.+10     	; 0xd58 <vfprintf+0x228>
     d4e:	1c 19       	sub	r17, r12
     d50:	04 c0       	rjmp	.+8      	; 0xd5a <vfprintf+0x22a>
     d52:	44 24       	eor	r4, r4
     d54:	43 94       	inc	r4
     d56:	01 c0       	rjmp	.+2      	; 0xd5a <vfprintf+0x22a>
     d58:	10 e0       	ldi	r17, 0x00	; 0
     d5a:	97 fe       	sbrs	r9, 7
     d5c:	06 c0       	rjmp	.+12     	; 0xd6a <vfprintf+0x23a>
     d5e:	1c 14       	cp	r1, r12
     d60:	1d 04       	cpc	r1, r13
     d62:	34 f4       	brge	.+12     	; 0xd70 <vfprintf+0x240>
     d64:	c6 01       	movw	r24, r12
     d66:	01 96       	adiw	r24, 0x01	; 1
     d68:	05 c0       	rjmp	.+10     	; 0xd74 <vfprintf+0x244>
     d6a:	85 e0       	ldi	r24, 0x05	; 5
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	02 c0       	rjmp	.+4      	; 0xd74 <vfprintf+0x244>
     d70:	81 e0       	ldi	r24, 0x01	; 1
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	01 11       	cpse	r16, r1
     d76:	01 96       	adiw	r24, 0x01	; 1
     d78:	11 23       	and	r17, r17
     d7a:	31 f0       	breq	.+12     	; 0xd88 <vfprintf+0x258>
     d7c:	21 2f       	mov	r18, r17
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	2f 5f       	subi	r18, 0xFF	; 255
     d82:	3f 4f       	sbci	r19, 0xFF	; 255
     d84:	82 0f       	add	r24, r18
     d86:	93 1f       	adc	r25, r19
     d88:	25 2d       	mov	r18, r5
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	82 17       	cp	r24, r18
     d8e:	93 07       	cpc	r25, r19
     d90:	14 f4       	brge	.+4      	; 0xd96 <vfprintf+0x266>
     d92:	58 1a       	sub	r5, r24
     d94:	01 c0       	rjmp	.+2      	; 0xd98 <vfprintf+0x268>
     d96:	51 2c       	mov	r5, r1
     d98:	89 2d       	mov	r24, r9
     d9a:	89 70       	andi	r24, 0x09	; 9
     d9c:	49 f4       	brne	.+18     	; 0xdb0 <vfprintf+0x280>
     d9e:	55 20       	and	r5, r5
     da0:	39 f0       	breq	.+14     	; 0xdb0 <vfprintf+0x280>
     da2:	b7 01       	movw	r22, r14
     da4:	80 e2       	ldi	r24, 0x20	; 32
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     dac:	5a 94       	dec	r5
     dae:	f7 cf       	rjmp	.-18     	; 0xd9e <vfprintf+0x26e>
     db0:	00 23       	and	r16, r16
     db2:	29 f0       	breq	.+10     	; 0xdbe <vfprintf+0x28e>
     db4:	b7 01       	movw	r22, r14
     db6:	80 2f       	mov	r24, r16
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     dbe:	93 fc       	sbrc	r9, 3
     dc0:	09 c0       	rjmp	.+18     	; 0xdd4 <vfprintf+0x2a4>
     dc2:	55 20       	and	r5, r5
     dc4:	39 f0       	breq	.+14     	; 0xdd4 <vfprintf+0x2a4>
     dc6:	b7 01       	movw	r22, r14
     dc8:	80 e3       	ldi	r24, 0x30	; 48
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     dd0:	5a 94       	dec	r5
     dd2:	f7 cf       	rjmp	.-18     	; 0xdc2 <vfprintf+0x292>
     dd4:	97 fe       	sbrs	r9, 7
     dd6:	4c c0       	rjmp	.+152    	; 0xe70 <vfprintf+0x340>
     dd8:	46 01       	movw	r8, r12
     dda:	d7 fe       	sbrs	r13, 7
     ddc:	02 c0       	rjmp	.+4      	; 0xde2 <vfprintf+0x2b2>
     dde:	81 2c       	mov	r8, r1
     de0:	91 2c       	mov	r9, r1
     de2:	c6 01       	movw	r24, r12
     de4:	88 19       	sub	r24, r8
     de6:	99 09       	sbc	r25, r9
     de8:	f3 01       	movw	r30, r6
     dea:	e8 0f       	add	r30, r24
     dec:	f9 1f       	adc	r31, r25
     dee:	fe 87       	std	Y+14, r31	; 0x0e
     df0:	ed 87       	std	Y+13, r30	; 0x0d
     df2:	96 01       	movw	r18, r12
     df4:	24 19       	sub	r18, r4
     df6:	31 09       	sbc	r19, r1
     df8:	38 8b       	std	Y+16, r19	; 0x10
     dfa:	2f 87       	std	Y+15, r18	; 0x0f
     dfc:	01 2f       	mov	r16, r17
     dfe:	10 e0       	ldi	r17, 0x00	; 0
     e00:	11 95       	neg	r17
     e02:	01 95       	neg	r16
     e04:	11 09       	sbc	r17, r1
     e06:	3f ef       	ldi	r19, 0xFF	; 255
     e08:	83 16       	cp	r8, r19
     e0a:	93 06       	cpc	r9, r19
     e0c:	29 f4       	brne	.+10     	; 0xe18 <vfprintf+0x2e8>
     e0e:	b7 01       	movw	r22, r14
     e10:	8e e2       	ldi	r24, 0x2E	; 46
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     e18:	c8 14       	cp	r12, r8
     e1a:	d9 04       	cpc	r13, r9
     e1c:	4c f0       	brlt	.+18     	; 0xe30 <vfprintf+0x300>
     e1e:	8f 85       	ldd	r24, Y+15	; 0x0f
     e20:	98 89       	ldd	r25, Y+16	; 0x10
     e22:	88 15       	cp	r24, r8
     e24:	99 05       	cpc	r25, r9
     e26:	24 f4       	brge	.+8      	; 0xe30 <vfprintf+0x300>
     e28:	ed 85       	ldd	r30, Y+13	; 0x0d
     e2a:	fe 85       	ldd	r31, Y+14	; 0x0e
     e2c:	81 81       	ldd	r24, Z+1	; 0x01
     e2e:	01 c0       	rjmp	.+2      	; 0xe32 <vfprintf+0x302>
     e30:	80 e3       	ldi	r24, 0x30	; 48
     e32:	f1 e0       	ldi	r31, 0x01	; 1
     e34:	8f 1a       	sub	r8, r31
     e36:	91 08       	sbc	r9, r1
     e38:	2d 85       	ldd	r18, Y+13	; 0x0d
     e3a:	3e 85       	ldd	r19, Y+14	; 0x0e
     e3c:	2f 5f       	subi	r18, 0xFF	; 255
     e3e:	3f 4f       	sbci	r19, 0xFF	; 255
     e40:	3e 87       	std	Y+14, r19	; 0x0e
     e42:	2d 87       	std	Y+13, r18	; 0x0d
     e44:	80 16       	cp	r8, r16
     e46:	91 06       	cpc	r9, r17
     e48:	2c f0       	brlt	.+10     	; 0xe54 <vfprintf+0x324>
     e4a:	b7 01       	movw	r22, r14
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     e52:	d9 cf       	rjmp	.-78     	; 0xe06 <vfprintf+0x2d6>
     e54:	c8 14       	cp	r12, r8
     e56:	d9 04       	cpc	r13, r9
     e58:	41 f4       	brne	.+16     	; 0xe6a <vfprintf+0x33a>
     e5a:	9a 81       	ldd	r25, Y+2	; 0x02
     e5c:	96 33       	cpi	r25, 0x36	; 54
     e5e:	20 f4       	brcc	.+8      	; 0xe68 <vfprintf+0x338>
     e60:	95 33       	cpi	r25, 0x35	; 53
     e62:	19 f4       	brne	.+6      	; 0xe6a <vfprintf+0x33a>
     e64:	3c 85       	ldd	r19, Y+12	; 0x0c
     e66:	34 ff       	sbrs	r19, 4
     e68:	81 e3       	ldi	r24, 0x31	; 49
     e6a:	b7 01       	movw	r22, r14
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	4e c0       	rjmp	.+156    	; 0xf0c <vfprintf+0x3dc>
     e70:	8a 81       	ldd	r24, Y+2	; 0x02
     e72:	81 33       	cpi	r24, 0x31	; 49
     e74:	19 f0       	breq	.+6      	; 0xe7c <vfprintf+0x34c>
     e76:	9c 85       	ldd	r25, Y+12	; 0x0c
     e78:	9f 7e       	andi	r25, 0xEF	; 239
     e7a:	9c 87       	std	Y+12, r25	; 0x0c
     e7c:	b7 01       	movw	r22, r14
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     e84:	11 11       	cpse	r17, r1
     e86:	05 c0       	rjmp	.+10     	; 0xe92 <vfprintf+0x362>
     e88:	94 fc       	sbrc	r9, 4
     e8a:	18 c0       	rjmp	.+48     	; 0xebc <vfprintf+0x38c>
     e8c:	85 e6       	ldi	r24, 0x65	; 101
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	17 c0       	rjmp	.+46     	; 0xec0 <vfprintf+0x390>
     e92:	b7 01       	movw	r22, r14
     e94:	8e e2       	ldi	r24, 0x2E	; 46
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     e9c:	1e 5f       	subi	r17, 0xFE	; 254
     e9e:	82 e0       	ldi	r24, 0x02	; 2
     ea0:	01 e0       	ldi	r16, 0x01	; 1
     ea2:	08 0f       	add	r16, r24
     ea4:	f3 01       	movw	r30, r6
     ea6:	e8 0f       	add	r30, r24
     ea8:	f1 1d       	adc	r31, r1
     eaa:	80 81       	ld	r24, Z
     eac:	b7 01       	movw	r22, r14
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     eb4:	80 2f       	mov	r24, r16
     eb6:	01 13       	cpse	r16, r17
     eb8:	f3 cf       	rjmp	.-26     	; 0xea0 <vfprintf+0x370>
     eba:	e6 cf       	rjmp	.-52     	; 0xe88 <vfprintf+0x358>
     ebc:	85 e4       	ldi	r24, 0x45	; 69
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	b7 01       	movw	r22, r14
     ec2:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     ec6:	d7 fc       	sbrc	r13, 7
     ec8:	06 c0       	rjmp	.+12     	; 0xed6 <vfprintf+0x3a6>
     eca:	c1 14       	cp	r12, r1
     ecc:	d1 04       	cpc	r13, r1
     ece:	41 f4       	brne	.+16     	; 0xee0 <vfprintf+0x3b0>
     ed0:	ec 85       	ldd	r30, Y+12	; 0x0c
     ed2:	e4 ff       	sbrs	r30, 4
     ed4:	05 c0       	rjmp	.+10     	; 0xee0 <vfprintf+0x3b0>
     ed6:	d1 94       	neg	r13
     ed8:	c1 94       	neg	r12
     eda:	d1 08       	sbc	r13, r1
     edc:	8d e2       	ldi	r24, 0x2D	; 45
     ede:	01 c0       	rjmp	.+2      	; 0xee2 <vfprintf+0x3b2>
     ee0:	8b e2       	ldi	r24, 0x2B	; 43
     ee2:	b7 01       	movw	r22, r14
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     eea:	80 e3       	ldi	r24, 0x30	; 48
     eec:	2a e0       	ldi	r18, 0x0A	; 10
     eee:	c2 16       	cp	r12, r18
     ef0:	d1 04       	cpc	r13, r1
     ef2:	2c f0       	brlt	.+10     	; 0xefe <vfprintf+0x3ce>
     ef4:	8f 5f       	subi	r24, 0xFF	; 255
     ef6:	fa e0       	ldi	r31, 0x0A	; 10
     ef8:	cf 1a       	sub	r12, r31
     efa:	d1 08       	sbc	r13, r1
     efc:	f7 cf       	rjmp	.-18     	; 0xeec <vfprintf+0x3bc>
     efe:	b7 01       	movw	r22, r14
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     f06:	b7 01       	movw	r22, r14
     f08:	c6 01       	movw	r24, r12
     f0a:	c0 96       	adiw	r24, 0x30	; 48
     f0c:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     f10:	54 c1       	rjmp	.+680    	; 0x11ba <vfprintf+0x68a>
     f12:	83 36       	cpi	r24, 0x63	; 99
     f14:	31 f0       	breq	.+12     	; 0xf22 <vfprintf+0x3f2>
     f16:	83 37       	cpi	r24, 0x73	; 115
     f18:	79 f0       	breq	.+30     	; 0xf38 <vfprintf+0x408>
     f1a:	83 35       	cpi	r24, 0x53	; 83
     f1c:	09 f0       	breq	.+2      	; 0xf20 <vfprintf+0x3f0>
     f1e:	56 c0       	rjmp	.+172    	; 0xfcc <vfprintf+0x49c>
     f20:	20 c0       	rjmp	.+64     	; 0xf62 <vfprintf+0x432>
     f22:	56 01       	movw	r10, r12
     f24:	32 e0       	ldi	r19, 0x02	; 2
     f26:	a3 0e       	add	r10, r19
     f28:	b1 1c       	adc	r11, r1
     f2a:	f6 01       	movw	r30, r12
     f2c:	80 81       	ld	r24, Z
     f2e:	89 83       	std	Y+1, r24	; 0x01
     f30:	01 e0       	ldi	r16, 0x01	; 1
     f32:	10 e0       	ldi	r17, 0x00	; 0
     f34:	63 01       	movw	r12, r6
     f36:	12 c0       	rjmp	.+36     	; 0xf5c <vfprintf+0x42c>
     f38:	56 01       	movw	r10, r12
     f3a:	f2 e0       	ldi	r31, 0x02	; 2
     f3c:	af 0e       	add	r10, r31
     f3e:	b1 1c       	adc	r11, r1
     f40:	f6 01       	movw	r30, r12
     f42:	c0 80       	ld	r12, Z
     f44:	d1 80       	ldd	r13, Z+1	; 0x01
     f46:	96 fe       	sbrs	r9, 6
     f48:	03 c0       	rjmp	.+6      	; 0xf50 <vfprintf+0x420>
     f4a:	61 2f       	mov	r22, r17
     f4c:	70 e0       	ldi	r23, 0x00	; 0
     f4e:	02 c0       	rjmp	.+4      	; 0xf54 <vfprintf+0x424>
     f50:	6f ef       	ldi	r22, 0xFF	; 255
     f52:	7f ef       	ldi	r23, 0xFF	; 255
     f54:	c6 01       	movw	r24, r12
     f56:	0e 94 2f 0a 	call	0x145e	; 0x145e <strnlen>
     f5a:	8c 01       	movw	r16, r24
     f5c:	f9 2d       	mov	r31, r9
     f5e:	ff 77       	andi	r31, 0x7F	; 127
     f60:	14 c0       	rjmp	.+40     	; 0xf8a <vfprintf+0x45a>
     f62:	56 01       	movw	r10, r12
     f64:	22 e0       	ldi	r18, 0x02	; 2
     f66:	a2 0e       	add	r10, r18
     f68:	b1 1c       	adc	r11, r1
     f6a:	f6 01       	movw	r30, r12
     f6c:	c0 80       	ld	r12, Z
     f6e:	d1 80       	ldd	r13, Z+1	; 0x01
     f70:	96 fe       	sbrs	r9, 6
     f72:	03 c0       	rjmp	.+6      	; 0xf7a <vfprintf+0x44a>
     f74:	61 2f       	mov	r22, r17
     f76:	70 e0       	ldi	r23, 0x00	; 0
     f78:	02 c0       	rjmp	.+4      	; 0xf7e <vfprintf+0x44e>
     f7a:	6f ef       	ldi	r22, 0xFF	; 255
     f7c:	7f ef       	ldi	r23, 0xFF	; 255
     f7e:	c6 01       	movw	r24, r12
     f80:	0e 94 24 0a 	call	0x1448	; 0x1448 <strnlen_P>
     f84:	8c 01       	movw	r16, r24
     f86:	f9 2d       	mov	r31, r9
     f88:	f0 68       	ori	r31, 0x80	; 128
     f8a:	9f 2e       	mov	r9, r31
     f8c:	f3 fd       	sbrc	r31, 3
     f8e:	1a c0       	rjmp	.+52     	; 0xfc4 <vfprintf+0x494>
     f90:	85 2d       	mov	r24, r5
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	08 17       	cp	r16, r24
     f96:	19 07       	cpc	r17, r25
     f98:	a8 f4       	brcc	.+42     	; 0xfc4 <vfprintf+0x494>
     f9a:	b7 01       	movw	r22, r14
     f9c:	80 e2       	ldi	r24, 0x20	; 32
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     fa4:	5a 94       	dec	r5
     fa6:	f4 cf       	rjmp	.-24     	; 0xf90 <vfprintf+0x460>
     fa8:	f6 01       	movw	r30, r12
     faa:	97 fc       	sbrc	r9, 7
     fac:	85 91       	lpm	r24, Z+
     fae:	97 fe       	sbrs	r9, 7
     fb0:	81 91       	ld	r24, Z+
     fb2:	6f 01       	movw	r12, r30
     fb4:	b7 01       	movw	r22, r14
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
     fbc:	51 10       	cpse	r5, r1
     fbe:	5a 94       	dec	r5
     fc0:	01 50       	subi	r16, 0x01	; 1
     fc2:	11 09       	sbc	r17, r1
     fc4:	01 15       	cp	r16, r1
     fc6:	11 05       	cpc	r17, r1
     fc8:	79 f7       	brne	.-34     	; 0xfa8 <vfprintf+0x478>
     fca:	f7 c0       	rjmp	.+494    	; 0x11ba <vfprintf+0x68a>
     fcc:	84 36       	cpi	r24, 0x64	; 100
     fce:	11 f0       	breq	.+4      	; 0xfd4 <vfprintf+0x4a4>
     fd0:	89 36       	cpi	r24, 0x69	; 105
     fd2:	61 f5       	brne	.+88     	; 0x102c <vfprintf+0x4fc>
     fd4:	56 01       	movw	r10, r12
     fd6:	97 fe       	sbrs	r9, 7
     fd8:	09 c0       	rjmp	.+18     	; 0xfec <vfprintf+0x4bc>
     fda:	24 e0       	ldi	r18, 0x04	; 4
     fdc:	a2 0e       	add	r10, r18
     fde:	b1 1c       	adc	r11, r1
     fe0:	f6 01       	movw	r30, r12
     fe2:	60 81       	ld	r22, Z
     fe4:	71 81       	ldd	r23, Z+1	; 0x01
     fe6:	82 81       	ldd	r24, Z+2	; 0x02
     fe8:	93 81       	ldd	r25, Z+3	; 0x03
     fea:	0a c0       	rjmp	.+20     	; 0x1000 <vfprintf+0x4d0>
     fec:	f2 e0       	ldi	r31, 0x02	; 2
     fee:	af 0e       	add	r10, r31
     ff0:	b1 1c       	adc	r11, r1
     ff2:	f6 01       	movw	r30, r12
     ff4:	60 81       	ld	r22, Z
     ff6:	71 81       	ldd	r23, Z+1	; 0x01
     ff8:	07 2e       	mov	r0, r23
     ffa:	00 0c       	add	r0, r0
     ffc:	88 0b       	sbc	r24, r24
     ffe:	99 0b       	sbc	r25, r25
    1000:	f9 2d       	mov	r31, r9
    1002:	ff 76       	andi	r31, 0x6F	; 111
    1004:	9f 2e       	mov	r9, r31
    1006:	97 ff       	sbrs	r25, 7
    1008:	09 c0       	rjmp	.+18     	; 0x101c <vfprintf+0x4ec>
    100a:	90 95       	com	r25
    100c:	80 95       	com	r24
    100e:	70 95       	com	r23
    1010:	61 95       	neg	r22
    1012:	7f 4f       	sbci	r23, 0xFF	; 255
    1014:	8f 4f       	sbci	r24, 0xFF	; 255
    1016:	9f 4f       	sbci	r25, 0xFF	; 255
    1018:	f0 68       	ori	r31, 0x80	; 128
    101a:	9f 2e       	mov	r9, r31
    101c:	2a e0       	ldi	r18, 0x0A	; 10
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	a3 01       	movw	r20, r6
    1022:	0e 94 bd 0a 	call	0x157a	; 0x157a <__ultoa_invert>
    1026:	c8 2e       	mov	r12, r24
    1028:	c6 18       	sub	r12, r6
    102a:	3f c0       	rjmp	.+126    	; 0x10aa <vfprintf+0x57a>
    102c:	09 2d       	mov	r16, r9
    102e:	85 37       	cpi	r24, 0x75	; 117
    1030:	21 f4       	brne	.+8      	; 0x103a <vfprintf+0x50a>
    1032:	0f 7e       	andi	r16, 0xEF	; 239
    1034:	2a e0       	ldi	r18, 0x0A	; 10
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	1d c0       	rjmp	.+58     	; 0x1074 <vfprintf+0x544>
    103a:	09 7f       	andi	r16, 0xF9	; 249
    103c:	8f 36       	cpi	r24, 0x6F	; 111
    103e:	91 f0       	breq	.+36     	; 0x1064 <vfprintf+0x534>
    1040:	18 f4       	brcc	.+6      	; 0x1048 <vfprintf+0x518>
    1042:	88 35       	cpi	r24, 0x58	; 88
    1044:	59 f0       	breq	.+22     	; 0x105c <vfprintf+0x52c>
    1046:	c3 c0       	rjmp	.+390    	; 0x11ce <vfprintf+0x69e>
    1048:	80 37       	cpi	r24, 0x70	; 112
    104a:	19 f0       	breq	.+6      	; 0x1052 <vfprintf+0x522>
    104c:	88 37       	cpi	r24, 0x78	; 120
    104e:	11 f0       	breq	.+4      	; 0x1054 <vfprintf+0x524>
    1050:	be c0       	rjmp	.+380    	; 0x11ce <vfprintf+0x69e>
    1052:	00 61       	ori	r16, 0x10	; 16
    1054:	04 ff       	sbrs	r16, 4
    1056:	09 c0       	rjmp	.+18     	; 0x106a <vfprintf+0x53a>
    1058:	04 60       	ori	r16, 0x04	; 4
    105a:	07 c0       	rjmp	.+14     	; 0x106a <vfprintf+0x53a>
    105c:	94 fe       	sbrs	r9, 4
    105e:	08 c0       	rjmp	.+16     	; 0x1070 <vfprintf+0x540>
    1060:	06 60       	ori	r16, 0x06	; 6
    1062:	06 c0       	rjmp	.+12     	; 0x1070 <vfprintf+0x540>
    1064:	28 e0       	ldi	r18, 0x08	; 8
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	05 c0       	rjmp	.+10     	; 0x1074 <vfprintf+0x544>
    106a:	20 e1       	ldi	r18, 0x10	; 16
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <vfprintf+0x544>
    1070:	20 e1       	ldi	r18, 0x10	; 16
    1072:	32 e0       	ldi	r19, 0x02	; 2
    1074:	56 01       	movw	r10, r12
    1076:	07 ff       	sbrs	r16, 7
    1078:	09 c0       	rjmp	.+18     	; 0x108c <vfprintf+0x55c>
    107a:	84 e0       	ldi	r24, 0x04	; 4
    107c:	a8 0e       	add	r10, r24
    107e:	b1 1c       	adc	r11, r1
    1080:	f6 01       	movw	r30, r12
    1082:	60 81       	ld	r22, Z
    1084:	71 81       	ldd	r23, Z+1	; 0x01
    1086:	82 81       	ldd	r24, Z+2	; 0x02
    1088:	93 81       	ldd	r25, Z+3	; 0x03
    108a:	08 c0       	rjmp	.+16     	; 0x109c <vfprintf+0x56c>
    108c:	f2 e0       	ldi	r31, 0x02	; 2
    108e:	af 0e       	add	r10, r31
    1090:	b1 1c       	adc	r11, r1
    1092:	f6 01       	movw	r30, r12
    1094:	60 81       	ld	r22, Z
    1096:	71 81       	ldd	r23, Z+1	; 0x01
    1098:	80 e0       	ldi	r24, 0x00	; 0
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	a3 01       	movw	r20, r6
    109e:	0e 94 bd 0a 	call	0x157a	; 0x157a <__ultoa_invert>
    10a2:	c8 2e       	mov	r12, r24
    10a4:	c6 18       	sub	r12, r6
    10a6:	0f 77       	andi	r16, 0x7F	; 127
    10a8:	90 2e       	mov	r9, r16
    10aa:	96 fe       	sbrs	r9, 6
    10ac:	0b c0       	rjmp	.+22     	; 0x10c4 <vfprintf+0x594>
    10ae:	09 2d       	mov	r16, r9
    10b0:	0e 7f       	andi	r16, 0xFE	; 254
    10b2:	c1 16       	cp	r12, r17
    10b4:	50 f4       	brcc	.+20     	; 0x10ca <vfprintf+0x59a>
    10b6:	94 fe       	sbrs	r9, 4
    10b8:	0a c0       	rjmp	.+20     	; 0x10ce <vfprintf+0x59e>
    10ba:	92 fc       	sbrc	r9, 2
    10bc:	08 c0       	rjmp	.+16     	; 0x10ce <vfprintf+0x59e>
    10be:	09 2d       	mov	r16, r9
    10c0:	0e 7e       	andi	r16, 0xEE	; 238
    10c2:	05 c0       	rjmp	.+10     	; 0x10ce <vfprintf+0x59e>
    10c4:	dc 2c       	mov	r13, r12
    10c6:	09 2d       	mov	r16, r9
    10c8:	03 c0       	rjmp	.+6      	; 0x10d0 <vfprintf+0x5a0>
    10ca:	dc 2c       	mov	r13, r12
    10cc:	01 c0       	rjmp	.+2      	; 0x10d0 <vfprintf+0x5a0>
    10ce:	d1 2e       	mov	r13, r17
    10d0:	04 ff       	sbrs	r16, 4
    10d2:	0d c0       	rjmp	.+26     	; 0x10ee <vfprintf+0x5be>
    10d4:	fe 01       	movw	r30, r28
    10d6:	ec 0d       	add	r30, r12
    10d8:	f1 1d       	adc	r31, r1
    10da:	80 81       	ld	r24, Z
    10dc:	80 33       	cpi	r24, 0x30	; 48
    10de:	11 f4       	brne	.+4      	; 0x10e4 <vfprintf+0x5b4>
    10e0:	09 7e       	andi	r16, 0xE9	; 233
    10e2:	09 c0       	rjmp	.+18     	; 0x10f6 <vfprintf+0x5c6>
    10e4:	02 ff       	sbrs	r16, 2
    10e6:	06 c0       	rjmp	.+12     	; 0x10f4 <vfprintf+0x5c4>
    10e8:	d3 94       	inc	r13
    10ea:	d3 94       	inc	r13
    10ec:	04 c0       	rjmp	.+8      	; 0x10f6 <vfprintf+0x5c6>
    10ee:	80 2f       	mov	r24, r16
    10f0:	86 78       	andi	r24, 0x86	; 134
    10f2:	09 f0       	breq	.+2      	; 0x10f6 <vfprintf+0x5c6>
    10f4:	d3 94       	inc	r13
    10f6:	03 fd       	sbrc	r16, 3
    10f8:	11 c0       	rjmp	.+34     	; 0x111c <vfprintf+0x5ec>
    10fa:	00 ff       	sbrs	r16, 0
    10fc:	06 c0       	rjmp	.+12     	; 0x110a <vfprintf+0x5da>
    10fe:	1c 2d       	mov	r17, r12
    1100:	d5 14       	cp	r13, r5
    1102:	80 f4       	brcc	.+32     	; 0x1124 <vfprintf+0x5f4>
    1104:	15 0d       	add	r17, r5
    1106:	1d 19       	sub	r17, r13
    1108:	0d c0       	rjmp	.+26     	; 0x1124 <vfprintf+0x5f4>
    110a:	d5 14       	cp	r13, r5
    110c:	58 f4       	brcc	.+22     	; 0x1124 <vfprintf+0x5f4>
    110e:	b7 01       	movw	r22, r14
    1110:	80 e2       	ldi	r24, 0x20	; 32
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
    1118:	d3 94       	inc	r13
    111a:	f7 cf       	rjmp	.-18     	; 0x110a <vfprintf+0x5da>
    111c:	d5 14       	cp	r13, r5
    111e:	10 f4       	brcc	.+4      	; 0x1124 <vfprintf+0x5f4>
    1120:	5d 18       	sub	r5, r13
    1122:	01 c0       	rjmp	.+2      	; 0x1126 <vfprintf+0x5f6>
    1124:	51 2c       	mov	r5, r1
    1126:	04 ff       	sbrs	r16, 4
    1128:	10 c0       	rjmp	.+32     	; 0x114a <vfprintf+0x61a>
    112a:	b7 01       	movw	r22, r14
    112c:	80 e3       	ldi	r24, 0x30	; 48
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
    1134:	02 ff       	sbrs	r16, 2
    1136:	17 c0       	rjmp	.+46     	; 0x1166 <vfprintf+0x636>
    1138:	01 fd       	sbrc	r16, 1
    113a:	03 c0       	rjmp	.+6      	; 0x1142 <vfprintf+0x612>
    113c:	88 e7       	ldi	r24, 0x78	; 120
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	02 c0       	rjmp	.+4      	; 0x1146 <vfprintf+0x616>
    1142:	88 e5       	ldi	r24, 0x58	; 88
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	b7 01       	movw	r22, r14
    1148:	0c c0       	rjmp	.+24     	; 0x1162 <vfprintf+0x632>
    114a:	80 2f       	mov	r24, r16
    114c:	86 78       	andi	r24, 0x86	; 134
    114e:	59 f0       	breq	.+22     	; 0x1166 <vfprintf+0x636>
    1150:	01 ff       	sbrs	r16, 1
    1152:	02 c0       	rjmp	.+4      	; 0x1158 <vfprintf+0x628>
    1154:	8b e2       	ldi	r24, 0x2B	; 43
    1156:	01 c0       	rjmp	.+2      	; 0x115a <vfprintf+0x62a>
    1158:	80 e2       	ldi	r24, 0x20	; 32
    115a:	07 fd       	sbrc	r16, 7
    115c:	8d e2       	ldi	r24, 0x2D	; 45
    115e:	b7 01       	movw	r22, r14
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
    1166:	c1 16       	cp	r12, r17
    1168:	38 f4       	brcc	.+14     	; 0x1178 <vfprintf+0x648>
    116a:	b7 01       	movw	r22, r14
    116c:	80 e3       	ldi	r24, 0x30	; 48
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
    1174:	11 50       	subi	r17, 0x01	; 1
    1176:	f7 cf       	rjmp	.-18     	; 0x1166 <vfprintf+0x636>
    1178:	ca 94       	dec	r12
    117a:	f3 01       	movw	r30, r6
    117c:	ec 0d       	add	r30, r12
    117e:	f1 1d       	adc	r31, r1
    1180:	80 81       	ld	r24, Z
    1182:	b7 01       	movw	r22, r14
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
    118a:	c1 10       	cpse	r12, r1
    118c:	f5 cf       	rjmp	.-22     	; 0x1178 <vfprintf+0x648>
    118e:	15 c0       	rjmp	.+42     	; 0x11ba <vfprintf+0x68a>
    1190:	f4 e0       	ldi	r31, 0x04	; 4
    1192:	f5 15       	cp	r31, r5
    1194:	60 f5       	brcc	.+88     	; 0x11ee <vfprintf+0x6be>
    1196:	84 e0       	ldi	r24, 0x04	; 4
    1198:	58 1a       	sub	r5, r24
    119a:	93 fe       	sbrs	r9, 3
    119c:	1f c0       	rjmp	.+62     	; 0x11dc <vfprintf+0x6ac>
    119e:	01 11       	cpse	r16, r1
    11a0:	27 c0       	rjmp	.+78     	; 0x11f0 <vfprintf+0x6c0>
    11a2:	2c 85       	ldd	r18, Y+12	; 0x0c
    11a4:	23 ff       	sbrs	r18, 3
    11a6:	2a c0       	rjmp	.+84     	; 0x11fc <vfprintf+0x6cc>
    11a8:	06 e9       	ldi	r16, 0x96	; 150
    11aa:	10 e0       	ldi	r17, 0x00	; 0
    11ac:	39 2d       	mov	r19, r9
    11ae:	30 71       	andi	r19, 0x10	; 16
    11b0:	93 2e       	mov	r9, r19
    11b2:	f8 01       	movw	r30, r16
    11b4:	84 91       	lpm	r24, Z
    11b6:	81 11       	cpse	r24, r1
    11b8:	24 c0       	rjmp	.+72     	; 0x1202 <vfprintf+0x6d2>
    11ba:	55 20       	and	r5, r5
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <vfprintf+0x690>
    11be:	e4 cc       	rjmp	.-1592   	; 0xb88 <vfprintf+0x58>
    11c0:	b7 01       	movw	r22, r14
    11c2:	80 e2       	ldi	r24, 0x20	; 32
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
    11ca:	5a 94       	dec	r5
    11cc:	f6 cf       	rjmp	.-20     	; 0x11ba <vfprintf+0x68a>
    11ce:	f7 01       	movw	r30, r14
    11d0:	86 81       	ldd	r24, Z+6	; 0x06
    11d2:	97 81       	ldd	r25, Z+7	; 0x07
    11d4:	26 c0       	rjmp	.+76     	; 0x1222 <vfprintf+0x6f2>
    11d6:	8f ef       	ldi	r24, 0xFF	; 255
    11d8:	9f ef       	ldi	r25, 0xFF	; 255
    11da:	23 c0       	rjmp	.+70     	; 0x1222 <vfprintf+0x6f2>
    11dc:	b7 01       	movw	r22, r14
    11de:	80 e2       	ldi	r24, 0x20	; 32
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
    11e6:	5a 94       	dec	r5
    11e8:	51 10       	cpse	r5, r1
    11ea:	f8 cf       	rjmp	.-16     	; 0x11dc <vfprintf+0x6ac>
    11ec:	d8 cf       	rjmp	.-80     	; 0x119e <vfprintf+0x66e>
    11ee:	51 2c       	mov	r5, r1
    11f0:	b7 01       	movw	r22, r14
    11f2:	80 2f       	mov	r24, r16
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
    11fa:	d3 cf       	rjmp	.-90     	; 0x11a2 <vfprintf+0x672>
    11fc:	0a e9       	ldi	r16, 0x9A	; 154
    11fe:	10 e0       	ldi	r17, 0x00	; 0
    1200:	d5 cf       	rjmp	.-86     	; 0x11ac <vfprintf+0x67c>
    1202:	91 10       	cpse	r9, r1
    1204:	80 52       	subi	r24, 0x20	; 32
    1206:	b7 01       	movw	r22, r14
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	0e 94 5f 0a 	call	0x14be	; 0x14be <fputc>
    120e:	0f 5f       	subi	r16, 0xFF	; 255
    1210:	1f 4f       	sbci	r17, 0xFF	; 255
    1212:	cf cf       	rjmp	.-98     	; 0x11b2 <vfprintf+0x682>
    1214:	23 e0       	ldi	r18, 0x03	; 3
    1216:	25 15       	cp	r18, r5
    1218:	10 f4       	brcc	.+4      	; 0x121e <vfprintf+0x6ee>
    121a:	83 e0       	ldi	r24, 0x03	; 3
    121c:	bd cf       	rjmp	.-134    	; 0x1198 <vfprintf+0x668>
    121e:	51 2c       	mov	r5, r1
    1220:	c0 cf       	rjmp	.-128    	; 0x11a2 <vfprintf+0x672>
    1222:	60 96       	adiw	r28, 0x10	; 16
    1224:	e2 e1       	ldi	r30, 0x12	; 18
    1226:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__epilogue_restores__>

0000122a <__prologue_saves__>:
    122a:	2f 92       	push	r2
    122c:	3f 92       	push	r3
    122e:	4f 92       	push	r4
    1230:	5f 92       	push	r5
    1232:	6f 92       	push	r6
    1234:	7f 92       	push	r7
    1236:	8f 92       	push	r8
    1238:	9f 92       	push	r9
    123a:	af 92       	push	r10
    123c:	bf 92       	push	r11
    123e:	cf 92       	push	r12
    1240:	df 92       	push	r13
    1242:	ef 92       	push	r14
    1244:	ff 92       	push	r15
    1246:	0f 93       	push	r16
    1248:	1f 93       	push	r17
    124a:	cf 93       	push	r28
    124c:	df 93       	push	r29
    124e:	cd b7       	in	r28, 0x3d	; 61
    1250:	de b7       	in	r29, 0x3e	; 62
    1252:	ca 1b       	sub	r28, r26
    1254:	db 0b       	sbc	r29, r27
    1256:	0f b6       	in	r0, 0x3f	; 63
    1258:	f8 94       	cli
    125a:	de bf       	out	0x3e, r29	; 62
    125c:	0f be       	out	0x3f, r0	; 63
    125e:	cd bf       	out	0x3d, r28	; 61
    1260:	09 94       	ijmp

00001262 <__epilogue_restores__>:
    1262:	2a 88       	ldd	r2, Y+18	; 0x12
    1264:	39 88       	ldd	r3, Y+17	; 0x11
    1266:	48 88       	ldd	r4, Y+16	; 0x10
    1268:	5f 84       	ldd	r5, Y+15	; 0x0f
    126a:	6e 84       	ldd	r6, Y+14	; 0x0e
    126c:	7d 84       	ldd	r7, Y+13	; 0x0d
    126e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1270:	9b 84       	ldd	r9, Y+11	; 0x0b
    1272:	aa 84       	ldd	r10, Y+10	; 0x0a
    1274:	b9 84       	ldd	r11, Y+9	; 0x09
    1276:	c8 84       	ldd	r12, Y+8	; 0x08
    1278:	df 80       	ldd	r13, Y+7	; 0x07
    127a:	ee 80       	ldd	r14, Y+6	; 0x06
    127c:	fd 80       	ldd	r15, Y+5	; 0x05
    127e:	0c 81       	ldd	r16, Y+4	; 0x04
    1280:	1b 81       	ldd	r17, Y+3	; 0x03
    1282:	aa 81       	ldd	r26, Y+2	; 0x02
    1284:	b9 81       	ldd	r27, Y+1	; 0x01
    1286:	ce 0f       	add	r28, r30
    1288:	d1 1d       	adc	r29, r1
    128a:	0f b6       	in	r0, 0x3f	; 63
    128c:	f8 94       	cli
    128e:	de bf       	out	0x3e, r29	; 62
    1290:	0f be       	out	0x3f, r0	; 63
    1292:	cd bf       	out	0x3d, r28	; 61
    1294:	ed 01       	movw	r28, r26
    1296:	08 95       	ret

00001298 <__ftoa_engine>:
    1298:	28 30       	cpi	r18, 0x08	; 8
    129a:	08 f0       	brcs	.+2      	; 0x129e <__ftoa_engine+0x6>
    129c:	27 e0       	ldi	r18, 0x07	; 7
    129e:	33 27       	eor	r19, r19
    12a0:	da 01       	movw	r26, r20
    12a2:	99 0f       	add	r25, r25
    12a4:	31 1d       	adc	r19, r1
    12a6:	87 fd       	sbrc	r24, 7
    12a8:	91 60       	ori	r25, 0x01	; 1
    12aa:	00 96       	adiw	r24, 0x00	; 0
    12ac:	61 05       	cpc	r22, r1
    12ae:	71 05       	cpc	r23, r1
    12b0:	39 f4       	brne	.+14     	; 0x12c0 <__ftoa_engine+0x28>
    12b2:	32 60       	ori	r19, 0x02	; 2
    12b4:	2e 5f       	subi	r18, 0xFE	; 254
    12b6:	3d 93       	st	X+, r19
    12b8:	30 e3       	ldi	r19, 0x30	; 48
    12ba:	2a 95       	dec	r18
    12bc:	e1 f7       	brne	.-8      	; 0x12b6 <__ftoa_engine+0x1e>
    12be:	08 95       	ret
    12c0:	9f 3f       	cpi	r25, 0xFF	; 255
    12c2:	30 f0       	brcs	.+12     	; 0x12d0 <__ftoa_engine+0x38>
    12c4:	80 38       	cpi	r24, 0x80	; 128
    12c6:	71 05       	cpc	r23, r1
    12c8:	61 05       	cpc	r22, r1
    12ca:	09 f0       	breq	.+2      	; 0x12ce <__ftoa_engine+0x36>
    12cc:	3c 5f       	subi	r19, 0xFC	; 252
    12ce:	3c 5f       	subi	r19, 0xFC	; 252
    12d0:	3d 93       	st	X+, r19
    12d2:	91 30       	cpi	r25, 0x01	; 1
    12d4:	08 f0       	brcs	.+2      	; 0x12d8 <__ftoa_engine+0x40>
    12d6:	80 68       	ori	r24, 0x80	; 128
    12d8:	91 1d       	adc	r25, r1
    12da:	df 93       	push	r29
    12dc:	cf 93       	push	r28
    12de:	1f 93       	push	r17
    12e0:	0f 93       	push	r16
    12e2:	ff 92       	push	r15
    12e4:	ef 92       	push	r14
    12e6:	19 2f       	mov	r17, r25
    12e8:	98 7f       	andi	r25, 0xF8	; 248
    12ea:	96 95       	lsr	r25
    12ec:	e9 2f       	mov	r30, r25
    12ee:	96 95       	lsr	r25
    12f0:	96 95       	lsr	r25
    12f2:	e9 0f       	add	r30, r25
    12f4:	ff 27       	eor	r31, r31
    12f6:	e8 50       	subi	r30, 0x08	; 8
    12f8:	ff 4f       	sbci	r31, 0xFF	; 255
    12fa:	99 27       	eor	r25, r25
    12fc:	33 27       	eor	r19, r19
    12fe:	ee 24       	eor	r14, r14
    1300:	ff 24       	eor	r15, r15
    1302:	a7 01       	movw	r20, r14
    1304:	e7 01       	movw	r28, r14
    1306:	05 90       	lpm	r0, Z+
    1308:	08 94       	sec
    130a:	07 94       	ror	r0
    130c:	28 f4       	brcc	.+10     	; 0x1318 <__ftoa_engine+0x80>
    130e:	36 0f       	add	r19, r22
    1310:	e7 1e       	adc	r14, r23
    1312:	f8 1e       	adc	r15, r24
    1314:	49 1f       	adc	r20, r25
    1316:	51 1d       	adc	r21, r1
    1318:	66 0f       	add	r22, r22
    131a:	77 1f       	adc	r23, r23
    131c:	88 1f       	adc	r24, r24
    131e:	99 1f       	adc	r25, r25
    1320:	06 94       	lsr	r0
    1322:	a1 f7       	brne	.-24     	; 0x130c <__ftoa_engine+0x74>
    1324:	05 90       	lpm	r0, Z+
    1326:	07 94       	ror	r0
    1328:	28 f4       	brcc	.+10     	; 0x1334 <__ftoa_engine+0x9c>
    132a:	e7 0e       	add	r14, r23
    132c:	f8 1e       	adc	r15, r24
    132e:	49 1f       	adc	r20, r25
    1330:	56 1f       	adc	r21, r22
    1332:	c1 1d       	adc	r28, r1
    1334:	77 0f       	add	r23, r23
    1336:	88 1f       	adc	r24, r24
    1338:	99 1f       	adc	r25, r25
    133a:	66 1f       	adc	r22, r22
    133c:	06 94       	lsr	r0
    133e:	a1 f7       	brne	.-24     	; 0x1328 <__ftoa_engine+0x90>
    1340:	05 90       	lpm	r0, Z+
    1342:	07 94       	ror	r0
    1344:	28 f4       	brcc	.+10     	; 0x1350 <__ftoa_engine+0xb8>
    1346:	f8 0e       	add	r15, r24
    1348:	49 1f       	adc	r20, r25
    134a:	56 1f       	adc	r21, r22
    134c:	c7 1f       	adc	r28, r23
    134e:	d1 1d       	adc	r29, r1
    1350:	88 0f       	add	r24, r24
    1352:	99 1f       	adc	r25, r25
    1354:	66 1f       	adc	r22, r22
    1356:	77 1f       	adc	r23, r23
    1358:	06 94       	lsr	r0
    135a:	a1 f7       	brne	.-24     	; 0x1344 <__ftoa_engine+0xac>
    135c:	05 90       	lpm	r0, Z+
    135e:	07 94       	ror	r0
    1360:	20 f4       	brcc	.+8      	; 0x136a <__ftoa_engine+0xd2>
    1362:	49 0f       	add	r20, r25
    1364:	56 1f       	adc	r21, r22
    1366:	c7 1f       	adc	r28, r23
    1368:	d8 1f       	adc	r29, r24
    136a:	99 0f       	add	r25, r25
    136c:	66 1f       	adc	r22, r22
    136e:	77 1f       	adc	r23, r23
    1370:	88 1f       	adc	r24, r24
    1372:	06 94       	lsr	r0
    1374:	a9 f7       	brne	.-22     	; 0x1360 <__ftoa_engine+0xc8>
    1376:	84 91       	lpm	r24, Z
    1378:	10 95       	com	r17
    137a:	17 70       	andi	r17, 0x07	; 7
    137c:	41 f0       	breq	.+16     	; 0x138e <__ftoa_engine+0xf6>
    137e:	d6 95       	lsr	r29
    1380:	c7 95       	ror	r28
    1382:	57 95       	ror	r21
    1384:	47 95       	ror	r20
    1386:	f7 94       	ror	r15
    1388:	e7 94       	ror	r14
    138a:	1a 95       	dec	r17
    138c:	c1 f7       	brne	.-16     	; 0x137e <__ftoa_engine+0xe6>
    138e:	ee e9       	ldi	r30, 0x9E	; 158
    1390:	f0 e0       	ldi	r31, 0x00	; 0
    1392:	68 94       	set
    1394:	15 90       	lpm	r1, Z+
    1396:	15 91       	lpm	r17, Z+
    1398:	35 91       	lpm	r19, Z+
    139a:	65 91       	lpm	r22, Z+
    139c:	95 91       	lpm	r25, Z+
    139e:	05 90       	lpm	r0, Z+
    13a0:	7f e2       	ldi	r23, 0x2F	; 47
    13a2:	73 95       	inc	r23
    13a4:	e1 18       	sub	r14, r1
    13a6:	f1 0a       	sbc	r15, r17
    13a8:	43 0b       	sbc	r20, r19
    13aa:	56 0b       	sbc	r21, r22
    13ac:	c9 0b       	sbc	r28, r25
    13ae:	d0 09       	sbc	r29, r0
    13b0:	c0 f7       	brcc	.-16     	; 0x13a2 <__ftoa_engine+0x10a>
    13b2:	e1 0c       	add	r14, r1
    13b4:	f1 1e       	adc	r15, r17
    13b6:	43 1f       	adc	r20, r19
    13b8:	56 1f       	adc	r21, r22
    13ba:	c9 1f       	adc	r28, r25
    13bc:	d0 1d       	adc	r29, r0
    13be:	7e f4       	brtc	.+30     	; 0x13de <__ftoa_engine+0x146>
    13c0:	70 33       	cpi	r23, 0x30	; 48
    13c2:	11 f4       	brne	.+4      	; 0x13c8 <__ftoa_engine+0x130>
    13c4:	8a 95       	dec	r24
    13c6:	e6 cf       	rjmp	.-52     	; 0x1394 <__ftoa_engine+0xfc>
    13c8:	e8 94       	clt
    13ca:	01 50       	subi	r16, 0x01	; 1
    13cc:	30 f0       	brcs	.+12     	; 0x13da <__ftoa_engine+0x142>
    13ce:	08 0f       	add	r16, r24
    13d0:	0a f4       	brpl	.+2      	; 0x13d4 <__ftoa_engine+0x13c>
    13d2:	00 27       	eor	r16, r16
    13d4:	02 17       	cp	r16, r18
    13d6:	08 f4       	brcc	.+2      	; 0x13da <__ftoa_engine+0x142>
    13d8:	20 2f       	mov	r18, r16
    13da:	23 95       	inc	r18
    13dc:	02 2f       	mov	r16, r18
    13de:	7a 33       	cpi	r23, 0x3A	; 58
    13e0:	28 f0       	brcs	.+10     	; 0x13ec <__ftoa_engine+0x154>
    13e2:	79 e3       	ldi	r23, 0x39	; 57
    13e4:	7d 93       	st	X+, r23
    13e6:	2a 95       	dec	r18
    13e8:	e9 f7       	brne	.-6      	; 0x13e4 <__ftoa_engine+0x14c>
    13ea:	10 c0       	rjmp	.+32     	; 0x140c <__ftoa_engine+0x174>
    13ec:	7d 93       	st	X+, r23
    13ee:	2a 95       	dec	r18
    13f0:	89 f6       	brne	.-94     	; 0x1394 <__ftoa_engine+0xfc>
    13f2:	06 94       	lsr	r0
    13f4:	97 95       	ror	r25
    13f6:	67 95       	ror	r22
    13f8:	37 95       	ror	r19
    13fa:	17 95       	ror	r17
    13fc:	17 94       	ror	r1
    13fe:	e1 18       	sub	r14, r1
    1400:	f1 0a       	sbc	r15, r17
    1402:	43 0b       	sbc	r20, r19
    1404:	56 0b       	sbc	r21, r22
    1406:	c9 0b       	sbc	r28, r25
    1408:	d0 09       	sbc	r29, r0
    140a:	98 f0       	brcs	.+38     	; 0x1432 <__ftoa_engine+0x19a>
    140c:	23 95       	inc	r18
    140e:	7e 91       	ld	r23, -X
    1410:	73 95       	inc	r23
    1412:	7a 33       	cpi	r23, 0x3A	; 58
    1414:	08 f0       	brcs	.+2      	; 0x1418 <__ftoa_engine+0x180>
    1416:	70 e3       	ldi	r23, 0x30	; 48
    1418:	7c 93       	st	X, r23
    141a:	20 13       	cpse	r18, r16
    141c:	b8 f7       	brcc	.-18     	; 0x140c <__ftoa_engine+0x174>
    141e:	7e 91       	ld	r23, -X
    1420:	70 61       	ori	r23, 0x10	; 16
    1422:	7d 93       	st	X+, r23
    1424:	30 f0       	brcs	.+12     	; 0x1432 <__ftoa_engine+0x19a>
    1426:	83 95       	inc	r24
    1428:	71 e3       	ldi	r23, 0x31	; 49
    142a:	7d 93       	st	X+, r23
    142c:	70 e3       	ldi	r23, 0x30	; 48
    142e:	2a 95       	dec	r18
    1430:	e1 f7       	brne	.-8      	; 0x142a <__ftoa_engine+0x192>
    1432:	11 24       	eor	r1, r1
    1434:	ef 90       	pop	r14
    1436:	ff 90       	pop	r15
    1438:	0f 91       	pop	r16
    143a:	1f 91       	pop	r17
    143c:	cf 91       	pop	r28
    143e:	df 91       	pop	r29
    1440:	99 27       	eor	r25, r25
    1442:	87 fd       	sbrc	r24, 7
    1444:	90 95       	com	r25
    1446:	08 95       	ret

00001448 <strnlen_P>:
    1448:	fc 01       	movw	r30, r24
    144a:	05 90       	lpm	r0, Z+
    144c:	61 50       	subi	r22, 0x01	; 1
    144e:	70 40       	sbci	r23, 0x00	; 0
    1450:	01 10       	cpse	r0, r1
    1452:	d8 f7       	brcc	.-10     	; 0x144a <strnlen_P+0x2>
    1454:	80 95       	com	r24
    1456:	90 95       	com	r25
    1458:	8e 0f       	add	r24, r30
    145a:	9f 1f       	adc	r25, r31
    145c:	08 95       	ret

0000145e <strnlen>:
    145e:	fc 01       	movw	r30, r24
    1460:	61 50       	subi	r22, 0x01	; 1
    1462:	70 40       	sbci	r23, 0x00	; 0
    1464:	01 90       	ld	r0, Z+
    1466:	01 10       	cpse	r0, r1
    1468:	d8 f7       	brcc	.-10     	; 0x1460 <strnlen+0x2>
    146a:	80 95       	com	r24
    146c:	90 95       	com	r25
    146e:	8e 0f       	add	r24, r30
    1470:	9f 1f       	adc	r25, r31
    1472:	08 95       	ret

00001474 <__itoa_ncheck>:
    1474:	bb 27       	eor	r27, r27
    1476:	4a 30       	cpi	r20, 0x0A	; 10
    1478:	31 f4       	brne	.+12     	; 0x1486 <__itoa_ncheck+0x12>
    147a:	99 23       	and	r25, r25
    147c:	22 f4       	brpl	.+8      	; 0x1486 <__itoa_ncheck+0x12>
    147e:	bd e2       	ldi	r27, 0x2D	; 45
    1480:	90 95       	com	r25
    1482:	81 95       	neg	r24
    1484:	9f 4f       	sbci	r25, 0xFF	; 255
    1486:	0c 94 46 0a 	jmp	0x148c	; 0x148c <__utoa_common>

0000148a <__utoa_ncheck>:
    148a:	bb 27       	eor	r27, r27

0000148c <__utoa_common>:
    148c:	fb 01       	movw	r30, r22
    148e:	55 27       	eor	r21, r21
    1490:	aa 27       	eor	r26, r26
    1492:	88 0f       	add	r24, r24
    1494:	99 1f       	adc	r25, r25
    1496:	aa 1f       	adc	r26, r26
    1498:	a4 17       	cp	r26, r20
    149a:	10 f0       	brcs	.+4      	; 0x14a0 <__utoa_common+0x14>
    149c:	a4 1b       	sub	r26, r20
    149e:	83 95       	inc	r24
    14a0:	50 51       	subi	r21, 0x10	; 16
    14a2:	b9 f7       	brne	.-18     	; 0x1492 <__utoa_common+0x6>
    14a4:	a0 5d       	subi	r26, 0xD0	; 208
    14a6:	aa 33       	cpi	r26, 0x3A	; 58
    14a8:	08 f0       	brcs	.+2      	; 0x14ac <__utoa_common+0x20>
    14aa:	a9 5d       	subi	r26, 0xD9	; 217
    14ac:	a1 93       	st	Z+, r26
    14ae:	00 97       	sbiw	r24, 0x00	; 0
    14b0:	79 f7       	brne	.-34     	; 0x1490 <__utoa_common+0x4>
    14b2:	b1 11       	cpse	r27, r1
    14b4:	b1 93       	st	Z+, r27
    14b6:	11 92       	st	Z+, r1
    14b8:	cb 01       	movw	r24, r22
    14ba:	0c 94 1b 0b 	jmp	0x1636	; 0x1636 <strrev>

000014be <fputc>:
    14be:	0f 93       	push	r16
    14c0:	1f 93       	push	r17
    14c2:	cf 93       	push	r28
    14c4:	df 93       	push	r29
    14c6:	fb 01       	movw	r30, r22
    14c8:	23 81       	ldd	r18, Z+3	; 0x03
    14ca:	21 fd       	sbrc	r18, 1
    14cc:	03 c0       	rjmp	.+6      	; 0x14d4 <fputc+0x16>
    14ce:	8f ef       	ldi	r24, 0xFF	; 255
    14d0:	9f ef       	ldi	r25, 0xFF	; 255
    14d2:	2c c0       	rjmp	.+88     	; 0x152c <fputc+0x6e>
    14d4:	22 ff       	sbrs	r18, 2
    14d6:	16 c0       	rjmp	.+44     	; 0x1504 <fputc+0x46>
    14d8:	46 81       	ldd	r20, Z+6	; 0x06
    14da:	57 81       	ldd	r21, Z+7	; 0x07
    14dc:	24 81       	ldd	r18, Z+4	; 0x04
    14de:	35 81       	ldd	r19, Z+5	; 0x05
    14e0:	42 17       	cp	r20, r18
    14e2:	53 07       	cpc	r21, r19
    14e4:	44 f4       	brge	.+16     	; 0x14f6 <fputc+0x38>
    14e6:	a0 81       	ld	r26, Z
    14e8:	b1 81       	ldd	r27, Z+1	; 0x01
    14ea:	9d 01       	movw	r18, r26
    14ec:	2f 5f       	subi	r18, 0xFF	; 255
    14ee:	3f 4f       	sbci	r19, 0xFF	; 255
    14f0:	31 83       	std	Z+1, r19	; 0x01
    14f2:	20 83       	st	Z, r18
    14f4:	8c 93       	st	X, r24
    14f6:	26 81       	ldd	r18, Z+6	; 0x06
    14f8:	37 81       	ldd	r19, Z+7	; 0x07
    14fa:	2f 5f       	subi	r18, 0xFF	; 255
    14fc:	3f 4f       	sbci	r19, 0xFF	; 255
    14fe:	37 83       	std	Z+7, r19	; 0x07
    1500:	26 83       	std	Z+6, r18	; 0x06
    1502:	14 c0       	rjmp	.+40     	; 0x152c <fputc+0x6e>
    1504:	8b 01       	movw	r16, r22
    1506:	ec 01       	movw	r28, r24
    1508:	fb 01       	movw	r30, r22
    150a:	00 84       	ldd	r0, Z+8	; 0x08
    150c:	f1 85       	ldd	r31, Z+9	; 0x09
    150e:	e0 2d       	mov	r30, r0
    1510:	09 95       	icall
    1512:	89 2b       	or	r24, r25
    1514:	e1 f6       	brne	.-72     	; 0x14ce <fputc+0x10>
    1516:	d8 01       	movw	r26, r16
    1518:	16 96       	adiw	r26, 0x06	; 6
    151a:	8d 91       	ld	r24, X+
    151c:	9c 91       	ld	r25, X
    151e:	17 97       	sbiw	r26, 0x07	; 7
    1520:	01 96       	adiw	r24, 0x01	; 1
    1522:	17 96       	adiw	r26, 0x07	; 7
    1524:	9c 93       	st	X, r25
    1526:	8e 93       	st	-X, r24
    1528:	16 97       	sbiw	r26, 0x06	; 6
    152a:	ce 01       	movw	r24, r28
    152c:	df 91       	pop	r29
    152e:	cf 91       	pop	r28
    1530:	1f 91       	pop	r17
    1532:	0f 91       	pop	r16
    1534:	08 95       	ret

00001536 <sprintf>:
    1536:	ae e0       	ldi	r26, 0x0E	; 14
    1538:	b0 e0       	ldi	r27, 0x00	; 0
    153a:	e1 ea       	ldi	r30, 0xA1	; 161
    153c:	fa e0       	ldi	r31, 0x0A	; 10
    153e:	0c 94 23 09 	jmp	0x1246	; 0x1246 <__prologue_saves__+0x1c>
    1542:	0d 89       	ldd	r16, Y+21	; 0x15
    1544:	1e 89       	ldd	r17, Y+22	; 0x16
    1546:	86 e0       	ldi	r24, 0x06	; 6
    1548:	8c 83       	std	Y+4, r24	; 0x04
    154a:	1a 83       	std	Y+2, r17	; 0x02
    154c:	09 83       	std	Y+1, r16	; 0x01
    154e:	8f ef       	ldi	r24, 0xFF	; 255
    1550:	9f e7       	ldi	r25, 0x7F	; 127
    1552:	9e 83       	std	Y+6, r25	; 0x06
    1554:	8d 83       	std	Y+5, r24	; 0x05
    1556:	ae 01       	movw	r20, r28
    1558:	47 5e       	subi	r20, 0xE7	; 231
    155a:	5f 4f       	sbci	r21, 0xFF	; 255
    155c:	6f 89       	ldd	r22, Y+23	; 0x17
    155e:	78 8d       	ldd	r23, Y+24	; 0x18
    1560:	ce 01       	movw	r24, r28
    1562:	01 96       	adiw	r24, 0x01	; 1
    1564:	0e 94 98 05 	call	0xb30	; 0xb30 <vfprintf>
    1568:	ef 81       	ldd	r30, Y+7	; 0x07
    156a:	f8 85       	ldd	r31, Y+8	; 0x08
    156c:	e0 0f       	add	r30, r16
    156e:	f1 1f       	adc	r31, r17
    1570:	10 82       	st	Z, r1
    1572:	2e 96       	adiw	r28, 0x0e	; 14
    1574:	e4 e0       	ldi	r30, 0x04	; 4
    1576:	0c 94 3f 09 	jmp	0x127e	; 0x127e <__epilogue_restores__+0x1c>

0000157a <__ultoa_invert>:
    157a:	fa 01       	movw	r30, r20
    157c:	aa 27       	eor	r26, r26
    157e:	28 30       	cpi	r18, 0x08	; 8
    1580:	51 f1       	breq	.+84     	; 0x15d6 <__ultoa_invert+0x5c>
    1582:	20 31       	cpi	r18, 0x10	; 16
    1584:	81 f1       	breq	.+96     	; 0x15e6 <__ultoa_invert+0x6c>
    1586:	e8 94       	clt
    1588:	6f 93       	push	r22
    158a:	6e 7f       	andi	r22, 0xFE	; 254
    158c:	6e 5f       	subi	r22, 0xFE	; 254
    158e:	7f 4f       	sbci	r23, 0xFF	; 255
    1590:	8f 4f       	sbci	r24, 0xFF	; 255
    1592:	9f 4f       	sbci	r25, 0xFF	; 255
    1594:	af 4f       	sbci	r26, 0xFF	; 255
    1596:	b1 e0       	ldi	r27, 0x01	; 1
    1598:	3e d0       	rcall	.+124    	; 0x1616 <__ultoa_invert+0x9c>
    159a:	b4 e0       	ldi	r27, 0x04	; 4
    159c:	3c d0       	rcall	.+120    	; 0x1616 <__ultoa_invert+0x9c>
    159e:	67 0f       	add	r22, r23
    15a0:	78 1f       	adc	r23, r24
    15a2:	89 1f       	adc	r24, r25
    15a4:	9a 1f       	adc	r25, r26
    15a6:	a1 1d       	adc	r26, r1
    15a8:	68 0f       	add	r22, r24
    15aa:	79 1f       	adc	r23, r25
    15ac:	8a 1f       	adc	r24, r26
    15ae:	91 1d       	adc	r25, r1
    15b0:	a1 1d       	adc	r26, r1
    15b2:	6a 0f       	add	r22, r26
    15b4:	71 1d       	adc	r23, r1
    15b6:	81 1d       	adc	r24, r1
    15b8:	91 1d       	adc	r25, r1
    15ba:	a1 1d       	adc	r26, r1
    15bc:	20 d0       	rcall	.+64     	; 0x15fe <__ultoa_invert+0x84>
    15be:	09 f4       	brne	.+2      	; 0x15c2 <__ultoa_invert+0x48>
    15c0:	68 94       	set
    15c2:	3f 91       	pop	r19
    15c4:	2a e0       	ldi	r18, 0x0A	; 10
    15c6:	26 9f       	mul	r18, r22
    15c8:	11 24       	eor	r1, r1
    15ca:	30 19       	sub	r19, r0
    15cc:	30 5d       	subi	r19, 0xD0	; 208
    15ce:	31 93       	st	Z+, r19
    15d0:	de f6       	brtc	.-74     	; 0x1588 <__ultoa_invert+0xe>
    15d2:	cf 01       	movw	r24, r30
    15d4:	08 95       	ret
    15d6:	46 2f       	mov	r20, r22
    15d8:	47 70       	andi	r20, 0x07	; 7
    15da:	40 5d       	subi	r20, 0xD0	; 208
    15dc:	41 93       	st	Z+, r20
    15de:	b3 e0       	ldi	r27, 0x03	; 3
    15e0:	0f d0       	rcall	.+30     	; 0x1600 <__ultoa_invert+0x86>
    15e2:	c9 f7       	brne	.-14     	; 0x15d6 <__ultoa_invert+0x5c>
    15e4:	f6 cf       	rjmp	.-20     	; 0x15d2 <__ultoa_invert+0x58>
    15e6:	46 2f       	mov	r20, r22
    15e8:	4f 70       	andi	r20, 0x0F	; 15
    15ea:	40 5d       	subi	r20, 0xD0	; 208
    15ec:	4a 33       	cpi	r20, 0x3A	; 58
    15ee:	18 f0       	brcs	.+6      	; 0x15f6 <__ultoa_invert+0x7c>
    15f0:	49 5d       	subi	r20, 0xD9	; 217
    15f2:	31 fd       	sbrc	r19, 1
    15f4:	40 52       	subi	r20, 0x20	; 32
    15f6:	41 93       	st	Z+, r20
    15f8:	02 d0       	rcall	.+4      	; 0x15fe <__ultoa_invert+0x84>
    15fa:	a9 f7       	brne	.-22     	; 0x15e6 <__ultoa_invert+0x6c>
    15fc:	ea cf       	rjmp	.-44     	; 0x15d2 <__ultoa_invert+0x58>
    15fe:	b4 e0       	ldi	r27, 0x04	; 4
    1600:	a6 95       	lsr	r26
    1602:	97 95       	ror	r25
    1604:	87 95       	ror	r24
    1606:	77 95       	ror	r23
    1608:	67 95       	ror	r22
    160a:	ba 95       	dec	r27
    160c:	c9 f7       	brne	.-14     	; 0x1600 <__ultoa_invert+0x86>
    160e:	00 97       	sbiw	r24, 0x00	; 0
    1610:	61 05       	cpc	r22, r1
    1612:	71 05       	cpc	r23, r1
    1614:	08 95       	ret
    1616:	9b 01       	movw	r18, r22
    1618:	ac 01       	movw	r20, r24
    161a:	0a 2e       	mov	r0, r26
    161c:	06 94       	lsr	r0
    161e:	57 95       	ror	r21
    1620:	47 95       	ror	r20
    1622:	37 95       	ror	r19
    1624:	27 95       	ror	r18
    1626:	ba 95       	dec	r27
    1628:	c9 f7       	brne	.-14     	; 0x161c <__ultoa_invert+0xa2>
    162a:	62 0f       	add	r22, r18
    162c:	73 1f       	adc	r23, r19
    162e:	84 1f       	adc	r24, r20
    1630:	95 1f       	adc	r25, r21
    1632:	a0 1d       	adc	r26, r0
    1634:	08 95       	ret

00001636 <strrev>:
    1636:	dc 01       	movw	r26, r24
    1638:	fc 01       	movw	r30, r24
    163a:	67 2f       	mov	r22, r23
    163c:	71 91       	ld	r23, Z+
    163e:	77 23       	and	r23, r23
    1640:	e1 f7       	brne	.-8      	; 0x163a <strrev+0x4>
    1642:	32 97       	sbiw	r30, 0x02	; 2
    1644:	04 c0       	rjmp	.+8      	; 0x164e <strrev+0x18>
    1646:	7c 91       	ld	r23, X
    1648:	6d 93       	st	X+, r22
    164a:	70 83       	st	Z, r23
    164c:	62 91       	ld	r22, -Z
    164e:	ae 17       	cp	r26, r30
    1650:	bf 07       	cpc	r27, r31
    1652:	c8 f3       	brcs	.-14     	; 0x1646 <strrev+0x10>
    1654:	08 95       	ret

00001656 <_exit>:
    1656:	f8 94       	cli

00001658 <__stop_program>:
    1658:	ff cf       	rjmp	.-2      	; 0x1658 <__stop_program>
